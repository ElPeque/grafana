{"version":3,"file":"9467.bc6b4e0c769ea24aa859.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/EmptyListCTA/EmptyListCTA.tsx","webpack://grafana/./public/app/core/components/Upgrade/ProBadge.tsx","webpack://grafana/./public/app/features/admin/utils.ts","webpack://grafana/./public/app/features/datasources/components/DashboardsTable.tsx","webpack://grafana/./public/app/features/datasources/components/DataSourcesListCard.tsx","webpack://grafana/./public/app/features/datasources/api.ts","webpack://grafana/./public/app/features/datasources/state/buildCategories.ts","webpack://grafana/./public/app/features/datasources/state/actions.ts","webpack://grafana/./public/app/features/datasources/state/hooks.ts","webpack://grafana/./public/app/features/datasources/state/navModel.ts","webpack://grafana/./public/app/features/datasources/state/selectors.ts","webpack://grafana/./public/app/features/datasources/tracking.ts","webpack://grafana/./public/app/features/datasources/utils.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDisabledBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginInstallBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginEnterpriseBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginUpdateAvailableBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginAngularBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDeprecatedBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/sharedStyles.ts","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Changelog.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsPanel.tsx","webpack://grafana/./public/app/features/plugins/admin/components/VersionInstallButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/VersionList.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginConfig.tsx","webpack://grafana/./public/app/features/plugins/admin/components/AppConfigWrapper.tsx","webpack://grafana/./public/app/features/plugins/admin/permissions.ts","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithDataSource.tsx","webpack://grafana/./public/app/features/plugins/admin/components/ConnectionsTab.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDashboards.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginUsage.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsBody.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsDisabledError.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginDetailsTabs.tsx","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithApp.tsx","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithPlugin.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControlsWarning.tsx","webpack://grafana/./public/app/features/plugins/admin/tracking.ts","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControlsButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginActions.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginSubtitle.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderDependencies.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginInfo.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginPageExtensions.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsDeprecatedWarning.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsPage.tsx","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport { MouseEvent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert, Button, CallToActionCard, Icon, IconName, LinkButton } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nexport interface Props {\n  title: string;\n  buttonIcon: IconName;\n  buttonLink?: string;\n  buttonTitle: string;\n  buttonDisabled?: boolean;\n  onClick?: (event: MouseEvent) => void;\n  proTip?: string;\n  proTipLink?: string;\n  proTipLinkTitle?: string;\n  proTipTarget?: string;\n  infoBox?: { __html: string };\n  infoBoxTitle?: string;\n}\n\nconst ctaStyle = css({\n  textAlign: 'center',\n});\n\nconst infoBoxStyles = css({\n  maxWidth: '700px',\n  margin: '0 auto',\n});\n\nconst EmptyListCTA = ({\n  title,\n  buttonIcon,\n  buttonLink,\n  buttonTitle,\n  buttonDisabled,\n  onClick,\n  proTip,\n  proTipLink,\n  proTipLinkTitle,\n  proTipTarget,\n  infoBox,\n  infoBoxTitle,\n}: Props) => {\n  const footer = () => {\n    return (\n      <>\n        {proTip ? (\n          <span key=\"proTipFooter\">\n            <Icon name=\"rocket\" />\n            <Trans i18nKey=\"empty-list-cta.pro-tip\">ProTip: {{ proTip }}</Trans>\n            {proTipLink && (\n              <a href={proTipLink} target={proTipTarget} className=\"text-link\">\n                {proTipLinkTitle}\n              </a>\n            )}\n          </span>\n        ) : (\n          ''\n        )}\n        {infoBox ? (\n          <Alert severity=\"info\" title={infoBoxTitle ?? ''} className={infoBoxStyles}>\n            <div dangerouslySetInnerHTML={infoBox} />\n          </Alert>\n        ) : (\n          ''\n        )}\n      </>\n    );\n  };\n\n  const ctaElementClassName = !footer()\n    ? css({\n        marginBottom: '20px',\n      })\n    : '';\n\n  const ButtonEl = buttonLink ? LinkButton : Button;\n  const ctaElement = (\n    <ButtonEl\n      size=\"lg\"\n      onClick={onClick}\n      href={buttonLink}\n      icon={buttonIcon}\n      className={ctaElementClassName}\n      data-testid={selectors.components.CallToActionCard.buttonV2(buttonTitle)}\n      disabled={buttonDisabled}\n    >\n      {buttonTitle}\n    </ButtonEl>\n  );\n\n  return <CallToActionCard className={ctaStyle} message={title} footer={footer()} callToActionElement={ctaElement} />;\n};\n\nexport default EmptyListCTA;\n","import { css, cx } from '@emotion/css';\nimport { HTMLAttributes, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportExperimentView } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\n\nexport interface Props extends HTMLAttributes<HTMLSpanElement> {\n  text?: string;\n  experimentId?: string;\n  eventVariant?: string;\n}\n\nexport const ProBadge = ({ text = 'PRO', className, experimentId, eventVariant = '', ...htmlProps }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (experimentId) {\n      reportExperimentView(experimentId, 'test', eventVariant);\n    }\n  }, [experimentId, eventVariant]);\n\n  return (\n    <span className={cx(styles.badge, className)} {...htmlProps}>\n      {text}\n    </span>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    badge: css({\n      marginLeft: theme.spacing(1.25),\n      borderRadius: theme.shape.borderRadius(5),\n      backgroundColor: theme.colors.success.main,\n      padding: theme.spacing(0.25, 0.75),\n      color: 'white', // use the same color for both themes\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(10),\n    }),\n  };\n};\n","import { config } from '@grafana/runtime/src';\n\n// https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nexport const w3cStandardEmailValidator =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isTrial() {\n  const expiry = config.licenseInfo?.trialExpiry;\n  return !!(expiry && expiry > 0);\n}\n\nexport const highlightTrial = () => isTrial() && config.featureToggles.featureHighlights;\n","import { Button, Icon } from '@grafana/ui';\nimport { PluginDashboard } from 'app/types';\n\nexport interface Props {\n  // List of plugin dashboards to show in the table\n  dashboards: PluginDashboard[];\n  // Callback used when the user clicks on importing a dashboard\n  onImport: (dashboard: PluginDashboard, overwrite: boolean) => void;\n  // Callback used when the user clicks on removing a dashboard\n  onRemove: (dashboard: PluginDashboard) => void;\n}\n\nexport function DashboardsTable({ dashboards, onImport, onRemove }: Props) {\n  function buttonText(dashboard: PluginDashboard) {\n    return dashboard.revision !== dashboard.importedRevision ? 'Update' : 'Re-import';\n  }\n\n  return (\n    <table className=\"filter-table\">\n      <tbody>\n        {dashboards.map((dashboard, index) => {\n          return (\n            <tr key={`${dashboard.dashboardId}-${index}`}>\n              <td className=\"width-1\">\n                <Icon name=\"apps\" />\n              </td>\n              <td>\n                {dashboard.imported ? (\n                  <a href={dashboard.importedUrl}>{dashboard.title}</a>\n                ) : (\n                  <span>{dashboard.title}</span>\n                )}\n              </td>\n              <td style={{ textAlign: 'right' }}>\n                {!dashboard.imported ? (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, false)}>\n                    Import\n                  </Button>\n                ) : (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, true)}>\n                    {buttonText(dashboard)}\n                  </Button>\n                )}\n                {dashboard.imported && (\n                  <Button\n                    aria-label=\"Delete dashboard\"\n                    icon=\"trash-alt\"\n                    variant=\"destructive\"\n                    size=\"sm\"\n                    onClick={() => onRemove(dashboard)}\n                  />\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default DashboardsTable;\n","import { css } from '@emotion/css';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { DataSourceSettings, GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Card, LinkButton, Stack, Tag, useStyles2 } from '@grafana/ui';\n\nimport { ROUTES } from '../../connections/constants';\nimport { trackCreateDashboardClicked, trackExploreClicked } from '../tracking';\nimport { constructDataSourceExploreUrl } from '../utils';\n\nexport interface Props {\n  dataSource: DataSourceSettings;\n  hasWriteRights: boolean;\n  hasExploreRights: boolean;\n}\n\nexport function DataSourcesListCard({ dataSource, hasWriteRights, hasExploreRights }: Props) {\n  const dsLink = config.appSubUrl + ROUTES.DataSourcesEdit.replace(/:uid/gi, dataSource.uid);\n  const styles = useStyles2(getStyles);\n\n  return (\n    <Card href={hasWriteRights ? dsLink : undefined}>\n      <Card.Heading>{dataSource.name}</Card.Heading>\n      <Card.Figure>\n        <img src={dataSource.typeLogoUrl} alt=\"\" height=\"40px\" width=\"40px\" className={styles.logo} />\n      </Card.Figure>\n      <Card.Meta>\n        {[\n          dataSource.typeName,\n          dataSource.url,\n          dataSource.isDefault && <Tag key=\"default-tag\" name={'default'} colorIndex={1} />,\n        ]}\n      </Card.Meta>\n      <Card.Tags>\n        {/* Build Dashboard */}\n        <LinkButton\n          icon=\"apps\"\n          fill=\"outline\"\n          variant=\"secondary\"\n          href={`dashboard/new-with-ds/${dataSource.uid}`}\n          onClick={() => {\n            trackCreateDashboardClicked({\n              grafana_version: config.buildInfo.version,\n              datasource_uid: dataSource.uid,\n              plugin_name: dataSource.typeName,\n              path: location.pathname,\n            });\n          }}\n        >\n          Build a dashboard\n        </LinkButton>\n\n        {/* Explore */}\n        {hasExploreRights && (\n          <LinkButton\n            icon=\"compass\"\n            fill=\"outline\"\n            variant=\"secondary\"\n            className={styles.button}\n            href={constructDataSourceExploreUrl(dataSource)}\n            onClick={() => {\n              trackExploreClicked({\n                grafana_version: config.buildInfo.version,\n                datasource_uid: dataSource.uid,\n                plugin_name: dataSource.typeName,\n                path: location.pathname,\n              });\n            }}\n          >\n            Explore\n          </LinkButton>\n        )}\n      </Card.Tags>\n    </Card>\n  );\n}\n\nfunction DataSourcesListCardSkeleton({ hasExploreRights }: Pick<Props, 'hasExploreRights'>) {\n  const skeletonStyles = useStyles2(getSkeletonStyles);\n  return (\n    <Card>\n      <Card.Heading>\n        <Skeleton width={140} />\n      </Card.Heading>\n      <Card.Figure>\n        <Skeleton width={40} height={40} containerClassName={skeletonStyles.figure} />\n      </Card.Figure>\n      <Card.Meta>\n        <Skeleton width={120} />\n      </Card.Meta>\n      <Card.Tags>\n        <Stack direction=\"row\" gap={2}>\n          <Skeleton height={32} width={179} containerClassName={skeletonStyles.button} />\n\n          {/* Explore */}\n          {hasExploreRights && <Skeleton height={32} width={107} containerClassName={skeletonStyles.button} />}\n        </Stack>\n      </Card.Tags>\n    </Card>\n  );\n}\n\nDataSourcesListCard.Skeleton = DataSourcesListCardSkeleton;\n\nconst getSkeletonStyles = () => {\n  return {\n    button: css({\n      lineHeight: 1,\n    }),\n    figure: css({\n      lineHeight: 1,\n    }),\n  };\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    logo: css({\n      objectFit: 'contain',\n    }),\n    button: css({\n      marginLeft: theme.spacing(2),\n    }),\n  };\n};\n","import { lastValueFrom } from 'rxjs';\n\nimport { DataSourceSettings } from '@grafana/data';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { accessControlQueryParam } from 'app/core/utils/accessControl';\n\nexport const getDataSources = async (): Promise<DataSourceSettings[]> => {\n  return await getBackendSrv().get('/api/datasources');\n};\n\n/**\n * @deprecated Use `getDataSourceByUid` instead.\n */\nexport const getDataSourceById = async (id: string) => {\n  const response = await lastValueFrom(\n    getBackendSrv().fetch<DataSourceSettings>({\n      method: 'GET',\n      url: `/api/datasources/${id}`,\n      params: accessControlQueryParam(),\n      showErrorAlert: false,\n    })\n  );\n\n  if (response.ok) {\n    return response.data;\n  }\n\n  throw Error(`Could not find data source by ID: \"${id}\"`);\n};\n\nexport const getDataSourceByUid = async (uid: string) => {\n  const response = await lastValueFrom(\n    getBackendSrv().fetch<DataSourceSettings>({\n      method: 'GET',\n      url: `/api/datasources/uid/${uid}`,\n      params: accessControlQueryParam(),\n      showErrorAlert: false,\n    })\n  );\n\n  if (response.ok) {\n    return response.data;\n  }\n\n  throw Error(`Could not find data source by UID: \"${uid}\"`);\n};\n\nexport const getDataSourceByIdOrUid = async (idOrUid: string) => {\n  // Try with UID first, as we are trying to migrate to that\n  try {\n    return await getDataSourceByUid(idOrUid);\n  } catch (err) {\n    console.log(`Failed to lookup data source using UID \"${idOrUid}\"`);\n  }\n\n  // Try using ID\n  try {\n    return await getDataSourceById(idOrUid);\n  } catch (err) {\n    console.log(`Failed to lookup data source using ID \"${idOrUid}\"`);\n  }\n\n  throw Error('Could not find data source');\n};\n\nexport const createDataSource = (dataSource: Partial<DataSourceSettings>) =>\n  getBackendSrv().post('/api/datasources', dataSource);\n\nexport const getDataSourcePlugins = () => getBackendSrv().get('/api/plugins', { enabled: 1, type: 'datasource' });\n\nexport const updateDataSource = (dataSource: DataSourceSettings) => {\n  // we're setting showErrorAlert and showSuccessAlert to false to suppress the popover notifications. Request result will now be\n  // handled by the data source config page\n  return getBackendSrv().put(`/api/datasources/uid/${dataSource.uid}`, dataSource, {\n    showErrorAlert: false,\n    showSuccessAlert: false,\n  });\n};\n\nexport const deleteDataSource = (uid: string) => getBackendSrv().delete(`/api/datasources/uid/${uid}`);\n","import { DataSourcePluginMeta, PluginType } from '@grafana/data';\nimport { featureEnabled } from '@grafana/runtime';\nimport { DataSourcePluginCategory } from 'app/types';\n\nexport function buildCategories(plugins: DataSourcePluginMeta[]): DataSourcePluginCategory[] {\n  const categories: DataSourcePluginCategory[] = [\n    { id: 'tsdb', title: 'Time series databases', plugins: [] },\n    { id: 'logging', title: 'Logging & document databases', plugins: [] },\n    { id: 'tracing', title: 'Distributed tracing', plugins: [] },\n    { id: 'profiling', title: 'Profiling', plugins: [] },\n    { id: 'sql', title: 'SQL', plugins: [] },\n    { id: 'cloud', title: 'Cloud', plugins: [] },\n    { id: 'enterprise', title: 'Enterprise plugins', plugins: [] },\n    { id: 'iot', title: 'Industrial & IoT', plugins: [] },\n    { id: 'other', title: 'Others', plugins: [] },\n  ].filter((item) => item);\n\n  const categoryIndex: Record<string, DataSourcePluginCategory> = {};\n  const pluginIndex: Record<string, DataSourcePluginMeta> = {};\n  const enterprisePlugins = getEnterprisePhantomPlugins();\n\n  // build indices\n  for (const category of categories) {\n    categoryIndex[category.id] = category;\n  }\n\n  for (const plugin of plugins) {\n    const enterprisePlugin = enterprisePlugins.find((item) => item.id === plugin.id);\n    // Force category for enterprise plugins\n    if (plugin.enterprise || enterprisePlugin) {\n      plugin.category = 'enterprise';\n      plugin.unlicensed = !featureEnabled('enterprise.plugins');\n      plugin.info.links = enterprisePlugin?.info?.links || plugin.info.links;\n    }\n\n    // Fix link name\n    if (plugin.info.links) {\n      for (const link of plugin.info.links) {\n        link.name = 'Learn more';\n      }\n    }\n\n    const category = categories.find((item) => item.id === plugin.category) || categoryIndex['other'];\n    category.plugins.push(plugin);\n    // add to plugin index\n    pluginIndex[plugin.id] = plugin;\n  }\n\n  for (const category of categories) {\n    // add phantom plugin\n    if (category.id === 'cloud') {\n      category.plugins.push(getGrafanaCloudPhantomPlugin());\n    }\n\n    // add phantom plugins\n    if (category.id === 'enterprise') {\n      for (const plugin of enterprisePlugins) {\n        if (!pluginIndex[plugin.id]) {\n          category.plugins.push(plugin);\n        }\n      }\n    }\n\n    sortPlugins(category.plugins);\n  }\n\n  // Only show categories with plugins\n  return categories.filter((c) => c.plugins.length > 0);\n}\n\nfunction sortPlugins(plugins: DataSourcePluginMeta[]) {\n  const sortingRules: { [id: string]: number } = {\n    prometheus: 100,\n    graphite: 95,\n    loki: 90,\n    mysql: 80,\n    jaeger: 100,\n    postgres: 79,\n    gcloud: -1,\n  };\n\n  plugins.sort((a, b) => {\n    const aSort = sortingRules[a.id] || 0;\n    const bSort = sortingRules[b.id] || 0;\n    if (aSort > bSort) {\n      return -1;\n    }\n    if (aSort < bSort) {\n      return 1;\n    }\n\n    return a.name > b.name ? 1 : -1;\n  });\n}\n\nfunction getEnterprisePhantomPlugins(): DataSourcePluginMeta[] {\n  return [\n    getPhantomPlugin({\n      id: 'grafana-splunk-datasource',\n      name: 'Splunk',\n      description: 'Visualize and explore Splunk logs',\n      imgUrl: 'public/img/plugins/splunk_logo_128.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-oracle-datasource',\n      name: 'Oracle',\n      description: 'Visualize and explore Oracle SQL',\n      imgUrl: 'public/img/plugins/oracle.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-dynatrace-datasource',\n      name: 'Dynatrace',\n      description: 'Visualize and explore Dynatrace data',\n      imgUrl: 'public/img/plugins/dynatrace.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-servicenow-datasource',\n      description: 'ServiceNow integration and data source',\n      name: 'ServiceNow',\n      imgUrl: 'public/img/plugins/servicenow.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-datadog-datasource',\n      description: 'DataDog integration and data source',\n      name: 'DataDog',\n      imgUrl: 'public/img/plugins/datadog.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-newrelic-datasource',\n      description: 'New Relic integration and data source',\n      name: 'New Relic',\n      imgUrl: 'public/img/plugins/newrelic.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-mongodb-datasource',\n      description: 'MongoDB integration and data source',\n      name: 'MongoDB',\n      imgUrl: 'public/img/plugins/mongodb.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-snowflake-datasource',\n      description: 'Snowflake integration and data source',\n      name: 'Snowflake',\n      imgUrl: 'public/img/plugins/snowflake.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-wavefront-datasource',\n      description: 'Wavefront integration and data source',\n      name: 'Wavefront',\n      imgUrl: 'public/img/plugins/wavefront.svg',\n    }),\n    getPhantomPlugin({\n      id: 'dlopes7-appdynamics-datasource',\n      description: 'AppDynamics integration and data source',\n      name: 'AppDynamics',\n      imgUrl: 'public/img/plugins/appdynamics.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-saphana-datasource',\n      description: 'SAP HANA® integration and data source',\n      name: 'SAP HANA®',\n      imgUrl: 'public/img/plugins/sap_hana.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-honeycomb-datasource',\n      description: 'Honeycomb integration and datasource',\n      name: 'Honeycomb',\n      imgUrl: 'public/img/plugins/honeycomb.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-salesforce-datasource',\n      description: 'Salesforce integration and datasource',\n      name: 'Salesforce',\n      imgUrl: 'public/img/plugins/salesforce.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-jira-datasource',\n      description: 'Jira integration and datasource',\n      name: 'Jira',\n      imgUrl: 'public/img/plugins/jira_logo.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-gitlab-datasource',\n      description: 'GitLab integration and datasource',\n      name: 'GitLab',\n      imgUrl: 'public/img/plugins/gitlab.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-splunk-monitoring-datasource',\n      description: 'SignalFx integration and datasource',\n      name: 'Splunk Infrastructure Monitoring',\n      imgUrl: 'public/img/plugins/signalfx-logo.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-azuredevops-datasource',\n      description: 'Azure Devops datasource',\n      name: 'Azure Devops',\n      imgUrl: 'public/img/plugins/azure-devops.png',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-sumologic-datasource',\n      description: 'SumoLogic integration and datasource',\n      name: 'SumoLogic',\n      imgUrl: 'public/img/plugins/sumo.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-pagerduty-datasource',\n      description: 'PagerDuty datasource',\n      name: 'PagerDuty',\n      imgUrl: 'public/img/plugins/pagerduty.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-catchpoint-datasource',\n      description: 'Catchpoint datasource',\n      name: 'Catchpoint',\n      imgUrl: 'public/img/plugins/catchpoint.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-azurecosmosdb-datasource',\n      description: 'Azure CosmosDB datasource',\n      name: 'Azure CosmosDB',\n      imgUrl: 'public/img/plugins/azure-cosmosdb.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-adobeanalytics-datasource',\n      description: 'Adobe Analytics datasource',\n      name: 'Adobe Analytics',\n      imgUrl: 'public/img/plugins/adobe-analytics.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-cloudflare-datasource',\n      description: 'Cloudflare datasource',\n      name: 'Cloudflare',\n      imgUrl: 'public/img/plugins/cloudflare.jpg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-cockroachdb-datasource',\n      description: 'CockroachDB datasource',\n      name: 'CockroachDB',\n      imgUrl: 'public/img/plugins/cockroachdb.jpg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-netlify-datasource',\n      description: 'Netlify datasource',\n      name: 'Netlify',\n      imgUrl: 'public/img/plugins/netlify.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-drone-datasource',\n      description: 'Drone datasource',\n      name: 'Drone',\n      imgUrl: 'public/img/plugins/drone.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-zendesk-datasource',\n      description: 'Zendesk datasource',\n      name: 'Zendesk',\n      imgUrl: 'public/img/plugins/zendesk.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-atlassianstatuspage-datasource',\n      description: 'Atlassian Statuspage datasource',\n      name: 'Atlassian Statuspage',\n      imgUrl: 'public/img/plugins/atlassian-statuspage.svg',\n    }),\n    getPhantomPlugin({\n      id: 'grafana-aurora-datasource',\n      description: 'Aurora data source',\n      name: 'Aurora',\n      imgUrl: 'public/img/plugins/aurora.svg',\n    }),\n  ];\n}\n\nfunction getGrafanaCloudPhantomPlugin(): DataSourcePluginMeta {\n  return {\n    id: 'gcloud',\n    name: 'Grafana Cloud',\n    type: PluginType.datasource,\n    module: 'phantom',\n    baseUrl: '',\n    info: {\n      description: 'Hosted Graphite, Prometheus, and Loki',\n      logos: { small: 'public/img/grafana_icon.svg', large: 'asd' },\n      author: { name: 'Grafana Labs' },\n      links: [\n        {\n          url: 'https://grafana.com/products/cloud/',\n          name: 'Learn more',\n        },\n      ],\n      screenshots: [],\n      updated: '2019-05-10',\n      version: '1.0.0',\n    },\n  };\n}\n\ninterface GetPhantomPluginOptions {\n  id: string;\n  name: string;\n  description: string;\n  imgUrl: string;\n}\n\nfunction getPhantomPlugin(options: GetPhantomPluginOptions): DataSourcePluginMeta {\n  return {\n    id: options.id,\n    name: options.name,\n    type: PluginType.datasource,\n    module: 'phantom',\n    baseUrl: '',\n    info: {\n      description: options.description,\n      logos: { small: options.imgUrl, large: options.imgUrl },\n      author: { name: 'Grafana Labs' },\n      links: [\n        {\n          url: '/plugins/' + options.id,\n          name: 'Install now',\n          target: '_self',\n        },\n      ],\n      screenshots: [],\n      updated: '2019-05-10',\n      version: '1.0.0',\n    },\n  };\n}\n","import {\n  DataSourcePluginMeta,\n  DataSourceSettings,\n  locationUtil,\n  TestDataSourceResponse,\n  DataSourceTestSucceeded,\n  DataSourceTestFailed,\n  DataSourceApi,\n} from '@grafana/data';\nimport {\n  config,\n  DataSourceSrv,\n  DataSourceWithBackend,\n  HealthCheckError,\n  HealthCheckResultDetails,\n  isFetchError,\n  locationService,\n} from '@grafana/runtime';\nimport { updateNavIndex } from 'app/core/actions';\nimport { appEvents, contextSrv } from 'app/core/core';\nimport { getBackendSrv } from 'app/core/services/backend_srv';\nimport { DatasourceAPIVersions } from 'app/features/apiserver/client';\nimport { ROUTES as CONNECTIONS_ROUTES } from 'app/features/connections/constants';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { getPluginSettings } from 'app/features/plugins/pluginSettings';\nimport { importDataSourcePlugin } from 'app/features/plugins/plugin_loader';\nimport { AccessControlAction, DataSourcePluginCategory, ThunkDispatch, ThunkResult } from 'app/types';\n\nimport * as api from '../api';\nimport { DATASOURCES_ROUTES } from '../constants';\nimport { trackDataSourceCreated, trackDataSourceTested } from '../tracking';\n\nimport { buildCategories } from './buildCategories';\nimport { buildNavModel } from './navModel';\nimport {\n  dataSourceLoaded,\n  dataSourceMetaLoaded,\n  dataSourcePluginsLoad,\n  dataSourcePluginsLoaded,\n  dataSourcesLoad,\n  dataSourcesLoaded,\n  initDataSourceSettingsFailed,\n  initDataSourceSettingsSucceeded,\n  testDataSourceFailed,\n  testDataSourceStarting,\n  testDataSourceSucceeded,\n} from './reducers';\nimport { getDataSource, getDataSourceMeta } from './selectors';\n\nexport interface DataSourceTypesLoadedPayload {\n  plugins: DataSourcePluginMeta[];\n  categories: DataSourcePluginCategory[];\n}\n\nexport interface InitDataSourceSettingDependencies {\n  loadDataSource: typeof loadDataSource;\n  loadDataSourceMeta: typeof loadDataSourceMeta;\n  getDataSource: typeof getDataSource;\n  getDataSourceMeta: typeof getDataSourceMeta;\n  importDataSourcePlugin: typeof importDataSourcePlugin;\n}\n\nexport interface TestDataSourceDependencies {\n  getDatasourceSrv: () => Pick<DataSourceSrv, 'get'>;\n  getBackendSrv: typeof getBackendSrv;\n}\n\ntype parseDataSourceSaveResponse = {\n  message?: string | undefined;\n  status?: string;\n  details?: HealthCheckResultDetails | { message?: string; verboseMessage?: string };\n};\n\nconst parseHealthCheckError = (errorResponse: any): parseDataSourceSaveResponse => {\n  let message: string | undefined;\n  let details: HealthCheckResultDetails;\n\n  if (errorResponse.error && errorResponse.error instanceof HealthCheckError) {\n    message = errorResponse.error.message;\n    details = errorResponse.error.details;\n  } else if (isFetchError(errorResponse)) {\n    message = errorResponse.data.message ?? `HTTP error ${errorResponse.statusText}`;\n  } else if (errorResponse instanceof Error) {\n    message = errorResponse.message;\n  }\n\n  return { message, details };\n};\n\nconst parseHealthCheckSuccess = (response: TestDataSourceResponse): parseDataSourceSaveResponse => {\n  const { details, message, status } = response;\n\n  return { status, message, details };\n};\n\nexport const initDataSourceSettings = (\n  uid: string,\n  dependencies: InitDataSourceSettingDependencies = {\n    loadDataSource,\n    loadDataSourceMeta,\n    getDataSource,\n    getDataSourceMeta,\n    importDataSourcePlugin,\n  }\n): ThunkResult<void> => {\n  return async (dispatch, getState) => {\n    if (!uid) {\n      dispatch(initDataSourceSettingsFailed(new Error('Invalid UID')));\n      return;\n    }\n\n    try {\n      const loadedDataSource = await dispatch(dependencies.loadDataSource(uid));\n      await dispatch(dependencies.loadDataSourceMeta(loadedDataSource));\n\n      const dataSource = dependencies.getDataSource(getState().dataSources, uid);\n      const dataSourceMeta = dependencies.getDataSourceMeta(getState().dataSources, dataSource!.type);\n      const importedPlugin = await dependencies.importDataSourcePlugin(dataSourceMeta);\n\n      dispatch(initDataSourceSettingsSucceeded(importedPlugin));\n    } catch (err) {\n      if (err instanceof Error) {\n        dispatch(initDataSourceSettingsFailed(err));\n      }\n    }\n  };\n};\n\nconst getPluginVersion = (dsApi: DataSourceApi) => {\n  const isCorePlugin = (dsApi?.meta?.module || '').startsWith('core');\n  return isCorePlugin ? config?.buildInfo?.version : dsApi?.meta?.info?.version;\n};\n\nexport const testDataSource = (\n  dataSourceName: string,\n  editRoute = DATASOURCES_ROUTES.Edit,\n  dependencies: TestDataSourceDependencies = {\n    getDatasourceSrv,\n    getBackendSrv,\n  }\n): ThunkResult<void> => {\n  return async (dispatch: ThunkDispatch, getState) => {\n    const dsApi = await dependencies.getDatasourceSrv().get(dataSourceName);\n    const editLink = editRoute.replace(/:uid/gi, dataSourceName);\n\n    if (!dsApi.testDatasource) {\n      return;\n    }\n\n    dispatch(testDataSourceStarting());\n\n    dependencies.getBackendSrv().withNoBackendCache(async () => {\n      try {\n        const result = await dsApi.testDatasource();\n\n        const parsedResult = parseHealthCheckSuccess({ ...result, details: { ...result.details } });\n        dispatch(testDataSourceSucceeded(parsedResult));\n\n        trackDataSourceTested({\n          grafana_version: config.buildInfo.version,\n          plugin_id: dsApi.type,\n          plugin_version: getPluginVersion(dsApi),\n          datasource_uid: dsApi.uid,\n          success: true,\n          path: editLink,\n        });\n        appEvents.publish(new DataSourceTestSucceeded());\n      } catch (err) {\n        const formattedError = parseHealthCheckError(err);\n\n        dispatch(testDataSourceFailed({ ...formattedError }));\n        trackDataSourceTested({\n          grafana_version: config.buildInfo.version,\n          plugin_id: dsApi.type,\n          plugin_version: getPluginVersion(dsApi),\n          datasource_uid: dsApi.uid,\n          success: false,\n          path: editLink,\n        });\n        appEvents.publish(new DataSourceTestFailed());\n      }\n    });\n  };\n};\n\nexport function loadDataSources(): ThunkResult<Promise<void>> {\n  return async (dispatch) => {\n    if (!contextSrv.hasPermission(AccessControlAction.DataSourcesRead)) {\n      return;\n    }\n    dispatch(dataSourcesLoad());\n    const response = await api.getDataSources();\n    dispatch(dataSourcesLoaded(response));\n  };\n}\n\nexport function loadDataSource(uid: string): ThunkResult<Promise<DataSourceSettings>> {\n  return async (dispatch) => {\n    let dataSource = await api.getDataSourceByIdOrUid(uid);\n\n    // Reload route to use UID instead\n    // -------------------------------\n    // In case we were trying to fetch and reference a data-source with an old numeric ID\n    // (which can happen by referencing it with a \"old\" URL), we would like to automatically redirect\n    // to the new URL format using the UID.\n    // [Please revalidate the following]: Unfortunately we can update the location using react router, but need to fully reload the\n    // route as the nav model page index is not matching with the url in that case.\n    // And react router has no way to unmount remount a route.\n    if (uid !== dataSource.uid) {\n      window.location.href = locationUtil.assureBaseUrl(`/datasources/edit/${dataSource.uid}`);\n\n      // Avoid a flashing error while the reload happens\n      dataSource = {} as DataSourceSettings;\n    }\n\n    dispatch(dataSourceLoaded(dataSource));\n\n    return dataSource;\n  };\n}\n\nexport function loadDataSourceMeta(dataSource: DataSourceSettings): ThunkResult<void> {\n  return async (dispatch) => {\n    const pluginInfo: DataSourcePluginMeta = await getPluginSettings(dataSource.type);\n    const plugin = await importDataSourcePlugin(pluginInfo);\n    const isBackend = plugin.DataSourceClass.prototype instanceof DataSourceWithBackend;\n    const meta = {\n      ...pluginInfo,\n      isBackend: pluginInfo.backend || isBackend,\n    };\n\n    dispatch(dataSourceMetaLoaded(meta));\n\n    plugin.meta = meta;\n    dispatch(updateNavIndex(buildNavModel(dataSource, plugin)));\n  };\n}\n\nexport function addDataSource(\n  plugin: DataSourcePluginMeta,\n  editRoute = DATASOURCES_ROUTES.Edit\n): ThunkResult<Promise<void>> {\n  return async () => {\n    const newInstance = {\n      type: plugin.id,\n      access: 'proxy',\n    };\n\n    const result = await api.createDataSource(newInstance);\n    const editLink = editRoute.replace(/:uid/gi, result.datasource.uid);\n\n    await getDatasourceSrv().reload();\n    await contextSrv.fetchUserPermissions();\n\n    trackDataSourceCreated({\n      grafana_version: config.buildInfo.version,\n      plugin_id: plugin.id,\n      datasource_uid: result.datasource.uid,\n      plugin_version: result.meta?.info?.version,\n      path: location.pathname,\n    });\n\n    locationService.push(editLink);\n  };\n}\n\nexport function loadDataSourcePlugins(): ThunkResult<void> {\n  return async (dispatch) => {\n    dispatch(dataSourcePluginsLoad());\n    const plugins = await api.getDataSourcePlugins();\n    const categories = buildCategories(plugins);\n    dispatch(dataSourcePluginsLoaded({ plugins, categories }));\n  };\n}\n\nconst dsApiVersions = new DatasourceAPIVersions();\n\nexport function updateDataSource(dataSource: DataSourceSettings) {\n  return async (\n    dispatch: (\n      dataSourceSettings: ThunkResult<Promise<DataSourceSettings>> | { payload: unknown; type: string }\n    ) => DataSourceSettings\n  ) => {\n    try {\n      if (config.featureToggles.grafanaAPIServerWithExperimentalAPIs) {\n        dataSource.apiVersion = await dsApiVersions.get(dataSource.type);\n      }\n      await api.updateDataSource(dataSource);\n    } catch (err) {\n      const formattedError = parseHealthCheckError(err);\n\n      dispatch(testDataSourceFailed(formattedError));\n      const errorInfo = isFetchError(err) ? err.data : { message: 'An unexpected error occurred.', traceID: '' };\n      return Promise.reject(errorInfo);\n    }\n\n    await getDatasourceSrv().reload();\n\n    return dispatch(loadDataSource(dataSource.uid));\n  };\n}\n\nexport function deleteLoadedDataSource(): ThunkResult<void> {\n  return async (dispatch, getStore) => {\n    const { uid } = getStore().dataSources.dataSource;\n\n    try {\n      await api.deleteDataSource(uid);\n      await getDatasourceSrv().reload();\n\n      const datasourcesUrl = CONNECTIONS_ROUTES.DataSources;\n\n      locationService.push(datasourcesUrl);\n    } catch (err) {\n      const formattedError = parseHealthCheckError(err);\n      dispatch(testDataSourceFailed(formattedError));\n    }\n  };\n}\n","import { useEffect } from 'react';\n\nimport { DataSourcePluginMeta, DataSourceSettings } from '@grafana/data';\nimport { cleanUpAction } from 'app/core/actions/cleanUp';\nimport appEvents from 'app/core/app_events';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\n\nimport { ROUTES } from '../../connections/constants';\nimport { DataSourceRights } from '../types';\nimport { constructDataSourceExploreUrl } from '../utils';\n\nimport {\n  initDataSourceSettings,\n  testDataSource,\n  loadDataSource,\n  loadDataSources,\n  loadDataSourcePlugins,\n  addDataSource,\n  updateDataSource,\n  deleteLoadedDataSource,\n} from './actions';\nimport { initialDataSourceSettingsState } from './reducers';\nimport { getDataSource, getDataSourceMeta } from './selectors';\n\nexport const useInitDataSourceSettings = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initDataSourceSettings(uid));\n\n    return function cleanUp() {\n      dispatch(\n        cleanUpAction({\n          cleanupAction: (state) => (state.dataSourceSettings = initialDataSourceSettingsState),\n        })\n      );\n    };\n  }, [uid, dispatch]);\n};\n\nexport const useTestDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n\n  return () => dispatch(testDataSource(uid, ROUTES.DataSourcesEdit));\n};\n\nexport const useLoadDataSources = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.dataSources.isLoadingDataSources);\n  const dataSources = useSelector((state) => state.dataSources.dataSources);\n\n  useEffect(() => {\n    dispatch(loadDataSources());\n  }, [dispatch]);\n\n  return { isLoading, dataSources };\n};\n\nexport const useLoadDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSource(uid));\n  }, [dispatch, uid]);\n};\n\nexport const useLoadDataSourcePlugins = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSourcePlugins());\n  }, [dispatch]);\n};\n\nexport const useAddDatasource = () => {\n  const dispatch = useDispatch();\n\n  return (plugin: DataSourcePluginMeta) => {\n    dispatch(addDataSource(plugin, ROUTES.DataSourcesEdit));\n  };\n};\n\nexport const useUpdateDatasource = () => {\n  const dispatch = useDispatch();\n\n  return async (dataSource: DataSourceSettings) => dispatch(updateDataSource(dataSource));\n};\n\nexport const useDeleteLoadedDataSource = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.dataSources.dataSource);\n\n  return () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: `Are you sure you want to delete the \"${name}\" data source?`,\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => dispatch(deleteLoadedDataSource()),\n      })\n    );\n  };\n};\n\nexport const useDataSource = (uid: string) => {\n  return useSelector((state) => getDataSource(state.dataSources, uid));\n};\n\nexport const useDataSourceExploreUrl = (uid: string) => {\n  const dataSource = useDataSource(uid);\n  return constructDataSourceExploreUrl(dataSource);\n};\n\nexport const useDataSourceMeta = (pluginType: string): DataSourcePluginMeta => {\n  return useSelector((state) => getDataSourceMeta(state.dataSources, pluginType));\n};\n\nexport const useDataSourceSettings = () => {\n  return useSelector((state) => state.dataSourceSettings);\n};\n\nexport const useDataSourceRights = (uid: string): DataSourceRights => {\n  const dataSource = useDataSource(uid);\n  const readOnly = dataSource.readOnly === true;\n  const hasWriteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesWrite, dataSource);\n  const hasDeleteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesDelete, dataSource);\n\n  return {\n    readOnly,\n    hasWriteRights,\n    hasDeleteRights,\n  };\n};\n","import { DataSourceSettings, PluginType, PluginInclude, NavModel, NavModelItem } from '@grafana/data';\nimport { featureEnabled } from '@grafana/runtime';\nimport { ProBadge } from 'app/core/components/Upgrade/ProBadge';\nimport config from 'app/core/config';\nimport { contextSrv } from 'app/core/core';\nimport { highlightTrial } from 'app/features/admin/utils';\nimport { AccessControlAction } from 'app/types';\n\nimport { GenericDataSourcePlugin } from '../types';\n\nconst loadingDSType = 'Loading';\n\nexport function buildNavModel(dataSource: DataSourceSettings, plugin: GenericDataSourcePlugin): NavModelItem {\n  const pluginMeta = plugin.meta;\n  const highlightsEnabled = config.featureToggles.featureHighlights;\n  const navModel: NavModelItem = {\n    img: pluginMeta.info.logos.large,\n    id: 'datasource-' + dataSource.uid,\n    url: '',\n    text: dataSource.name,\n    children: [\n      {\n        active: false,\n        icon: 'sliders-v-alt',\n        id: `datasource-settings-${dataSource.uid}`,\n        text: 'Settings',\n        url: `datasources/edit/${dataSource.uid}/`,\n      },\n    ],\n  };\n\n  if (plugin.configPages) {\n    for (const page of plugin.configPages) {\n      navModel.children!.push({\n        active: false,\n        text: page.title,\n        icon: page.icon,\n        url: `datasources/edit/${dataSource.uid}/?page=${page.id}`,\n        id: `datasource-page-${page.id}`,\n      });\n    }\n  }\n\n  if (pluginMeta.includes && hasDashboards(pluginMeta.includes) && contextSrv.hasRole('Admin')) {\n    navModel.children!.push({\n      active: false,\n      icon: 'apps',\n      id: `datasource-dashboards-${dataSource.uid}`,\n      text: 'Dashboards',\n      url: `datasources/edit/${dataSource.uid}/dashboards`,\n    });\n  }\n\n  const isLoadingNav = dataSource.type === loadingDSType;\n\n  const permissionsExperimentId = 'feature-highlights-data-source-permissions-badge';\n  const dsPermissions: NavModelItem = {\n    active: false,\n    icon: 'lock',\n    id: `datasource-permissions-${dataSource.uid}`,\n    text: 'Permissions',\n    url: `datasources/edit/${dataSource.uid}/permissions`,\n  };\n\n  if (highlightTrial() && !isLoadingNav) {\n    dsPermissions.tabSuffix = () => ProBadge({ experimentId: permissionsExperimentId, eventVariant: 'trial' });\n  }\n\n  if (featureEnabled('dspermissions.enforcement')) {\n    if (contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesPermissionsRead, dataSource)) {\n      navModel.children!.push(dsPermissions);\n    }\n  } else if (highlightsEnabled && !isLoadingNav) {\n    navModel.children!.push({\n      ...dsPermissions,\n      url: dsPermissions.url + '/upgrade',\n      tabSuffix: () => ProBadge({ experimentId: permissionsExperimentId }),\n    });\n  }\n\n  if (config.analytics?.enabled) {\n    const analyticsExperimentId = 'feature-highlights-data-source-insights-badge';\n    const analytics: NavModelItem = {\n      active: false,\n      icon: 'info-circle',\n      id: `datasource-insights-${dataSource.uid}`,\n      text: 'Insights',\n      url: `datasources/edit/${dataSource.uid}/insights`,\n    };\n\n    if (highlightTrial() && !isLoadingNav) {\n      analytics.tabSuffix = () => ProBadge({ experimentId: analyticsExperimentId, eventVariant: 'trial' });\n    }\n\n    if (featureEnabled('analytics')) {\n      if (contextSrv.hasPermission(AccessControlAction.DataSourcesInsightsRead)) {\n        navModel.children!.push(analytics);\n      }\n    } else if (highlightsEnabled && !isLoadingNav) {\n      navModel.children!.push({\n        ...analytics,\n        url: analytics.url + '/upgrade',\n        tabSuffix: () => ProBadge({ experimentId: analyticsExperimentId }),\n      });\n    }\n  }\n\n  const cachingExperimentId = 'feature-highlights-query-caching-badge';\n\n  const caching: NavModelItem = {\n    active: false,\n    icon: 'database',\n    id: `datasource-cache-${dataSource.uid}`,\n    text: 'Cache',\n    url: `datasources/edit/${dataSource.uid}/cache`,\n    hideFromTabs: !pluginMeta.isBackend || !config.caching.enabled,\n  };\n\n  if (highlightTrial() && !isLoadingNav) {\n    caching.tabSuffix = () => ProBadge({ experimentId: cachingExperimentId, eventVariant: 'trial' });\n  }\n\n  if (featureEnabled('caching')) {\n    if (contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesCachingRead, dataSource)) {\n      navModel.children!.push(caching);\n    }\n  } else if (highlightsEnabled && !isLoadingNav) {\n    navModel.children!.push({\n      ...caching,\n      url: caching.url + '/upgrade',\n      tabSuffix: () => ProBadge({ experimentId: cachingExperimentId }),\n    });\n  }\n\n  return navModel;\n}\n\nexport function getDataSourceNav(main: NavModelItem, pageName: string): NavModel {\n  let node: NavModelItem = { text: '' };\n\n  // find active page\n  for (const child of main.children!) {\n    if (child.id!.indexOf(pageName) > 0) {\n      child.active = true;\n      node = child;\n      break;\n    }\n  }\n\n  return {\n    main: main,\n    node: node!,\n  };\n}\nexport function getDataSourceLoadingNav(pageName: string): NavModel {\n  const main = buildNavModel(\n    {\n      access: '',\n      basicAuth: false,\n      basicAuthUser: '',\n      withCredentials: false,\n      database: '',\n      id: 1,\n      uid: 'x',\n      isDefault: false,\n      jsonData: { authType: 'credentials', defaultRegion: 'eu-west-2' },\n      name: 'Loading',\n      orgId: 1,\n      readOnly: false,\n      type: loadingDSType,\n      typeName: loadingDSType,\n      typeLogoUrl: 'public/img/icn-datasource.svg',\n      url: '',\n      user: '',\n      secureJsonFields: {},\n    },\n    {\n      meta: {\n        id: '1',\n        type: PluginType.datasource,\n        name: '',\n        info: {\n          author: {\n            name: '',\n            url: '',\n          },\n          description: '',\n          links: [{ name: '', url: '' }],\n          logos: {\n            large: '',\n            small: '',\n          },\n          screenshots: [],\n          updated: '',\n          version: '',\n        },\n        includes: [],\n        module: '',\n        baseUrl: '',\n      },\n    } as any\n  );\n\n  return getDataSourceNav(main, pageName);\n}\n\nfunction hasDashboards(includes: PluginInclude[]): boolean {\n  return (\n    includes.find((include) => {\n      return include.type === 'dashboard';\n    }) !== undefined\n  );\n}\n","import memoizeOne from 'memoize-one';\n\nimport { DataSourcePluginMeta, DataSourceSettings, UrlQueryValue } from '@grafana/data';\nimport { DataSourcesState } from 'app/types/datasources';\n\nexport const getDataSources = memoizeOne((state: DataSourcesState) => {\n  const regex = new RegExp(state.searchQuery, 'i');\n\n  const filteredDataSources = state.dataSources.filter((dataSource: DataSourceSettings) => {\n    return regex.test(dataSource.name) || regex.test(dataSource.database) || regex.test(dataSource.type);\n  });\n\n  return filteredDataSources.sort((a, b) =>\n    state.isSortAscending ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name)\n  );\n});\n\nexport const getFilteredDataSourcePlugins = memoizeOne((state: DataSourcesState) => {\n  const regex = new RegExp(state.dataSourceTypeSearchQuery, 'i');\n\n  return state.plugins.filter((type: DataSourcePluginMeta) => {\n    return regex.test(type.name);\n  });\n});\n\nexport const getDataSource = (state: DataSourcesState, dataSourceId: UrlQueryValue): DataSourceSettings => {\n  if (state.dataSource.uid === dataSourceId) {\n    return state.dataSource;\n  }\n  return {} as DataSourceSettings;\n};\n\nexport const getDataSourceMeta = (state: DataSourcesState, type: string): DataSourcePluginMeta => {\n  if (state.dataSourceMeta.id === type) {\n    return state.dataSourceMeta;\n  }\n\n  return {} as DataSourcePluginMeta;\n};\n\nexport const getDataSourcesSearchQuery = (state: DataSourcesState) => state.searchQuery;\nexport const getDataSourcesLayoutMode = (state: DataSourcesState) => state.layoutMode;\nexport const getDataSourcesCount = (state: DataSourcesState) => state.dataSourcesCount;\nexport const getDataSourcesSort = (state: DataSourcesState) => state.isSortAscending;\n","import { reportInteraction } from '@grafana/runtime';\n\n/**\n * Used to track data source creation via either the specific plugin page `/plugins/<the-data-source>`\n * or the general datasources page `/datasources/new`\n *\n * This event corresponds to the start event of our data source creation funnel.\n * Combined with the end event, it allows answering questions about:\n * - Conversion (percentage of user that successfully set up a data source)\n * - Time spent on the config page\n *\n * Changelog:\n * - v9.1.7 : logging datasource, datasource_uid, grafana version\n */\nexport const trackDataSourceCreated = (props: DataSourceCreatedProps) => {\n  reportInteraction('grafana_ds_add_datasource_clicked', props);\n};\n\ntype DataSourceCreatedProps = {\n  grafana_version?: string;\n  /** The unique id of the newly created data source */\n  datasource_uid: string;\n  /** The datasource id (e.g. Cloudwatch, Loki, Prometheus) */\n  plugin_id: string;\n  /** The plugin version (especially interesting in external plugins - core plugins are aligned with grafana version) */\n  plugin_version?: string;\n  /** The URL path that points to the page where the event was triggered. We are using this to be able to distinguish between the performance of different datasource edit locations. */\n  path?: string;\n};\n\n/**\n * Used to track data source testing\n *\n * This event corresponds to the end event of our data source creation funnel.\n * Combined with the start event, it allows answering questions about:\n * - Conversion (percentage of user that successfully set up a data source)\n * - Time spent on the config page\n *\n * Changelog:\n * - v9.1.7 : logging datasource, datasource_uid, grafana version and success\n */\nexport const trackDataSourceTested = (props: DataSourceTestedProps) => {\n  reportInteraction('grafana_ds_test_datasource_clicked', props);\n};\n\ntype DataSourceTestedProps = {\n  grafana_version?: string;\n  /** The unique id of the newly created data source */\n  datasource_uid: string;\n  /** The datasource id (e.g. Cloudwatch, Loki, Prometheus) */\n  plugin_id: string;\n  /** The plugin version (especially interesting in external plugins - core plugins are aligned with grafana version) */\n  plugin_version?: string;\n  /** Whether or not the datasource test succeeded = the datasource was successfully configured */\n  success: boolean;\n  /** The URL path that points to the page where the event was triggered. We are using this to be able to distinguish between the performance of different datasource edit locations. */\n  path?: string;\n};\n\ntype DataSourceGeneralTrackingProps = {\n  grafana_version?: string;\n  /** The unique id of the newly created data source */\n  datasource_uid: string;\n  /** The name of the datasource (e.g. Cloudwatch, Loki, Prometheus) */\n  plugin_name: string;\n  /** The URL of the page where event was triggereed from. */\n  path?: string;\n};\n\nexport const trackExploreClicked = (props: DataSourceGeneralTrackingProps) => {\n  reportInteraction('grafana_ds_explore_datasource_clicked', props);\n};\n\nexport const trackCreateDashboardClicked = (props: DataSourceGeneralTrackingProps) => {\n  reportInteraction('grafana_ds_create_dashboard_clicked', props);\n};\n\nexport const trackDataSourcesListViewed = (props: { grafana_version?: string; path?: string }) => {\n  reportInteraction('grafana_ds_datasources_list_viewed', props);\n};\n\nexport const trackDsConfigClicked = (item: string) => {\n  reportInteraction('connections_datasources_settings_clicked', { item });\n};\n\nexport const trackDsConfigUpdated = (props: { item: string; error?: unknown }) => {\n  reportInteraction('connections_datasources_ds_configured', props);\n};\n\nexport const trackDsSearched = (props: { query: string }) => {\n  reportInteraction('connections_datasource_list_searched', {\n    ...props,\n    creator_team: 'grafana_plugins_catalog',\n    schema_version: '1.0.0',\n  });\n};\n\nexport const trackAddNewDsClicked = (props: { path: string }) => {\n  reportInteraction('connections_datasource_list_add_datasource_clicked', {\n    ...props,\n    creator_team: 'grafana_plugins_catalog',\n    schema_version: '1.0.0',\n  });\n};\n","import { DataSourceJsonData, DataSourceSettings, urlUtil, locationUtil } from '@grafana/data';\n\nexport const constructDataSourceExploreUrl = (dataSource: DataSourceSettings<DataSourceJsonData, {}>) => {\n  const exploreState = JSON.stringify({ datasource: dataSource.name, context: 'explore' });\n  const exploreUrl = urlUtil.renderUrl(locationUtil.assureBaseUrl('/explore'), { left: exploreState });\n\n  return exploreUrl;\n};\n","import * as React from 'react';\n\nimport { PluginErrorCode } from '@grafana/data';\nimport { Badge } from '@grafana/ui';\n\ntype Props = { error?: PluginErrorCode };\n\nexport function PluginDisabledBadge({ error }: Props): React.ReactElement {\n  const tooltip = errorCodeToTooltip(error);\n  return <Badge icon=\"exclamation-triangle\" text=\"Disabled\" color=\"red\" tooltip={tooltip} />;\n}\n\nfunction errorCodeToTooltip(error?: PluginErrorCode): string | undefined {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return 'Plugin disabled due to modified content';\n    case PluginErrorCode.invalidSignature:\n      return 'Plugin disabled due to invalid plugin signature';\n    case PluginErrorCode.missingSignature:\n      return 'Plugin disabled due to missing plugin signature';\n    case null:\n    case undefined:\n      return 'Plugin disabled';\n    default:\n      return `Plugin disabled due to unknown error${error ? `: ${error}` : ''}`;\n  }\n}\n","import * as React from 'react';\n\nimport { Badge, useStyles2 } from '@grafana/ui';\n\nimport { getBadgeColor } from './sharedStyles';\n\nexport function PluginInstalledBadge(): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n","import * as React from 'react';\n\nimport { featureEnabled } from '@grafana/runtime';\nimport { Badge, PluginSignatureBadge, Stack, useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../../types';\n\nimport { getBadgeColor } from './sharedStyles';\n\ntype Props = { plugin: CatalogPlugin };\n\nexport function PluginEnterpriseBadge({ plugin }: Props): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n\n  if (featureEnabled('enterprise.plugins')) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <Stack wrap={'wrap'}>\n      <PluginSignatureBadge status={plugin.signature} />\n      <Badge\n        icon=\"lock\"\n        role=\"img\"\n        aria-label=\"lock icon\"\n        text=\"Enterprise\"\n        color=\"blue\"\n        className={customBadgeStyles}\n        title=\"Requires a Grafana Enterprise license\"\n      />\n    </Stack>\n  );\n}\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginUpdateAvailableBadge({ plugin }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  return <p className={styles.hasUpdate}>Update available!</p>;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    hasUpdate: css({\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.bodySmall.fontSize,\n      marginBottom: 0,\n    }),\n  };\n};\n","import * as React from 'react';\n\nimport { Badge } from '@grafana/ui';\n\nexport function PluginAngularBadge(): React.ReactElement {\n  return (\n    <Badge\n      icon=\"exclamation-triangle\"\n      text=\"Angular\"\n      color=\"orange\"\n      tooltip=\"This plugin uses deprecated functionality, support for which is being removed.\"\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { Badge } from '@grafana/ui';\n\nexport function PluginDeprecatedBadge(): React.ReactElement {\n  return (\n    <Badge\n      icon=\"exclamation-triangle\"\n      text=\"Deprecated\"\n      color=\"orange\"\n      tooltip=\"This plugin is deprecated and no longer receives updates.\"\n    />\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getBadgeColor = (theme: GrafanaTheme2) =>\n  css({\n    background: theme.colors.background.primary,\n    borderColor: theme.colors.border.strong,\n    color: theme.colors.text.secondary,\n  });\n","import { Box, LoadingPlaceholder } from '@grafana/ui';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" direction=\"column\" justifyContent=\"center\" paddingTop={10}>\n      <LoadingPlaceholder text={text} />\n    </Box>\n  );\n};\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  sanitizedHTML: string;\n}\n\nexport const Changelog = ({ sanitizedHTML }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: sanitizedHTML ?? 'No changelog was found' }}\n      className={cx(styles.changelog)}\n    ></div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  changelog: css({\n    'h1:first-of-type': {\n      display: 'none',\n    },\n    'h2:first-of-type': {\n      marginTop: 0,\n    },\n    h2: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    },\n    li: {\n      marginLeft: theme.spacing(4),\n    },\n    a: {\n      color: theme.colors.text.link,\n      '&:hover': {\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n      },\n    },\n  }),\n});\n","import { css } from '@emotion/css';\nimport { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { PageInfoItem } from '@grafana/runtime/src/components/PluginPage';\nimport {\n  Stack,\n  Text,\n  LinkButton,\n  Box,\n  TextLink,\n  CollapsableSection,\n  Tooltip,\n  Icon,\n  Modal,\n  Button,\n  useStyles2,\n} from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\nimport { formatDate } from 'app/core/internationalization/dates';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  pluginExtentionsInfo: PageInfoItem[];\n  plugin: CatalogPlugin;\n  width?: string;\n};\n\nexport function PluginDetailsPanel(props: Props): React.ReactElement | null {\n  const { pluginExtentionsInfo, plugin, width = '250px' } = props;\n  const [reportAbuseModalOpen, setReportAbuseModalOpen] = useState(false);\n\n  const normalizeURL = (url: string | undefined) => url?.replace(/\\/$/, '');\n\n  const customLinks = plugin.details?.links?.filter((link) => {\n    const customLinksFiltered = ![plugin.url, plugin.details?.licenseUrl, plugin.details?.documentationUrl]\n      .map(normalizeURL)\n      .includes(normalizeURL(link.url));\n    return customLinksFiltered;\n  });\n  const shouldRenderLinks = plugin.url || plugin.details?.licenseUrl || plugin.details?.documentationUrl;\n\n  const styles = useStyles2(getStyles);\n\n  const onClickReportConcern = (pluginId: string) => {\n    setReportAbuseModalOpen(true);\n    reportInteraction('plugin_detail_report_concern', {\n      plugin_id: pluginId,\n    });\n  };\n\n  return (\n    <>\n      <Stack direction=\"column\" gap={3} shrink={0} grow={0} width={width} data-testid=\"plugin-details-panel\">\n        <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n          <Stack direction=\"column\" gap={2}>\n            {pluginExtentionsInfo.map((infoItem, index) => {\n              return (\n                <Stack key={index} wrap direction=\"column\" gap={0.5}>\n                  <Text color=\"secondary\">{infoItem.label + ':'}</Text>\n                  <div className={styles.pluginVersionDetails}>{infoItem.value}</div>\n                </Stack>\n              );\n            })}\n            {plugin.updatedAt && (\n              <Stack direction=\"column\" gap={0.5}>\n                <Text color=\"secondary\">\n                  <Trans i18nKey=\"plugins.details.labels.updatedAt\">Last updated:</Trans>\n                </Text>{' '}\n                <Text>\n                  {formatDate(new Date(plugin.updatedAt), { day: 'numeric', month: 'short', year: 'numeric' })}\n                </Text>\n              </Stack>\n            )}\n            {plugin?.details?.lastCommitDate && (\n              <Stack direction=\"column\" gap={0.5}>\n                <Text color=\"secondary\">\n                  <Trans i18nKey=\"plugins.details.labels.lastCommitDate\">Last commit date:</Trans>\n                </Text>{' '}\n                <Text>\n                  {formatDate(new Date(plugin.details.lastCommitDate), {\n                    day: 'numeric',\n                    month: 'short',\n                    year: 'numeric',\n                  })}\n                </Text>\n              </Stack>\n            )}\n          </Stack>\n        </Box>\n        {shouldRenderLinks && (\n          <>\n            <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n              <Stack direction=\"column\" gap={2}>\n                {plugin.url && (\n                  <LinkButton href={plugin.url} variant=\"secondary\" fill=\"solid\" icon=\"code-branch\" target=\"_blank\">\n                    <Trans i18nKey=\"plugins.details.labels.repository\">Repository</Trans>\n                  </LinkButton>\n                )}\n                {plugin.raiseAnIssueUrl && (\n                  <LinkButton href={plugin.raiseAnIssueUrl} variant=\"secondary\" fill=\"solid\" icon=\"bug\" target=\"_blank\">\n                    <Trans i18nKey=\"plugins.details.labels.raiseAnIssue\">Raise an issue</Trans>\n                  </LinkButton>\n                )}\n                {plugin.details?.licenseUrl && (\n                  <LinkButton\n                    href={plugin.details?.licenseUrl}\n                    variant=\"secondary\"\n                    fill=\"solid\"\n                    icon={'document-info'}\n                    target=\"_blank\"\n                  >\n                    <Trans i18nKey=\"plugins.details.labels.license\">License</Trans>\n                  </LinkButton>\n                )}\n                {plugin.details?.documentationUrl && (\n                  <LinkButton\n                    href={plugin.details?.documentationUrl}\n                    variant=\"secondary\"\n                    fill=\"solid\"\n                    icon={'list-ui-alt'}\n                    target=\"_blank\"\n                  >\n                    <Trans i18nKey=\"plugins.details.labels.documentation\">Documentation</Trans>\n                  </LinkButton>\n                )}\n              </Stack>\n            </Box>\n          </>\n        )}\n        {customLinks && customLinks?.length > 0 && (\n          <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n            <CollapsableSection\n              isOpen={true}\n              label={\n                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                  <Text color=\"secondary\" variant=\"body\">\n                    <Trans i18nKey=\"plugins.details.labels.customLinks\">Custom links </Trans>\n                  </Text>\n                  <Tooltip\n                    content={\n                      <Trans i18nKey=\"plugins.details.labels.customLinksTooltip\">\n                        These links are provided by the plugin developer to offer additional, developer-specific\n                        resources and information\n                      </Trans>\n                    }\n                    placement=\"right-end\"\n                  >\n                    <Icon name=\"info-circle\" size=\"xs\" />\n                  </Tooltip>\n                </Stack>\n              }\n            >\n              <Stack direction=\"column\" gap={2}>\n                {customLinks.map((link, index) => (\n                  <TextLink key={index} href={link.url} external>\n                    {link.name}\n                  </TextLink>\n                ))}\n              </Stack>\n            </CollapsableSection>\n          </Box>\n        )}\n        {!plugin?.isCore && (\n          <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n            <CollapsableSection\n              headerDataTestId=\"reportConcern\"\n              isOpen={false}\n              label={\n                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                  <Text color=\"secondary\" variant=\"body\">\n                    <Trans i18nKey=\"plugins.details.labels.reportAbuse\">Report a concern </Trans>\n                  </Text>\n                  <Tooltip\n                    content={\n                      <Trans i18nKey=\"plugins.details.labels.reportAbuseTooltip\">\n                        Report issues related to malicious or harmful plugins directly to Grafana Labs.\n                      </Trans>\n                    }\n                    placement=\"right-end\"\n                  >\n                    <Icon name=\"info-circle\" size=\"xs\" />\n                  </Tooltip>\n                </Stack>\n              }\n            >\n              <Stack direction=\"column\">\n                <Button variant=\"secondary\" fill=\"solid\" icon=\"bell\" onClick={() => onClickReportConcern(plugin.id)}>\n                  <Trans i18nKey=\"plugins.details.labels.contactGrafanaLabs\">Contact Grafana Labs</Trans>\n                </Button>\n              </Stack>\n            </CollapsableSection>\n          </Box>\n        )}\n      </Stack>\n      {reportAbuseModalOpen && (\n        <Modal\n          title={<Trans i18nKey=\"plugins.details.modal.title\">Report a plugin concern</Trans>}\n          isOpen\n          onDismiss={() => setReportAbuseModalOpen(false)}\n        >\n          <Stack direction=\"column\" gap={2}>\n            <Text>\n              <Trans i18nKey=\"plugins.details.modal.description\">\n                This feature is for reporting malicious or harmful behaviour within plugins. For plugin concerns, email\n                us at:{' '}\n              </Trans>\n              <TextLink href=\"mailto:integrations+report-plugin@grafana.com\">integrations@grafana.com</TextLink>\n            </Text>\n            <Text>\n              <Trans i18nKey=\"plugins.details.modal.node\">\n                Note: For general plugin issues like bugs or feature requests, please contact the plugin author using\n                the provided links.{' '}\n              </Trans>\n            </Text>\n          </Stack>\n          <Modal.ButtonRow>\n            <Button variant=\"secondary\" fill=\"outline\" onClick={() => setReportAbuseModalOpen(false)}>\n              <Trans i18nKey=\"plugins.details.modal.cancel\">Cancel</Trans>\n            </Button>\n            <Button icon=\"copy\" onClick={() => navigator.clipboard.writeText('integrations@grafana.com')}>\n              <Trans i18nKey=\"plugins.details.modal.copyEmail\">Copy email address</Trans>\n            </Button>\n          </Modal.ButtonRow>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    pluginVersionDetails: css({\n      wordBreak: 'break-word',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\nimport { gt } from 'semver';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { Badge, Button, ConfirmModal, Icon, Spinner, useStyles2 } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nimport { isPreinstalledPlugin } from '../helpers';\nimport { useInstall } from '../state/hooks';\nimport { Version } from '../types';\n\nconst PLUGINS_VERSION_PAGE_UPGRADE_INTERACTION_EVENT_NAME = 'plugins_upgrade_clicked';\nconst PLUGINS_VERSION_PAGE_CHANGE_INTERACTION_EVENT_NAME = 'plugins_downgrade_clicked';\n\ninterface Props {\n  pluginId: string;\n  version: Version;\n  latestCompatibleVersion?: string;\n  installedVersion?: string;\n  disabled: boolean;\n  tooltip?: string;\n  onConfirmInstallation: () => void;\n}\n\nexport const VersionInstallButton = ({\n  pluginId,\n  version,\n  latestCompatibleVersion,\n  installedVersion,\n  disabled,\n  tooltip,\n  onConfirmInstallation,\n}: Props) => {\n  const install = useInstall();\n  const [isInstalling, setIsInstalling] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const styles = useStyles2(getStyles);\n\n  const isDowngrade = installedVersion && gt(installedVersion, version.version);\n\n  useEffect(() => {\n    if (installedVersion === version.version) {\n      setIsInstalling(false);\n      setIsModalOpen(false);\n    }\n  }, [installedVersion, version.version]);\n\n  if (version.version === installedVersion) {\n    return <Badge className={styles.badge} text=\"Installed\" icon=\"check\" color=\"green\" />;\n  }\n\n  const performInstallation = () => {\n    const trackProps = {\n      path: location.pathname,\n      plugin_id: pluginId,\n      version: version.version,\n      is_latest: latestCompatibleVersion === version.version,\n      creator_team: 'grafana_plugins_catalog',\n      schema_version: '1.0.0',\n    };\n\n    if (!installedVersion || gt(version.version, installedVersion)) {\n      reportInteraction(PLUGINS_VERSION_PAGE_UPGRADE_INTERACTION_EVENT_NAME, trackProps);\n    } else {\n      reportInteraction(PLUGINS_VERSION_PAGE_CHANGE_INTERACTION_EVENT_NAME, {\n        ...trackProps,\n        previous_version: installedVersion,\n      });\n    }\n\n    install(pluginId, version.version, true);\n    setIsInstalling(true);\n    onConfirmInstallation();\n  };\n\n  const onInstallClick = () => {\n    if (isDowngrade) {\n      setIsModalOpen(true);\n    } else {\n      performInstallation();\n    }\n  };\n\n  const onConfirm = () => {\n    performInstallation();\n  };\n\n  const onDismiss = () => {\n    setIsModalOpen(false);\n  };\n\n  let label = 'Downgrade';\n  let hidden = false;\n  const isPreinstalled = isPreinstalledPlugin(pluginId);\n\n  if (!installedVersion) {\n    label = 'Install';\n  } else if (gt(version.version, installedVersion)) {\n    label = 'Upgrade';\n    if (isPreinstalled.withVersion) {\n      // Hide button if the plugin is preinstalled with a specific version\n      hidden = true;\n    }\n  } else {\n    if (isPreinstalled.found && Boolean(config.featureToggles.preinstallAutoUpdate)) {\n      // Hide the downgrade button if the plugin is preinstalled since it will be auto-updated\n      hidden = true;\n    }\n  }\n\n  return (\n    <>\n      <Button\n        fill=\"solid\"\n        disabled={disabled || isInstalling}\n        fullWidth\n        size=\"sm\"\n        variant={latestCompatibleVersion === version.version ? 'primary' : 'secondary'}\n        onClick={onInstallClick}\n        className={styles.button}\n        hidden={hidden}\n        tooltip={tooltip}\n        tooltipPlacement=\"bottom-start\"\n      >\n        {label} {isInstalling ? <Spinner className={styles.spinner} inline size=\"sm\" /> : getIcon(label)}\n      </Button>\n      <ConfirmModal\n        isOpen={isModalOpen}\n        title={t('plugins.catalog.versions.downgrade-title', 'Downgrade plugin version')}\n        body={`${t('plugins.catalog.versions.confirmation-text-1', 'Are you really sure you want to downgrade to version')} ${version.version}? ${t('plugins.catalog.versions.confirmation-text-2', 'You should normally not be doing this')}`}\n        confirmText={t('plugins.catalog.versions.downgrade-confirm', 'Downgrade')}\n        onConfirm={onConfirm}\n        onDismiss={onDismiss}\n        disabled={isInstalling}\n        confirmButtonVariant=\"primary\"\n      />\n    </>\n  );\n};\n\nfunction getIcon(label: string) {\n  if (label === 'Downgrade') {\n    return <Icon name=\"arrow-down\" />;\n  }\n  if (label === 'Upgrade') {\n    return <Icon name=\"arrow-up\" />;\n  }\n  return '';\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  spinner: css({\n    marginLeft: theme.spacing(1),\n  }),\n  successIcon: css({\n    color: theme.colors.success.main,\n  }),\n  button: css({\n    width: theme.spacing(13),\n  }),\n  badge: css({\n    width: theme.spacing(13),\n    justifyContent: 'center',\n  }),\n});\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { dateTimeFormatTimeAgo, GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getLatestCompatibleVersion } from '../helpers';\nimport { Version } from '../types';\n\nimport { VersionInstallButton } from './VersionInstallButton';\n\ninterface Props {\n  pluginId: string;\n  versions?: Version[];\n  installedVersion?: string;\n  disableInstallation: boolean;\n}\n\nexport const VersionList = ({ pluginId, versions = [], installedVersion, disableInstallation }: Props) => {\n  const styles = useStyles2(getStyles);\n  const latestCompatibleVersion = getLatestCompatibleVersion(versions);\n\n  const [isInstalling, setIsInstalling] = useState(false);\n\n  useEffect(() => {\n    setIsInstalling(false);\n  }, [installedVersion]);\n\n  if (versions.length === 0) {\n    return <p>No version history was found.</p>;\n  }\n\n  const onInstallClick = () => {\n    setIsInstalling(true);\n  };\n\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th></th>\n          <th>Last updated</th>\n          <th>Grafana Dependency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {versions.map((version) => {\n          let tooltip: string | undefined = undefined;\n          const isInstalledVersion = installedVersion === version.version;\n          const canInstall = version.angularDetected ? config.angularSupportEnabled : true;\n\n          if (!canInstall) {\n            tooltip = 'This plugin version is AngularJS type which is not supported';\n          }\n\n          if (!version.isCompatible) {\n            tooltip = 'This plugin version is not compatible with the current Grafana version';\n          }\n\n          if (disableInstallation) {\n            tooltip = `This plugin can't be managed through the Plugin Catalog`;\n          }\n\n          return (\n            <tr key={version.version}>\n              {/* Version number */}\n              {isInstalledVersion ? (\n                <td className={styles.currentVersion}>{version.version} (installed version)</td>\n              ) : version.version === latestCompatibleVersion?.version ? (\n                <td>{version.version} (latest compatible version)</td>\n              ) : (\n                <td>{version.version}</td>\n              )}\n\n              {/* Install button */}\n              <td>\n                <VersionInstallButton\n                  pluginId={pluginId}\n                  version={version}\n                  latestCompatibleVersion={latestCompatibleVersion?.version}\n                  installedVersion={installedVersion}\n                  onConfirmInstallation={onInstallClick}\n                  disabled={\n                    isInstalledVersion ||\n                    isInstalling ||\n                    !canInstall ||\n                    !version.isCompatible ||\n                    !canInstall ||\n                    disableInstallation\n                  }\n                  tooltip={tooltip}\n                />\n              </td>\n\n              {/* Last updated */}\n              <td className={isInstalledVersion ? styles.currentVersion : ''}>\n                {dateTimeFormatTimeAgo(version.updatedAt || version.createdAt)}\n              </td>\n              {/* Dependency */}\n              <td className={isInstalledVersion ? styles.currentVersion : ''}>{version.grafanaDependency || 'N/A'}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css({\n    padding: theme.spacing(2, 4, 3),\n  }),\n  currentVersion: css({\n    fontWeight: theme.typography.fontWeightBold,\n  }),\n  spinner: css({\n    marginLeft: theme.spacing(1),\n  }),\n  table: css({\n    tableLayout: 'fixed',\n    width: '100%',\n    'td, th': {\n      padding: `${theme.spacing()} 0`,\n    },\n    th: {\n      fontSize: theme.typography.h5.fontSize,\n    },\n    td: {\n      wordBreak: 'break-word',\n    },\n    'tbody tr:nth-child(odd)': {\n      background: theme.colors.emphasize(theme.colors.background.primary, 0.02),\n    },\n  }),\n});\n","import { useAsync } from 'react-use';\n\nimport { config } from '@grafana/runtime';\n\nimport { loadPlugin } from '../../utils';\nimport { CatalogPlugin } from '../types';\n\nexport const usePluginConfig = (plugin?: CatalogPlugin) => {\n  return useAsync(async () => {\n    if (!plugin) {\n      return null;\n    }\n\n    const isPluginInstalled = config.pluginAdminExternalManageEnabled ? plugin.isFullyInstalled : plugin.isInstalled;\n\n    if (isPluginInstalled && !plugin.isDisabled) {\n      return loadPlugin(plugin.id);\n    }\n    return null;\n  }, [plugin?.id, plugin?.isInstalled, plugin?.isDisabled]);\n};\n","// Libraries\nimport { css } from '@emotion/css';\nimport { cloneDeep, extend } from 'lodash';\nimport { PureComponent } from 'react';\n\nimport { PluginMeta, AppPlugin, deprecationWarning } from '@grafana/data';\nimport { AngularComponent, getAngularLoader, getBackendSrv } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\n\ninterface Props {\n  app: AppPlugin;\n}\n\ninterface State {\n  angularCtrl: AngularComponent | null;\n  refresh: number;\n}\n\nexport class AppConfigCtrlWrapper extends PureComponent<Props, State> {\n  element: HTMLElement | null = null;\n  //@ts-ignore\n  model: PluginMeta;\n\n  // Needed for angular scope\n  preUpdateHook = () => Promise.resolve();\n  postUpdateHook = () => Promise.resolve();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      angularCtrl: null,\n      refresh: 0,\n    };\n  }\n\n  componentDidMount() {\n    // Force a reload after the first mount -- is there a better way to do this?\n    setTimeout(() => {\n      this.setState({ refresh: this.state.refresh + 1 });\n    }, 5);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.element || this.state.angularCtrl) {\n      return;\n    }\n\n    // Set a copy of the meta\n    this.model = cloneDeep(this.props.app.meta);\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"app-config-ctrl\"></plugin-component>';\n    const scopeProps = {\n      ctrl: this,\n      // used by angular injectorMonkeyPatch to detect this scenario\n      isAppConfigCtrl: true,\n    };\n    const angularCtrl = loader.load(this.element, scopeProps, template);\n\n    this.setState({ angularCtrl });\n  }\n\n  render() {\n    const model = this.model;\n\n    const withRightMargin = css({ marginRight: '8px' });\n\n    return (\n      <div>\n        <div ref={(element) => (this.element = element)} />\n        <br />\n        <br />\n        {model && (\n          <div className=\"gf-form\">\n            {!model.enabled && (\n              <Button variant=\"primary\" onClick={this.enable} className={withRightMargin}>\n                Enable\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"primary\" onClick={this.update} className={withRightMargin}>\n                Update\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"destructive\" onClick={this.disable} className={withRightMargin}>\n                Disable\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  //-----------------------------------------------------------\n  // Copied from plugin_edit_ctrl\n  //-----------------------------------------------------------\n\n  update = () => {\n    const pluginId = this.model.id;\n\n    this.preUpdateHook()\n      .then(() => {\n        const updateCmd = extend(\n          {\n            enabled: this.model.enabled,\n            pinned: this.model.pinned,\n            jsonData: this.model.jsonData,\n            secureJsonData: this.model.secureJsonData,\n          },\n          {}\n        );\n        return getBackendSrv().post(`/api/plugins/${pluginId}/settings`, updateCmd);\n      })\n      .then(this.postUpdateHook)\n      .then((res) => {\n        window.location.href = window.location.href;\n      });\n  };\n\n  setPreUpdateHook = (callback: () => Promise<void>) => {\n    this.preUpdateHook = callback;\n  };\n\n  setPostUpdateHook = (callback: () => Promise<void>) => {\n    this.postUpdateHook = callback;\n  };\n\n  // Stub to avoid unknown function in legacy code\n  importDashboards = (): Promise<void> => {\n    deprecationWarning('AppConfig', 'importDashboards()');\n    return Promise.resolve();\n  };\n\n  enable = () => {\n    this.model.enabled = true;\n    this.model.pinned = true;\n    this.update();\n  };\n\n  disable = () => {\n    this.model.enabled = false;\n    this.model.pinned = false;\n    this.update();\n  };\n}\n","import { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\n\nexport function isGrafanaAdmin(): boolean {\n  return config.bootData.user.isGrafanaAdmin;\n}\n\nexport function isOrgAdmin() {\n  return contextSrv.hasRole('Admin');\n}\n\nexport function isDataSourceEditor() {\n  return (\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite)\n  );\n}\n","import { useCallback } from 'react';\nimport * as React from 'react';\n\nimport { DataSourcePluginMeta } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\nimport { ROUTES } from 'app/features/connections/constants';\nimport { addDataSource } from 'app/features/datasources/state';\nimport { useDispatch } from 'app/types';\n\nimport { isDataSourceEditor } from '../../permissions';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithDataSource({ plugin }: Props): React.ReactElement | null {\n  const dispatch = useDispatch();\n  const onAddDataSource = useCallback(() => {\n    const meta = {\n      name: plugin.name,\n      id: plugin.id,\n    } as DataSourcePluginMeta;\n\n    dispatch(addDataSource(meta, ROUTES.DataSourcesEdit));\n  }, [dispatch, plugin]);\n\n  if (!isDataSourceEditor()) {\n    return null;\n  }\n\n  const disabledButton = config.pluginAdminExternalManageEnabled && !plugin.isFullyInstalled;\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={onAddDataSource}\n      disabled={disabledButton}\n      title={\n        disabledButton ? \"The plugin isn't usable yet, it may take some time to complete the installation.\" : undefined\n      }\n    >\n      Add new data source\n    </Button>\n  );\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { EmptyState, Stack, TextLink, useStyles2 } from '@grafana/ui';\nimport { t, Trans } from 'app/core/internationalization';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { ViewProps } from 'app/features/datasources/components/DataSourcesList';\nimport { DataSourcesListCard } from 'app/features/datasources/components/DataSourcesListCard';\nimport { getDataSources, useLoadDataSources } from 'app/features/datasources/state';\nimport { AccessControlAction, useSelector } from 'app/types';\n\nimport { CatalogPlugin } from '../types';\n\nimport { GetStartedWithDataSource } from './GetStartedWithPlugin/GetStartedWithDataSource';\n\ninterface Props {\n  plugin: CatalogPlugin;\n}\n\nexport default function ConnectionsTab({ plugin }: Props) {\n  const { isLoading } = useLoadDataSources();\n\n  const allDataSources = useSelector((state) => getDataSources(state.dataSources));\n  const dataSources = allDataSources.filter((ds) => ds.type === plugin.id);\n  const hasWriteRights = contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n  const hasExploreRights = contextSrv.hasAccessToExplore();\n\n  return (\n    <ConnectionsList\n      dataSources={dataSources}\n      dataSourcesCount={dataSources.length}\n      isLoading={isLoading}\n      plugin={plugin}\n      hasWriteRights={hasWriteRights}\n      hasExploreRights={hasExploreRights}\n    />\n  );\n}\n\ntype ListProps = Omit<ViewProps, 'hasCreateRights'> & {\n  plugin: CatalogPlugin;\n};\n\nexport function ConnectionsList({\n  dataSources,\n  dataSourcesCount,\n  isLoading,\n  hasWriteRights,\n  hasExploreRights,\n  plugin,\n}: ListProps) {\n  const styles = useStyles2(getStyles);\n\n  if (!isLoading && dataSourcesCount === 0) {\n    return (\n      <EmptyState\n        variant=\"call-to-action\"\n        button={<GetStartedWithDataSource plugin={plugin} />}\n        message={t('data-source-list.empty-state.title', 'No data sources defined')}\n      />\n    );\n  }\n\n  const getDataSourcesList = () => {\n    if (isLoading) {\n      return new Array(5)\n        .fill(null)\n        .map((_, index) => <DataSourcesListCard.Skeleton key={index} hasExploreRights={hasExploreRights} />);\n    }\n\n    return dataSources.map((dataSource) => (\n      <li key={dataSource.uid}>\n        <DataSourcesListCard\n          dataSource={dataSource}\n          hasWriteRights={hasWriteRights}\n          hasExploreRights={hasExploreRights}\n        />\n      </li>\n    ));\n  };\n\n  return (\n    <Stack direction=\"column\" gap={2}>\n      <span>\n        <Trans i18nKey=\"plugins.details.connections-tab.description\" values={{ pluginName: plugin.name }}>\n          The data source connections below are all {'{{pluginName}}'}. You can find all of your data source connections\n          of all types in{' '}\n          <TextLink href=\"/connections/datasources\">\n            <Trans i18nKey=\"nav.connections.title\">Connections</Trans> -{' '}\n            <Trans i18nKey=\"nav.data-sources.title\">Data sources</Trans>.\n          </TextLink>\n        </Trans>\n      </span>\n      <ul className={styles.list}>{getDataSourcesList()}</ul>\n    </Stack>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    list: css({\n      listStyle: 'none',\n      display: 'grid',\n      // gap: '8px', Add back when legacy support for old Card interface is dropped\n    }),\n  };\n};\n","import { extend } from 'lodash';\nimport { PureComponent } from 'react';\n\nimport { AppEvents, PluginMeta, DataSourceApi } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { appEvents } from 'app/core/core';\nimport DashboardsTable from 'app/features/datasources/components/DashboardsTable';\nimport { PluginDashboard } from 'app/types';\n\ninterface Props {\n  plugin: PluginMeta;\n  datasource?: DataSourceApi;\n}\n\ninterface State {\n  dashboards: PluginDashboard[];\n  loading: boolean;\n}\n\nexport class PluginDashboards extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      dashboards: [],\n    };\n  }\n\n  async componentDidMount() {\n    const pluginId = this.props.plugin.id;\n    getBackendSrv()\n      .get(`/api/plugins/${pluginId}/dashboards`)\n      .then((dashboards) => {\n        this.setState({ dashboards, loading: false });\n      });\n  }\n\n  importAll = () => {\n    this.importNext(0);\n  };\n\n  private importNext = (index: number) => {\n    const { dashboards } = this.state;\n    return this.import(dashboards[index], true).then(() => {\n      if (index + 1 < dashboards.length) {\n        return new Promise<void>((resolve) => {\n          setTimeout(() => {\n            this.importNext(index + 1).then(() => {\n              resolve();\n            });\n          }, 500);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  };\n\n  import = (dash: PluginDashboard, overwrite: boolean) => {\n    const { plugin, datasource } = this.props;\n\n    const installCmd = {\n      pluginId: plugin.id,\n      path: dash.path,\n      overwrite: overwrite,\n      inputs: datasource\n        ? [\n            {\n              name: '*',\n              type: 'datasource',\n              pluginId: datasource.meta.id,\n              value: datasource.name,\n            },\n          ]\n        : [],\n    };\n\n    return getBackendSrv()\n      .post(`/api/dashboards/import`, installCmd)\n      .then((res: PluginDashboard) => {\n        appEvents.emit(AppEvents.alertSuccess, ['Dashboard Imported', dash.title]);\n        extend(dash, res);\n        this.setState({ dashboards: [...this.state.dashboards] });\n      });\n  };\n\n  remove = (dash: PluginDashboard) => {\n    getBackendSrv()\n      .delete('/api/dashboards/uid/' + dash.uid)\n      .then(() => {\n        dash.imported = false;\n        this.setState({ dashboards: [...this.state.dashboards] });\n      });\n  };\n\n  render() {\n    const { loading, dashboards } = this.state;\n    if (loading) {\n      return <div>loading...</div>;\n    }\n    if (!dashboards || !dashboards.length) {\n      return <div>No dashboards are included with this plugin</div>;\n    }\n\n    return <DashboardsTable dashboards={dashboards} onImport={this.import} onRemove={this.remove} />;\n  }\n}\n","import { css } from '@emotion/css';\nimport { useMemo } from 'react';\nimport { useAsync } from 'react-use';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { of } from 'rxjs';\n\nimport { GrafanaTheme2, PluginMeta, PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, Spinner, useStyles2 } from '@grafana/ui';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { SearchResultsTable } from 'app/features/search/page/components/SearchResultsTable';\nimport { getGrafanaSearcher } from 'app/features/search/service/searcher';\nimport { SearchQuery } from 'app/features/search/service/types';\n\ntype Props = {\n  plugin: PluginMeta;\n};\n\nexport function PluginUsage({ plugin }: Props) {\n  const styles = useStyles2(getStyles);\n\n  const searchQuery = useMemo<SearchQuery>(() => {\n    if (plugin.type === PluginType.datasource) {\n      return {\n        query: '*',\n        ds_type: plugin.id,\n        kind: ['dashboard'],\n      };\n    }\n    return {\n      query: '*',\n      panel_type: plugin.id,\n      kind: ['panel'],\n    };\n  }, [plugin]);\n\n  const results = useAsync(() => {\n    return getGrafanaSearcher().search(searchQuery);\n  }, [searchQuery]);\n\n  const found = results.value;\n  if (found?.totalRows) {\n    return (\n      <div className={styles.wrap}>\n        <div className={styles.info}>\n          {plugin.name} is used <b>{found.totalRows}</b> times.\n        </div>\n        <AutoSizer>\n          {({ width, height }) => {\n            return (\n              <SearchResultsTable\n                response={found}\n                width={width}\n                height={height}\n                clearSelection={() => {}}\n                keyboardEvents={of()}\n                onTagSelected={() => {}}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n\n  if (results.loading) {\n    return <Spinner />;\n  }\n\n  if (!config.featureToggles.panelTitleSearch) {\n    return (\n      <Alert title=\"Missing feature toggle: panelTitleSearch\">\n        Plugin usage requires the new search index to find usage across dashboards\n      </Alert>\n    );\n  }\n\n  return (\n    <EmptyListCTA\n      title={`${plugin.name} is not used in any dashboards yet`}\n      buttonIcon=\"plus\"\n      buttonTitle=\"Create Dashboard\"\n      buttonLink={`dashboard/new?panelType=${plugin.id}&editPanel=1`}\n    />\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrap: css({\n      width: '100%',\n      height: '90%',\n    }),\n    info: css({\n      paddingBottom: '30px',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { useMemo } from 'react';\n\nimport { AppPlugin, GrafanaTheme2, PluginContextProvider, UrlQueryMap, PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { PageInfoItem } from '@grafana/runtime/src/components/PluginPage';\nimport { CellProps, Column, InteractiveTable, Stack, useStyles2 } from '@grafana/ui';\n\nimport { Changelog } from '../components/Changelog';\nimport { PluginDetailsPanel } from '../components/PluginDetailsPanel';\nimport { VersionList } from '../components/VersionList';\nimport { shouldDisablePluginInstall } from '../helpers';\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { CatalogPlugin, Permission, PluginTabIds } from '../types';\n\nimport { AppConfigCtrlWrapper } from './AppConfigWrapper';\nimport Connections from './ConnectionsTab';\nimport { PluginDashboards } from './PluginDashboards';\nimport { PluginUsage } from './PluginUsage';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  info: PageInfoItem[];\n  queryParams: UrlQueryMap;\n  pageId: string;\n  showDetails: boolean;\n};\n\ntype Cell<T extends keyof Permission = keyof Permission> = CellProps<Permission, Permission[T]>;\n\nexport function PluginDetailsBody({ plugin, queryParams, pageId, info, showDetails }: Props): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const { value: pluginConfig } = usePluginConfig(plugin);\n  const columns: Array<Column<Permission>> = useMemo(\n    () => [\n      {\n        id: 'action',\n        header: 'Action',\n        cell: ({ cell: { value } }: Cell<'action'>) => value,\n      },\n      {\n        id: 'scope',\n        header: 'Scope',\n        cell: ({ cell: { value } }: Cell<'scope'>) => value,\n      },\n    ],\n    []\n  );\n\n  if (pageId === PluginTabIds.OVERVIEW) {\n    return (\n      <div\n        className={styles.readme}\n        dangerouslySetInnerHTML={{\n          __html: plugin.details?.readme ?? 'No plugin help or readme markdown file was found',\n        }}\n      />\n    );\n  }\n\n  if (pageId === PluginTabIds.VERSIONS) {\n    return (\n      <div>\n        <VersionList\n          pluginId={plugin.id}\n          versions={plugin.details?.versions}\n          installedVersion={plugin.installedVersion}\n          disableInstallation={shouldDisablePluginInstall(plugin)}\n        />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.CHANGELOG && plugin?.details?.changelog) {\n    return <Changelog sanitizedHTML={plugin?.details?.changelog} />;\n  }\n\n  if (pageId === PluginTabIds.CONFIG && pluginConfig?.angularConfigCtrl) {\n    return (\n      <div>\n        <AppConfigCtrlWrapper app={pluginConfig as AppPlugin} />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.PLUGINDETAILS && config.featureToggles.pluginsDetailsRightPanel && showDetails) {\n    return (\n      <div>\n        <PluginDetailsPanel pluginExtentionsInfo={info} plugin={plugin} width={'auto'} />\n      </div>\n    );\n  }\n\n  if (\n    config.featureToggles.datasourceConnectionsTab &&\n    pageId === PluginTabIds.DATASOURCE_CONNECTIONS &&\n    plugin.type === PluginType.datasource\n  ) {\n    return (\n      <div>\n        <Connections plugin={plugin} />\n      </div>\n    );\n  }\n\n  // Permissions will be returned in the iam field for installed plugins and in the details.iam field when fetching details from gcom\n  const permissions = plugin.iam?.permissions || plugin.details?.iam?.permissions;\n\n  const displayPermissions =\n    config.featureToggles.externalServiceAccounts &&\n    pageId === PluginTabIds.IAM &&\n    permissions &&\n    permissions.length > 0;\n\n  if (displayPermissions) {\n    return (\n      <>\n        <Stack direction=\"row\">\n          The {plugin.name} plugin needs a service account to be able to query Grafana. The following list contains the\n          permissions available to the service account:\n        </Stack>\n        <InteractiveTable\n          columns={columns}\n          data={permissions}\n          getRowId={(permission: Permission) => String(permission.action)}\n        />\n      </>\n    );\n  }\n\n  if (pluginConfig?.configPages) {\n    for (const configPage of pluginConfig.configPages) {\n      if (pageId === configPage.id) {\n        return (\n          <div>\n            <PluginContextProvider meta={pluginConfig.meta}>\n              <configPage.body plugin={pluginConfig} query={queryParams} />\n            </PluginContextProvider>\n          </div>\n        );\n      }\n    }\n  }\n\n  if (pageId === PluginTabIds.USAGE && pluginConfig) {\n    return (\n      <div className={styles.wrap}>\n        <PluginUsage plugin={pluginConfig?.meta} />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.DASHBOARDS && pluginConfig) {\n    return (\n      <div>\n        <PluginDashboards plugin={pluginConfig?.meta} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <p>Page not found.</p>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  wrap: css({\n    width: '100%',\n    height: '50vh',\n  }),\n  readme: css({\n    '& img': {\n      maxWidth: '100%',\n    },\n    'h1, h2, h3': {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2),\n    },\n    '*:first-child': {\n      marginTop: 0,\n    },\n    li: {\n      marginLeft: theme.spacing(2),\n      '& > p': {\n        margin: theme.spacing(1, 0),\n      },\n      code: {\n        whiteSpace: 'pre-wrap',\n      },\n    },\n    a: {\n      color: theme.colors.text.link,\n      '&:hover': {\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n      },\n    },\n    table: {\n      tableLayout: 'fixed',\n      width: '100%',\n      'td, th': {\n        overflowX: 'auto',\n        padding: theme.spacing(0.5, 1),\n      },\n      'table, th, td': {\n        border: `1px solid ${theme.colors.border.medium}`,\n        borderCollapse: 'collapse',\n      },\n    },\n  }),\n});\n","import { ReactElement } from 'react';\n\nimport { PluginErrorCode } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsDisabledError({ className, plugin }: Props): ReactElement | null {\n  if (!plugin.isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"error\"\n      title=\"Plugin disabled\"\n      className={className}\n      data-testid={selectors.pages.PluginPage.disabledInfo}\n    >\n      {renderDescriptionFromError(plugin.error)}\n      <p>Please contact your server administrator to get this resolved.</p>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/administration/cli/#plugins-commands\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about managing plugins\n      </a>\n    </Alert>\n  );\n}\n\nfunction renderDescriptionFromError(error?: PluginErrorCode): ReactElement {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that the content of this plugin does not match its signature. We can not guarantee the trustworthy\n          of this plugin and have therefore disabled it. We recommend you to reinstall the plugin to make sure you are\n          running a verified version of this plugin.\n        </p>\n      );\n    case PluginErrorCode.invalidSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that it was invalid. We can not guarantee the trustworthy of this plugin and have therefore\n          disabled it. We recommend you to reinstall the plugin to make sure you are running a verified version of this\n          plugin.\n        </p>\n      );\n    case PluginErrorCode.missingSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that there is no signature for this plugin. We can not guarantee the trustworthy of this plugin and\n          have therefore disabled it. We recommend you to reinstall the plugin to make sure you are running a verified\n          version of this plugin.\n        </p>\n      );\n    case PluginErrorCode.failedBackendStart:\n      return <p>This plugin failed to start. Server logs can provide more information.</p>;\n    case PluginErrorCode.angular:\n      // Error message already rendered by AngularDeprecationPluginNotice\n      return <></>;\n    default:\n      return (\n        <p>\n          We failed to run this plugin due to an unkown reason and have therefore disabled it. We recommend you to\n          reinstall the plugin to make sure you are running a working version of this plugin.\n        </p>\n      );\n  }\n}\n","import * as React from 'react';\n\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\n// Designed to show signature information inside the active tab on the plugin's details page\nexport function PluginDetailsSignature({ className, plugin }: Props): React.ReactElement | null {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n  const isCore = plugin.signature === PluginSignatureStatus.internal;\n  const isDisabled = plugin.isDisabled && isDisabledDueTooSignatureError(plugin.error);\n\n  // The basic information is already available in the header\n  if (isSignatureValid || isCore || isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"warning\"\n      title=\"Invalid plugin signature\"\n      data-testid={selectors.pages.PluginPage.signatureInfo}\n      className={className}\n    >\n      <p>\n        Grafana Labs checks each plugin to verify that it has a valid digital signature. Plugin signature verification\n        is part of our security measures to ensure plugins are safe and trustworthy. Grafana Labs can’t guarantee the\n        integrity of this unsigned plugin. Ask the plugin author to request it to be signed.\n      </p>\n\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about plugins signing.\n      </a>\n    </Alert>\n  );\n}\n\nfunction isDisabledDueTooSignatureError(error: PluginErrorCode | undefined) {\n  // If the plugin is disabled due to signature error we rely on the disabled\n  // error message instad of the warning about the signature.\n\n  switch (error) {\n    case PluginErrorCode.invalidSignature:\n    case PluginErrorCode.missingSignature:\n    case PluginErrorCode.modifiedSignature:\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\n\nimport { GrafanaPlugin, NavModelItem, PluginIncludeType, PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { CatalogPlugin, PluginTabIds, PluginTabLabels } from '../types';\n\ntype ReturnType = {\n  error: Error | undefined;\n  loading: boolean;\n  navModel: NavModelItem;\n  activePageId: PluginTabIds | string;\n};\n\nfunction getCurrentPageId(\n  pageId: PluginTabIds | undefined,\n  isNarrowScreen: boolean | undefined,\n  defaultTab: string\n): PluginTabIds | string {\n  if (!isNarrowScreen && pageId === PluginTabIds.PLUGINDETAILS) {\n    return defaultTab;\n  }\n  return pageId || defaultTab;\n}\n\nexport const usePluginDetailsTabs = (\n  plugin?: CatalogPlugin,\n  pageId?: PluginTabIds,\n  isNarrowScreen?: boolean\n): ReturnType => {\n  const { loading, error, value: pluginConfig } = usePluginConfig(plugin);\n  const { pathname } = useLocation();\n  const defaultTab = useDefaultPage(plugin, pluginConfig);\n  const isPublished = Boolean(plugin?.isPublished);\n\n  const currentPageId = getCurrentPageId(pageId, isNarrowScreen, defaultTab);\n\n  const navModelChildren = useMemo(() => {\n    const canConfigurePlugins = plugin && contextSrv.hasPermissionInMetadata(AccessControlAction.PluginsWrite, plugin);\n    const navModelChildren: NavModelItem[] = [];\n    // currently the versions available of core plugins are not consistent\n    if (isPublished && !plugin?.isCore) {\n      navModelChildren.push({\n        text: PluginTabLabels.VERSIONS,\n        id: PluginTabIds.VERSIONS,\n        icon: 'history',\n        url: `${pathname}?page=${PluginTabIds.VERSIONS}`,\n        active: PluginTabIds.VERSIONS === currentPageId,\n      });\n    }\n    // currently there is not changelog available for core plugins\n    if (isPublished && plugin?.details?.changelog && !plugin.isCore) {\n      navModelChildren.push({\n        text: PluginTabLabels.CHANGELOG,\n        id: PluginTabIds.CHANGELOG,\n        icon: 'rocket',\n        url: `${pathname}?page=${PluginTabIds.CHANGELOG}`,\n        active: PluginTabIds.CHANGELOG === currentPageId,\n      });\n    }\n\n    if (isPublished && isNarrowScreen && config.featureToggles.pluginsDetailsRightPanel) {\n      navModelChildren.push({\n        text: PluginTabLabels.PLUGINDETAILS,\n        id: PluginTabIds.PLUGINDETAILS,\n        icon: 'info-circle',\n        url: `${pathname}?page=${PluginTabIds.PLUGINDETAILS}`,\n        active: PluginTabIds.PLUGINDETAILS === currentPageId,\n      });\n    }\n\n    // Not extending the tabs with the config pages if the plugin is not installed\n    if (!pluginConfig) {\n      return navModelChildren;\n    }\n\n    if (config.featureToggles.externalServiceAccounts && (plugin?.iam || plugin?.details?.iam)) {\n      navModelChildren.push({\n        text: PluginTabLabels.IAM,\n        icon: 'shield',\n        id: PluginTabIds.IAM,\n        url: `${pathname}?page=${PluginTabIds.IAM}`,\n        active: PluginTabIds.IAM === currentPageId,\n      });\n    }\n\n    if (\n      config.featureToggles.panelTitleSearch &&\n      (pluginConfig.meta.type === PluginType.panel || pluginConfig.meta.type === PluginType.datasource)\n    ) {\n      navModelChildren.push({\n        text: PluginTabLabels.USAGE,\n        icon: 'list-ul',\n        id: PluginTabIds.USAGE,\n        url: `${pathname}?page=${PluginTabIds.USAGE}`,\n        active: PluginTabIds.USAGE === currentPageId,\n      });\n    }\n\n    if (config.featureToggles.datasourceConnectionsTab && plugin?.type === PluginType.datasource) {\n      navModelChildren.push({\n        text: PluginTabLabels.DATASOURCE_CONNECTIONS,\n        icon: 'database',\n        id: PluginTabIds.DATASOURCE_CONNECTIONS,\n        url: `${pathname}?page=${PluginTabIds.DATASOURCE_CONNECTIONS}`,\n        active: PluginTabIds.DATASOURCE_CONNECTIONS === currentPageId,\n      });\n    }\n\n    if (!canConfigurePlugins) {\n      return navModelChildren;\n    }\n\n    if (pluginConfig.meta.type === PluginType.app) {\n      if (pluginConfig.angularConfigCtrl) {\n        navModelChildren.push({\n          text: 'Config',\n          icon: 'cog',\n          id: PluginTabIds.CONFIG,\n          url: `${pathname}?page=${PluginTabIds.CONFIG}`,\n          active: PluginTabIds.CONFIG === currentPageId,\n        });\n      }\n\n      if (pluginConfig.configPages) {\n        for (const configPage of pluginConfig.configPages) {\n          navModelChildren.push({\n            text: configPage.title,\n            icon: configPage.icon,\n            id: configPage.id,\n            url: `${pathname}?page=${configPage.id}`,\n            active: configPage.id === currentPageId,\n          });\n        }\n      }\n\n      if (pluginConfig.meta.includes?.find((include) => include.type === PluginIncludeType.dashboard)) {\n        navModelChildren.push({\n          text: 'Dashboards',\n          icon: 'apps',\n          id: PluginTabIds.DASHBOARDS,\n          url: `${pathname}?page=${PluginTabIds.DASHBOARDS}`,\n          active: PluginTabIds.DASHBOARDS === currentPageId,\n        });\n      }\n    }\n\n    return navModelChildren;\n  }, [plugin, pluginConfig, pathname, isPublished, currentPageId, isNarrowScreen]);\n\n  const navModel: NavModelItem = {\n    text: plugin?.name ?? '',\n    img: plugin?.info.logos.small,\n    url: pathname,\n    children: [\n      {\n        text: PluginTabLabels.OVERVIEW,\n        icon: 'file-alt',\n        id: PluginTabIds.OVERVIEW,\n        url: `${pathname}?page=${PluginTabIds.OVERVIEW}`,\n        active: PluginTabIds.OVERVIEW === currentPageId,\n      },\n      ...navModelChildren,\n    ],\n  };\n\n  return {\n    error,\n    loading,\n    navModel,\n    activePageId: currentPageId,\n  };\n};\n\nfunction useDefaultPage(plugin: CatalogPlugin | undefined, pluginConfig: GrafanaPlugin | undefined | null) {\n  if (!plugin || !pluginConfig) {\n    return PluginTabIds.OVERVIEW;\n  }\n\n  const hasAccess = contextSrv.hasPermissionInMetadata(AccessControlAction.PluginsWrite, plugin);\n\n  if (!hasAccess || pluginConfig.meta.type !== PluginType.app) {\n    return PluginTabIds.OVERVIEW;\n  }\n\n  if (pluginConfig.angularConfigCtrl) {\n    return PluginTabIds.CONFIG;\n  }\n\n  if (pluginConfig.configPages?.length) {\n    return pluginConfig.configPages[0].id;\n  }\n\n  return PluginTabIds.OVERVIEW;\n}\n","import * as React from 'react';\n\nimport { PluginMeta } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nimport { updatePluginSettings } from '../../api';\nimport { usePluginConfig } from '../../hooks/usePluginConfig';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithApp({ plugin }: Props): React.ReactElement | null {\n  const { value: pluginConfig } = usePluginConfig(plugin);\n\n  if (!pluginConfig) {\n    return null;\n  }\n  // Enforce RBAC\n  if (!contextSrv.hasPermission(AccessControlAction.PluginsWrite)) {\n    return null;\n  }\n\n  const { enabled, autoEnabled, jsonData } = pluginConfig?.meta;\n\n  const enable = () => {\n    reportInteraction('plugins_detail_enable_clicked', {\n      path: location.pathname,\n      plugin_id: plugin.id,\n      creator_team: 'grafana_plugins_catalog',\n      schema_version: '1.0.0',\n    });\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: true,\n      pinned: true,\n      jsonData,\n    });\n  };\n\n  const disable = () => {\n    reportInteraction('plugins_detail_disable_clicked', {\n      path: location.pathname,\n      plugin_id: plugin.id,\n      creator_team: 'grafana_plugins_catalog',\n      schema_version: '1.0.0',\n    });\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: false,\n      pinned: false,\n      jsonData,\n    });\n  };\n\n  return (\n    <>\n      {!enabled && (\n        <Button variant=\"primary\" onClick={enable}>\n          Enable\n        </Button>\n      )}\n\n      {enabled && !autoEnabled && (\n        <Button variant=\"destructive\" onClick={disable}>\n          Disable\n        </Button>\n      )}\n    </>\n  );\n}\n\nconst updatePluginSettingsAndReload = async (id: string, data: Partial<PluginMeta>) => {\n  try {\n    await updatePluginSettings(id, data);\n\n    // Reloading the page as the plugin meta changes made here wouldn't be propagated throughout the app.\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};\n","import { ReactElement } from 'react';\n\nimport { PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\n\nimport { CatalogPlugin } from '../../types';\n\nimport { GetStartedWithApp } from './GetStartedWithApp';\nimport { GetStartedWithDataSource } from './GetStartedWithDataSource';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithPlugin({ plugin }: Props): ReactElement | null {\n  const isInstalled = config.pluginAdminExternalManageEnabled ? plugin.isFullyInstalled : plugin.isInstalled;\n\n  if (!isInstalled || plugin.isDisabled) {\n    return null;\n  }\n\n  switch (plugin.type) {\n    case PluginType.datasource:\n      return <GetStartedWithDataSource plugin={plugin} />;\n    case PluginType.app:\n      return <GetStartedWithApp plugin={plugin} />;\n    default:\n      return null;\n  }\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, PluginType } from '@grafana/data';\nimport { config, featureEnabled } from '@grafana/runtime';\nimport { HorizontalGroup, LinkButton, useStyles2, Alert } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nimport { getExternalManageLink } from '../../helpers';\nimport { useIsRemotePluginsAvailable } from '../../state/hooks';\nimport { CatalogPlugin, PluginStatus, Version } from '../../types';\n\ninterface Props {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n  latestCompatibleVersion?: Version;\n}\n\nexport const InstallControlsWarning = ({ plugin, pluginStatus, latestCompatibleVersion }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const hasPermission = contextSrv.hasPermission(AccessControlAction.PluginsInstall);\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const isCompatible = Boolean(latestCompatibleVersion);\n\n  if (plugin.type === PluginType.renderer) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"Renderer plugins cannot be managed by the Plugin Catalog.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (plugin.type === PluginType.secretsmanager) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"Secrets manager plugins cannot be managed by the Plugin Catalog.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (plugin.isEnterprise && !featureEnabled('enterprise.plugins')) {\n    return (\n      <Alert severity=\"warning\" title=\"\" className={styles.alert}>\n        <HorizontalGroup height=\"auto\" align=\"center\">\n          <span>No valid Grafana Enterprise license detected.</span>\n          <LinkButton\n            href={`${getExternalManageLink(plugin.id)}?utm_source=grafana_catalog_learn_more`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            size=\"sm\"\n            fill=\"text\"\n            icon=\"external-link-alt\"\n          >\n            Learn more\n          </LinkButton>\n        </HorizontalGroup>\n      </Alert>\n    );\n  }\n\n  if (plugin.isDev) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"This is a development build of the plugin and can&#39;t be uninstalled.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    return <Alert severity=\"warning\" title={statusToMessage(pluginStatus)} className={styles.alert} />;\n  }\n\n  if (!plugin.isPublished) {\n    return (\n      <Alert severity=\"warning\" title=\"\" className={styles.alert}>\n        <div>\n          This plugin is not published to{' '}\n          <a href=\"https://www.grafana.com/plugins\" target=\"__blank\" rel=\"noreferrer\">\n            grafana.com/plugins\n          </a>{' '}\n          and can&#39;t be managed via the catalog.\n        </div>\n      </Alert>\n    );\n  }\n\n  if (!isCompatible) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"This plugin doesn&#39;t support your version of Grafana.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (!isRemotePluginsAvailable) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"The install controls have been disabled because the Grafana server cannot access grafana.com.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    alert: css({\n      marginTop: `${theme.spacing(2)}`,\n    }),\n  };\n};\n\nfunction statusToMessage(status: PluginStatus): string {\n  switch (status) {\n    case PluginStatus.INSTALL:\n    case PluginStatus.REINSTALL:\n      return `You do not have permission to install this plugin.`;\n    case PluginStatus.UNINSTALL:\n      return `You do not have permission to uninstall this plugin.`;\n    case PluginStatus.UPDATE:\n      return `You do not have permission to update this plugin.`;\n    default:\n      return `You do not have permission to manage this plugin.`;\n  }\n}\n","import { reportInteraction } from '@grafana/runtime';\n\ntype PluginTrackingProps = {\n  // The ID of the plugin (e.g. grafana-azure-monitor-datasource)\n  plugin_id: string;\n  // The type of the plugin (e.g. 'app' or 'datasource')\n  plugin_type?: string;\n  // The path where the plugin details page was rendered (e.g. /plugins/grafana-azure-monitor-datasource )\n  path: string;\n};\n\nexport const trackPluginInstalled = (props: PluginTrackingProps) => {\n  reportInteraction('grafana_plugin_install_clicked', props);\n};\n\nexport const trackPluginUninstalled = (props: PluginTrackingProps) => {\n  reportInteraction('grafana_plugin_uninstall_clicked', props);\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\n\nimport { AppEvents } from '@grafana/data';\nimport { config, locationService, reportInteraction } from '@grafana/runtime';\nimport { Button, ConfirmModal, Stack } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { removePluginFromNavTree } from 'app/core/reducers/navBarTree';\nimport { useDispatch } from 'app/types';\n\nimport {\n  useInstallStatus,\n  useUninstallStatus,\n  useInstall,\n  useUninstall,\n  useUnsetInstall,\n  useFetchDetailsLazy,\n} from '../../state/hooks';\nimport { trackPluginInstalled, trackPluginUninstalled } from '../../tracking';\nimport { CatalogPlugin, PluginStatus, PluginTabIds, Version } from '../../types';\n\nconst PLUGIN_UPDATE_INTERACTION_EVENT_NAME = 'plugin_update_clicked';\n\ntype InstallControlsButtonProps = {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n  latestCompatibleVersion?: Version;\n  hasInstallWarning?: boolean;\n  setNeedReload?: (needReload: boolean) => void;\n};\n\nexport function InstallControlsButton({\n  plugin,\n  pluginStatus,\n  latestCompatibleVersion,\n  hasInstallWarning,\n  setNeedReload,\n}: InstallControlsButtonProps) {\n  const dispatch = useDispatch();\n  const [queryParams] = useQueryParams();\n  const location = useLocation();\n  const { isInstalling, error: errorInstalling } = useInstallStatus();\n  const { isUninstalling, error: errorUninstalling } = useUninstallStatus();\n  const install = useInstall();\n  const uninstall = useUninstall();\n  const unsetInstall = useUnsetInstall();\n  const fetchDetails = useFetchDetailsLazy();\n  const [isConfirmModalVisible, setIsConfirmModalVisible] = useState(false);\n  const showConfirmModal = () => setIsConfirmModalVisible(true);\n  const hideConfirmModal = () => setIsConfirmModalVisible(false);\n  const uninstallBtnText = isUninstalling ? 'Uninstalling' : 'Uninstall';\n  const trackingProps = {\n    plugin_id: plugin.id,\n    plugin_type: plugin.type,\n    path: location.pathname,\n    creator_team: 'grafana_plugins_catalog',\n    schema_version: '1.0.0',\n  };\n\n  useEffect(() => {\n    return () => {\n      // Remove possible installation errors\n      unsetInstall();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onInstall = async () => {\n    trackPluginInstalled(trackingProps);\n    const result = await install(plugin.id, latestCompatibleVersion?.version);\n    if (!errorInstalling && !('error' in result)) {\n      let successMessage = `Installed ${plugin.name}`;\n      if (config.pluginAdminExternalManageEnabled) {\n        successMessage = 'Install requested, this may take a few minutes.';\n      }\n\n      appEvents.emit(AppEvents.alertSuccess, [successMessage]);\n      if (plugin.type === 'app') {\n        setNeedReload?.(true);\n      }\n\n      await fetchDetails(plugin.id);\n    }\n  };\n\n  const onUninstall = async () => {\n    hideConfirmModal();\n    trackPluginUninstalled(trackingProps);\n    await uninstall(plugin.id);\n    if (!errorUninstalling) {\n      // If an app plugin is uninstalled we need to reset the active tab when the config / dashboards tabs are removed.\n      const activePageId = queryParams.page;\n      const isViewingAppConfigPage = activePageId !== PluginTabIds.OVERVIEW && activePageId !== PluginTabIds.VERSIONS;\n      if (isViewingAppConfigPage) {\n        locationService.replace(`${location.pathname}?page=${PluginTabIds.OVERVIEW}`);\n      }\n\n      let successMessage = `Uninstalled ${plugin.name}`;\n      if (config.pluginAdminExternalManageEnabled) {\n        successMessage = 'Uninstall requested, this may take a few minutes.';\n      }\n\n      appEvents.emit(AppEvents.alertSuccess, [successMessage]);\n      if (plugin.type === 'app') {\n        dispatch(removePluginFromNavTree({ pluginID: plugin.id }));\n        setNeedReload?.(false);\n      }\n    }\n  };\n\n  const onUpdate = async () => {\n    reportInteraction(PLUGIN_UPDATE_INTERACTION_EVENT_NAME, trackingProps);\n\n    await install(plugin.id, latestCompatibleVersion?.version, true);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n    }\n  };\n\n  let disableUninstall = shouldDisableUninstall(isUninstalling, plugin);\n\n  let uninstallTitle = '';\n  if (plugin.isPreinstalled.found) {\n    disableUninstall = true;\n    uninstallTitle = 'Preinstalled plugin. Remove from Grafana config before uninstalling.';\n  }\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <>\n        <ConfirmModal\n          isOpen={isConfirmModalVisible}\n          title={`Uninstall ${plugin.name}`}\n          body=\"Are you sure you want to uninstall this plugin?\"\n          confirmText=\"Confirm\"\n          icon=\"exclamation-triangle\"\n          onConfirm={onUninstall}\n          onDismiss={hideConfirmModal}\n        />\n        <Stack alignItems=\"flex-start\" width=\"auto\" height=\"auto\">\n          <Button variant=\"destructive\" disabled={disableUninstall} onClick={showConfirmModal} title={uninstallTitle}>\n            {uninstallBtnText}\n          </Button>\n        </Stack>\n      </>\n    );\n  }\n\n  if (!plugin.isPublished || hasInstallWarning) {\n    // Cannot be updated or installed\n    return null;\n  }\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    const disableUpdate = config.pluginAdminExternalManageEnabled ? plugin.isUpdatingFromInstance : isInstalling;\n\n    return (\n      <Stack alignItems=\"flex-start\" width=\"auto\" height=\"auto\">\n        {!plugin.isManaged && !plugin.isPreinstalled.withVersion && (\n          <Button disabled={disableUpdate} onClick={onUpdate}>\n            {isInstalling ? 'Updating' : 'Update'}\n          </Button>\n        )}\n        <Button variant=\"destructive\" disabled={disableUninstall} onClick={onUninstall} title={uninstallTitle}>\n          {uninstallBtnText}\n        </Button>\n      </Stack>\n    );\n  }\n  const shouldDisable = isInstalling || errorInstalling || (!config.angularSupportEnabled && plugin.angularDetected);\n  return (\n    <Button disabled={shouldDisable} onClick={onInstall}>\n      {isInstalling ? 'Installing' : 'Install'}\n    </Button>\n  );\n}\n\nfunction shouldDisableUninstall(isUninstalling: boolean, plugin: CatalogPlugin) {\n  if (config.pluginAdminExternalManageEnabled) {\n    return plugin.isUninstallingFromInstance || !plugin.isFullyInstalled || plugin.isUpdatingFromInstance;\n  }\n\n  return isUninstalling;\n}\n","import { css } from '@emotion/css';\nimport { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Stack, useStyles2 } from '@grafana/ui';\n\nimport { GetStartedWithPlugin } from '../components/GetStartedWithPlugin';\nimport { InstallControlsButton } from '../components/InstallControls';\nimport { getLatestCompatibleVersion, hasInstallControlWarning, isInstallControlsEnabled } from '../helpers';\nimport { useIsRemotePluginsAvailable } from '../state/hooks';\nimport { CatalogPlugin, PluginStatus } from '../types';\n\ninterface Props {\n  plugin?: CatalogPlugin;\n}\n\nexport const PluginActions = ({ plugin }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin?.details?.versions);\n  const [needReload, setNeedReload] = useState(false);\n\n  if (!plugin) {\n    return null;\n  }\n\n  const hasInstallWarning = hasInstallControlWarning(plugin, isRemotePluginsAvailable, latestCompatibleVersion);\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n  const isInstallControlsDisabled =\n    plugin.isCore || plugin.isDisabled || plugin.isProvisioned || !isInstallControlsEnabled();\n\n  return (\n    <Stack direction=\"column\">\n      <Stack alignItems=\"center\">\n        {!isInstallControlsDisabled && (\n          <InstallControlsButton\n            plugin={plugin}\n            latestCompatibleVersion={latestCompatibleVersion}\n            pluginStatus={pluginStatus}\n            setNeedReload={setNeedReload}\n            hasInstallWarning={hasInstallWarning}\n          />\n        )}\n        <GetStartedWithPlugin plugin={plugin} />\n      </Stack>\n      {needReload && (\n        <Stack alignItems=\"center\">\n          <Icon name=\"exclamation-triangle\" />\n          <span className={styles.message}>Refresh the page to see the changes</span>\n        </Stack>\n      )}\n    </Stack>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    message: css({\n      color: theme.colors.text.secondary,\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { Fragment } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, Stack, useStyles2 } from '@grafana/ui';\n\nimport { InstallControlsWarning } from '../components/InstallControls';\nimport { getLatestCompatibleVersion, hasInstallControlWarning } from '../helpers';\nimport { useInstallStatus, useIsRemotePluginsAvailable } from '../state/hooks';\nimport { CatalogPlugin, PluginStatus } from '../types';\n\ninterface Props {\n  plugin?: CatalogPlugin;\n}\n\ntype PluginSubtitleExtension = (props: Props) => JSX.Element | null;\n\nconst pluginSubtitleExtensions: PluginSubtitleExtension[] = [];\n\nexport const registerPluginSubtitleExtension = (extension: PluginSubtitleExtension) => {\n  pluginSubtitleExtensions.push(extension);\n};\n\nexport const PluginSubtitle = ({ plugin }: Props) => {\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const styles = useStyles2(getStyles);\n  const { error: errorInstalling } = useInstallStatus();\n  if (!plugin) {\n    return null;\n  }\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin.details?.versions);\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n\n  return (\n    <div className={styles.subtitle}>\n      {errorInstalling && (\n        <Alert title={'message' in errorInstalling ? errorInstalling.message : ''}>\n          {typeof errorInstalling === 'string' ? errorInstalling : errorInstalling.error}\n        </Alert>\n      )}\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <div>\n          {plugin?.description && <div>{plugin?.description}</div>}\n          {!config.featureToggles.pluginsDetailsRightPanel && !!plugin?.details?.links?.length && (\n            <span>\n              {plugin.details.links.map((link, index) => (\n                <Fragment key={index}>\n                  {index > 0 && ' | '}\n                  <a href={link.url} className=\"external-link\">\n                    {link.name}\n                  </a>\n                </Fragment>\n              ))}\n            </span>\n          )}\n          {hasInstallControlWarning(plugin, isRemotePluginsAvailable, latestCompatibleVersion) && (\n            <InstallControlsWarning\n              plugin={plugin}\n              pluginStatus={pluginStatus}\n              latestCompatibleVersion={latestCompatibleVersion}\n            />\n          )}\n        </div>\n        {pluginSubtitleExtensions.map((extension) => {\n          return <Fragment key={extension.name}>{extension({ plugin })}</Fragment>;\n        })}\n      </Stack>\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    subtitle: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, Icon, Stack } from '@grafana/ui';\n\nimport { CatalogPlugin, PluginIconName } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  grafanaDependency?: string;\n  className?: string;\n};\n\nexport function PluginDetailsHeaderDependencies({ plugin, grafanaDependency }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  const pluginDependencies = plugin.details?.pluginDependencies;\n  const hasNoDependencyInfo = !grafanaDependency && (!pluginDependencies || !pluginDependencies.length);\n\n  if (hasNoDependencyInfo) {\n    return null;\n  }\n\n  return (\n    <Stack gap={1}>\n      {/* Grafana dependency */}\n      {Boolean(grafanaDependency) && (\n        <div className={styles.depBadge}>\n          <Icon name=\"grafana\" className={styles.icon} />\n          Grafana {grafanaDependency}\n        </div>\n      )}\n\n      {/* Plugin dependencies */}\n      {pluginDependencies && pluginDependencies.length > 0 && (\n        <div>\n          {pluginDependencies.map((p) => {\n            return (\n              <span className={styles.depBadge} key={p.name}>\n                <Icon name={PluginIconName[p.type]} className={styles.icon} />\n                {p.name} {p.version}\n              </span>\n            );\n          })}\n        </div>\n      )}\n    </Stack>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    dependencyTitle: css({\n      marginRight: theme.spacing(0.5),\n\n      '&::after': {\n        content: \"''\",\n        padding: 0,\n      },\n    }),\n    depBadge: css({\n      display: 'flex',\n      alignItems: 'flex-start',\n    }),\n    icon: css({\n      color: theme.colors.text.secondary,\n      marginRight: theme.spacing(0.5),\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { PluginSignatureBadge, useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\n// Designed to show plugin signature information in the header on the plugin's details page\nexport function PluginDetailsHeaderSignature({ plugin }: Props): React.ReactElement {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={styles.link}\n      >\n        <PluginSignatureBadge\n          status={plugin.signature}\n          signatureType={plugin.signatureType}\n          signatureOrg={plugin.signatureOrg}\n        />\n      </a>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: theme.spacing(0.5),\n    }),\n    link: css({\n      display: 'inline-flex',\n      alignItems: 'center',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, PluginSignatureType } from '@grafana/data';\nimport { t } from 'app/core/internationalization';\n\nimport { PageInfoItem } from '../../../../core/components/Page/types';\nimport { PluginDisabledBadge } from '../components/Badges';\nimport { PluginDetailsHeaderDependencies } from '../components/PluginDetailsHeaderDependencies';\nimport { PluginDetailsHeaderSignature } from '../components/PluginDetailsHeaderSignature';\nimport { getLatestCompatibleVersion } from '../helpers';\nimport { CatalogPlugin } from '../types';\n\nexport const usePluginInfo = (plugin?: CatalogPlugin): PageInfoItem[] => {\n  const info: PageInfoItem[] = [];\n\n  if (!plugin) {\n    return info;\n  }\n\n  // Populate info\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin.details?.versions);\n  const useLatestCompatibleInfo = !plugin.isInstalled;\n\n  const installedVersion = plugin.installedVersion;\n  const latestVersion = plugin.latestVersion;\n\n  if (installedVersion || latestVersion) {\n    const managedVersionText = 'Managed by Grafana';\n\n    const addInfo = (label: string, value: string | undefined) => {\n      if (value) {\n        info.push({\n          label:\n            label === 'installedVersion'\n              ? t('plugins.details.labels.installedVersion', 'Installed Version')\n              : t('plugins.details.labels.latestVersion', 'Latest Version'),\n          value,\n        });\n      }\n    };\n\n    if (plugin.isInstalled) {\n      const installedVersionValue = plugin.isManaged ? managedVersionText : installedVersion;\n      addInfo('installedVersion', installedVersionValue);\n    }\n\n    let latestVersionValue;\n    if (plugin.isManaged) {\n      latestVersionValue = managedVersionText;\n    } else if (plugin.isPreinstalled?.withVersion) {\n      latestVersionValue = `${latestVersion} (preinstalled)`;\n    } else {\n      latestVersionValue = latestVersion;\n    }\n\n    // latest versions of core plugins are not consistent\n    if (!plugin.isCore) {\n      addInfo('latestVersion', latestVersionValue);\n    }\n  }\n\n  if (Boolean(plugin.orgName)) {\n    info.push({\n      label: t('plugins.details.labels.from', 'From'),\n      value: plugin.orgName,\n    });\n  }\n\n  const showDownloads =\n    !plugin.signatureType ||\n    plugin.signatureType === PluginSignatureType.community ||\n    plugin.signatureType === PluginSignatureType.commercial;\n  if (showDownloads && Boolean(plugin.downloads > 0)) {\n    info.push({\n      label: t('plugins.details.labels.downloads', 'Downloads'),\n      value: new Intl.NumberFormat().format(plugin.downloads),\n    });\n  }\n\n  const pluginDependencies = plugin.details?.pluginDependencies;\n  let grafanaDependency = plugin.details?.grafanaDependency;\n  if (useLatestCompatibleInfo && latestCompatibleVersion?.grafanaDependency) {\n    grafanaDependency = latestCompatibleVersion?.grafanaDependency;\n  }\n  const hasNoDependencyInfo = !grafanaDependency && (!pluginDependencies || !pluginDependencies.length);\n\n  if (!hasNoDependencyInfo) {\n    info.push({\n      label: t('plugins.details.labels.dependencies', 'Dependencies'),\n      value: <PluginDetailsHeaderDependencies plugin={plugin} grafanaDependency={grafanaDependency} />,\n    });\n  }\n\n  if (plugin.isDisabled) {\n    info.push({\n      label: t('plugins.details.labels.status', 'Status'),\n      value: <PluginDisabledBadge error={plugin.error!} />,\n    });\n  }\n\n  info.push({\n    label: t('plugins.details.labels.signature', 'Signature'),\n    value: <PluginDetailsHeaderSignature plugin={plugin} />,\n  });\n\n  return info;\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    subtitle: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n  };\n};\n","import * as React from 'react';\n\nimport { PageInfoItem } from '../../../../core/components/Page/types';\nimport { PluginActions } from '../components/PluginActions';\nimport { PluginSubtitle } from '../components/PluginSubtitle';\nimport { CatalogPlugin } from '../types';\n\nimport { usePluginInfo } from './usePluginInfo';\n\ntype ReturnType = {\n  actions: React.ReactNode;\n  info: PageInfoItem[];\n  subtitle: React.ReactNode;\n};\n\nexport const usePluginPageExtensions = (plugin?: CatalogPlugin): ReturnType => {\n  const info = usePluginInfo(plugin);\n\n  return {\n    actions: <PluginActions plugin={plugin} />,\n    info,\n    subtitle: <PluginSubtitle plugin={plugin} />,\n  };\n};\n","import { useState } from 'react';\nimport * as React from 'react';\n\nimport { renderMarkdown } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsDeprecatedWarning(props: Props): React.ReactElement | null {\n  const { className, plugin } = props;\n  const [dismissed, setDismissed] = useState(false);\n  const isWarningVisible = plugin.isDeprecated && !dismissed;\n\n  return isWarningVisible ? (\n    <Alert severity=\"warning\" title=\"Deprecated\" className={className} onRemove={() => setDismissed(true)}>\n      <p>\n        This {plugin.type} plugin is{' '}\n        <a\n          className=\"external-link\"\n          href=\"https://grafana.com/legal/plugin-deprecation/\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          deprecated\n        </a>{' '}\n        and has been removed from the catalog.\n      </p>\n\n      {/* Additional contextual deprecation message supporting markdown */}\n      {plugin.details?.statusContext && (\n        <div\n          className=\"markdown-html\"\n          dangerouslySetInnerHTML={{\n            __html: renderMarkdown(plugin.details.statusContext),\n          }}\n        />\n      )}\n    </Alert>\n  ) : null;\n}\n","import { css } from '@emotion/css';\nimport * as React from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\nimport { useMedia } from 'react-use';\n\nimport { GrafanaTheme2, NavModelItem } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, Box, Stack, TabContent, useStyles2 } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { AppNotificationSeverity } from 'app/types';\n\nimport { AngularDeprecationPluginNotice } from '../../angularDeprecation/AngularDeprecationPluginNotice';\nimport { Loader } from '../components/Loader';\nimport { PluginDetailsBody } from '../components/PluginDetailsBody';\nimport { PluginDetailsDisabledError } from '../components/PluginDetailsDisabledError';\nimport { PluginDetailsPanel } from '../components/PluginDetailsPanel';\nimport { PluginDetailsSignature } from '../components/PluginDetailsSignature';\nimport { usePluginDetailsTabs } from '../hooks/usePluginDetailsTabs';\nimport { usePluginPageExtensions } from '../hooks/usePluginPageExtensions';\nimport { useGetSingle, useFetchStatus, useFetchDetailsStatus } from '../state/hooks';\nimport { PluginTabIds } from '../types';\n\nimport { PluginDetailsDeprecatedWarning } from './PluginDetailsDeprecatedWarning';\n\nexport type Props = {\n  // The ID of the plugin\n  pluginId: string;\n  // The navigation ID used for displaying the sidebar navigation\n  navId?: string;\n  // Can be used to customise the title & subtitle for the not found page\n  notFoundNavModel?: NavModelItem;\n  // Can be used to customise the content shown when a plugin with the given ID cannot be found\n  notFoundComponent?: React.ReactElement;\n};\n\nexport function PluginDetailsPage({\n  pluginId,\n  navId = 'plugins',\n  notFoundComponent = <NotFoundPlugin />,\n  notFoundNavModel = {\n    text: 'Unknown plugin',\n    subTitle: 'The requested ID does not belong to any plugin',\n    active: true,\n  },\n}: Props) {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const plugin = useGetSingle(pluginId); // fetches the plugin settings for this Grafana instance\n  const isNarrowScreen = useMedia('(max-width: 600px)');\n  const { navModel, activePageId } = usePluginDetailsTabs(\n    plugin,\n    queryParams.get('page') as PluginTabIds,\n    isNarrowScreen\n  );\n  const { actions, info, subtitle } = usePluginPageExtensions(plugin);\n  const { isLoading: isFetchLoading } = useFetchStatus();\n  const { isLoading: isFetchDetailsLoading } = useFetchDetailsStatus();\n  const styles = useStyles2(getStyles);\n\n  if (isFetchLoading || isFetchDetailsLoading) {\n    return (\n      <Page\n        navId={navId}\n        pageNav={{\n          text: '',\n          active: true,\n        }}\n      >\n        <Loader />\n      </Page>\n    );\n  }\n\n  if (!plugin) {\n    return (\n      <Page navId={navId} pageNav={notFoundNavModel}>\n        {notFoundComponent}\n      </Page>\n    );\n  }\n\n  const conditionalProps = !config.featureToggles.pluginsDetailsRightPanel ? { info: info } : {};\n\n  return (\n    <Page navId={navId} pageNav={navModel} actions={actions} subTitle={subtitle} {...conditionalProps}>\n      <Stack gap={4} justifyContent=\"space-between\" direction={{ xs: 'column-reverse', sm: 'row' }}>\n        <Page.Contents>\n          <TabContent className={styles.tabContent}>\n            {plugin.angularDetected && (\n              <AngularDeprecationPluginNotice\n                className={styles.alert}\n                angularSupportEnabled={config?.angularSupportEnabled}\n                pluginId={plugin.id}\n                pluginType={plugin.type}\n                showPluginDetailsLink={false}\n                interactionElementId=\"plugin-details-page\"\n              />\n            )}\n            <PluginDetailsSignature plugin={plugin} className={styles.alert} />\n            <PluginDetailsDisabledError plugin={plugin} className={styles.alert} />\n            <PluginDetailsDeprecatedWarning plugin={plugin} className={styles.alert} />\n            <PluginDetailsBody\n              queryParams={Object.fromEntries(queryParams)}\n              plugin={plugin}\n              pageId={activePageId}\n              info={info}\n              showDetails={isNarrowScreen}\n            />\n          </TabContent>\n        </Page.Contents>\n        {!isNarrowScreen && config.featureToggles.pluginsDetailsRightPanel && (\n          <PluginDetailsPanel pluginExtentionsInfo={info} plugin={plugin} />\n        )}\n      </Stack>\n    </Page>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    alert: css({\n      marginBottom: theme.spacing(2),\n    }),\n    subtitle: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n    // Needed due to block formatting context\n    tabContent: css({\n      paddingLeft: '5px',\n      width: '100%',\n    }),\n  };\n};\n\nfunction NotFoundPlugin() {\n  return (\n    <Stack justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n      <Box>\n        <Alert severity={AppNotificationSeverity.Warning} title=\"Plugin not found\">\n          That plugin cannot be found. Please check the url is correct or <br />\n          go to the <a href=\"/plugins\">plugin catalog</a>.\n        </Alert>\n      </Box>\n    </Stack>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { debounce } from 'lodash';\n\nimport { PluginError, PluginType, unEscapeStringFromRegex } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\n\nimport { filterByKeyword, isPluginUpdatable } from '../helpers';\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\n\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nconst debouncedTrackSearch = debounce((count) => {\n  reportInteraction('plugins_search', {\n    resultsCount: count,\n    creator_team: 'grafana_plugins_catalog',\n    schema_version: '1.0.0',\n  });\n}, 300);\n\nexport type PluginFilters = {\n  // Searches for a string in certain fields (e.g. \"name\" or \"orgName\")\n  // (Note: this will be an escaped regex string as it comes from `FilterInput`)\n  keyword?: string;\n\n  // (Optional, only applied if set)\n  type?: PluginType;\n\n  // (Optional, only applied if set)\n  isInstalled?: boolean;\n\n  // (Optional, only applied if set)\n  isEnterprise?: boolean;\n\n  // (Optional, only applied if set)\n  hasUpdate?: boolean;\n};\n\nexport const selectPlugins = (filters: PluginFilters) =>\n  createSelector(selectAll, (plugins) => {\n    const keyword = filters.keyword ? unEscapeStringFromRegex(filters.keyword.toLowerCase()) : '';\n    // Fuzzy search does not consider plugin type filter\n    const filteredPluginIds = keyword !== '' ? filterByKeyword(plugins, keyword) : null;\n\n    // Filters are applied here\n    const filteredPlugins = plugins.filter((plugin) => {\n      if (keyword && filteredPluginIds == null) {\n        return false;\n      }\n\n      if (keyword && !filteredPluginIds?.includes(plugin.id)) {\n        return false;\n      }\n\n      if (filters.type && plugin.type !== filters.type) {\n        return false;\n      }\n\n      if (filters.isInstalled !== undefined && plugin.isInstalled !== filters.isInstalled) {\n        return false;\n      }\n\n      if (filters.isEnterprise !== undefined && plugin.isEnterprise !== filters.isEnterprise) {\n        return false;\n      }\n\n      if (filters.hasUpdate !== undefined && (plugin.hasUpdate !== filters.hasUpdate || !isPluginUpdatable(plugin))) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (keyword) {\n      debouncedTrackSearch(filteredPlugins.length);\n    }\n\n    return filteredPlugins;\n  });\n\nexport const selectPluginErrors = (filterByPluginType?: PluginType) =>\n  createSelector(selectAll, (plugins) => {\n    const pluginErrors: PluginError[] = [];\n    for (const plugin of plugins) {\n      if (plugin.error && (!filterByPluginType || plugin.type === filterByPluginType)) {\n        pluginErrors.push({\n          pluginId: plugin.id,\n          errorCode: plugin.error,\n          pluginType: plugin.type,\n        });\n      }\n    }\n    return pluginErrors;\n  });\n\n// The following selectors are used to get information about the outstanding or completed plugins-related network requests.\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect, useMemo } from 'react';\n\nimport { PluginError, PluginType } from '@grafana/data';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { sortPlugins, Sorters, isPluginUpdatable } from '../helpers';\nimport { CatalogPlugin } from '../types';\n\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall, fetchAllLocal, unsetInstall } from './actions';\nimport {\n  selectPlugins,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectPluginErrors,\n  type PluginFilters,\n} from './selectors';\n\nexport const useGetAll = (filters: PluginFilters, sortBy: Sorters = Sorters.nameAsc) => {\n  useFetchAll();\n\n  const selector = useMemo(() => selectPlugins(filters), [filters]);\n  const plugins = useSelector(selector);\n  // As the locally installed plugins load quicker than the remote ones, we only show a loading state until these are being loaded\n  // (In case the remote ones are not loaded within a reasonable timeout, we will merge those with the locally installed plugins once they are loaded)\n  const { isLoading, error } = useLocalFetchStatus();\n  const sortedPlugins = sortPlugins(plugins, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedPlugins,\n  };\n};\n\nexport const useGetUpdatable = () => {\n  const { isLoading } = useFetchStatus();\n  const { plugins: installed } = useGetAll({ isInstalled: true });\n  const updatablePlugins = installed.filter(isPluginUpdatable);\n  return {\n    isLoading,\n    updatablePlugins,\n  };\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetSingleLocalWithoutDetails = (id: string): CatalogPlugin | undefined => {\n  useFetchAllLocal();\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetErrors = (filterByPluginType?: PluginType): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors(filterByPluginType));\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUnsetInstall = () => {\n  const dispatch = useDispatch();\n\n  return () => dispatch(unsetInstall());\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useLocalFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending('plugins/fetchLocal'));\n  const error = useSelector(selectRequestError('plugins/fetchLocal'));\n\n  return { isLoading, error };\n};\n\nexport const useFetchStatus = () => {\n  const isAllLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const isLocalLoading = useSelector(selectIsRequestPending('plugins/fetchLocal'));\n  const isRemoteLoading = useSelector(selectIsRequestPending('plugins/fetchRemote'));\n  const isLoading = isAllLoading || isLocalLoading || isRemoteLoading;\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAllLocal = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAllLocal.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAllLocal());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useFetchDetailsLazy = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(fetchDetails(id));\n};\n"],"names":["ctaStyle","infoBoxStyles","title","buttonIcon","buttonLink","buttonTitle","buttonDisabled","onClick","proTip","proTipLink","proTipLinkTitle","proTipTarget","infoBox","infoBoxTitle","footer","ctaElementClassName","ButtonEl","ctaElement","ProBadge","text","className","experimentId","eventVariant","htmlProps","styles","getStyles","theme","w3cStandardEmailValidator","isTrial","expiry","highlightTrial","DashboardsTable","dashboards","onImport","onRemove","buttonText","dashboard","index","DataSourcesListCard","dataSource","hasWriteRights","hasExploreRights","dsLink","DataSourcesListCardSkeleton","skeletonStyles","getSkeletonStyles","getDataSources","getDataSourceById","id","response","lastValueFrom","accessControl","getDataSourceByUid","uid","getDataSourceByIdOrUid","idOrUid","createDataSource","getDataSourcePlugins","updateDataSource","deleteDataSource","buildCategories","plugins","categories","item","categoryIndex","pluginIndex","enterprisePlugins","getEnterprisePhantomPlugins","category","plugin","enterprisePlugin","link","getGrafanaCloudPhantomPlugin","sortPlugins","c","sortingRules","a","b","aSort","bSort","getPhantomPlugin","options","parseHealthCheckError","errorResponse","message","details","parseHealthCheckSuccess","status","initDataSourceSettings","dependencies","loadDataSource","loadDataSourceMeta","dispatch","getState","loadedDataSource","dataSourceMeta","importedPlugin","err","getPluginVersion","dsApi","config","testDataSource","dataSourceName","editRoute","editLink","result","parsedResult","formattedError","loadDataSources","pluginInfo","isBackend","DataSourceWithBackend","meta","addDataSource","newInstance","loadDataSourcePlugins","dsApiVersions","errorInfo","deleteLoadedDataSource","getStore","datasourcesUrl","useInitDataSourceSettings","state","useTestDataSource","useLoadDataSources","isLoading","dataSources","useLoadDataSource","useLoadDataSourcePlugins","useAddDatasource","useUpdateDatasource","useDeleteLoadedDataSource","name","useDataSource","useDataSourceExploreUrl","useDataSourceMeta","pluginType","useDataSourceSettings","useDataSourceRights","readOnly","hasDeleteRights","loadingDSType","buildNavModel","pluginMeta","highlightsEnabled","navModel","page","hasDashboards","isLoadingNav","permissionsExperimentId","dsPermissions","analyticsExperimentId","analytics","cachingExperimentId","caching","getDataSourceNav","main","pageName","node","child","getDataSourceLoadingNav","includes","include","regex","getFilteredDataSourcePlugins","type","getDataSource","dataSourceId","getDataSourceMeta","getDataSourcesSearchQuery","getDataSourcesLayoutMode","getDataSourcesCount","getDataSourcesSort","trackDataSourceCreated","props","trackDataSourceTested","trackExploreClicked","trackCreateDashboardClicked","trackDataSourcesListViewed","trackDsConfigClicked","trackDsConfigUpdated","trackDsSearched","trackAddNewDsClicked","constructDataSourceExploreUrl","exploreState","PluginDisabledBadge","error","tooltip","errorCodeToTooltip","Badge","PluginInstalledBadge","customBadgeStyles","PluginEnterpriseBadge","Stack","PluginSignatureBadge","PluginUpdateAvailableBadge","PluginAngularBadge","PluginDeprecatedBadge","getBadgeColor","Loader","Changelog","sanitizedHTML","PluginDetailsPanel","pluginExtentionsInfo","width","reportAbuseModalOpen","setReportAbuseModalOpen","normalizeURL","url","customLinks","shouldRenderLinks","onClickReportConcern","pluginId","Box","infoItem","Text","CollapsableSection","Tooltip","Icon","TextLink","Button","Modal","PLUGINS_VERSION_PAGE_UPGRADE_INTERACTION_EVENT_NAME","PLUGINS_VERSION_PAGE_CHANGE_INTERACTION_EVENT_NAME","VersionInstallButton","version","latestCompatibleVersion","installedVersion","disabled","onConfirmInstallation","install","isInstalling","setIsInstalling","isModalOpen","setIsModalOpen","isDowngrade","performInstallation","trackProps","onInstallClick","onConfirm","onDismiss","label","hidden","isPreinstalled","Spinner","getIcon","ConfirmModal","VersionList","versions","disableInstallation","isInstalledVersion","canInstall","usePluginConfig","useAsync","AppConfigCtrlWrapper","updateCmd","res","callback","deprecationWarning","prevProps","loader","template","scopeProps","angularCtrl","model","withRightMargin","element","isGrafanaAdmin","isOrgAdmin","isDataSourceEditor","GetStartedWithDataSource","onAddDataSource","disabledButton","ConnectionsTab","ds","ConnectionsList","dataSourcesCount","EmptyState","getDataSourcesList","_","PluginDashboards","resolve","dash","overwrite","datasource","installCmd","loading","PluginUsage","searchQuery","results","found","height","SearchResultsTable","of","EmptyListCTA","Alert","PluginDetailsBody","queryParams","pageId","info","showDetails","pluginConfig","columns","value","permissions","InteractiveTable","permission","configPage","PluginContextProvider","PluginDetailsDisabledError","selectors","renderDescriptionFromError","PluginDetailsSignature","isSignatureValid","isCore","isDisabled","isDisabledDueTooSignatureError","getCurrentPageId","isNarrowScreen","defaultTab","usePluginDetailsTabs","pathname","useDefaultPage","isPublished","currentPageId","navModelChildren","canConfigurePlugins","GetStartedWithApp","enabled","autoEnabled","jsonData","enable","updatePluginSettingsAndReload","disable","data","e","GetStartedWithPlugin","InstallControlsWarning","pluginStatus","isExternallyManaged","hasPermission","isRemotePluginsAvailable","isCompatible","statusToMessage","trackPluginInstalled","trackPluginUninstalled","PLUGIN_UPDATE_INTERACTION_EVENT_NAME","InstallControlsButton","hasInstallWarning","setNeedReload","useQueryParams","location","errorInstalling","isUninstalling","errorUninstalling","uninstall","unsetInstall","fetchDetails","isConfirmModalVisible","setIsConfirmModalVisible","showConfirmModal","hideConfirmModal","uninstallBtnText","trackingProps","onInstall","successMessage","onUninstall","activePageId","onUpdate","disableUninstall","shouldDisableUninstall","uninstallTitle","disableUpdate","shouldDisable","PluginActions","needReload","isInstallControlsDisabled","pluginSubtitleExtensions","registerPluginSubtitleExtension","extension","PluginSubtitle","PluginDetailsHeaderDependencies","grafanaDependency","pluginDependencies","PluginDetailsHeaderSignature","usePluginInfo","useLatestCompatibleInfo","latestVersion","managedVersionText","addInfo","installedVersionValue","latestVersionValue","usePluginPageExtensions","PluginDetailsDeprecatedWarning","dismissed","setDismissed","PluginDetailsPage","navId","notFoundComponent","NotFoundPlugin","notFoundNavModel","useMedia","actions","subtitle","isFetchLoading","isFetchDetailsLoading","Page","conditionalProps","TabContent","AngularDeprecationPluginNotice","selectRoot","selectItems","items","selectAll","debouncedTrackSearch","count","selectPlugins","filters","keyword","filteredPluginIds","filteredPlugins","selectPluginErrors","filterByPluginType","pluginErrors","selectRequest","actionType","requests","selectIsRequestPending","request","selectRequestError","useGetAll","sortBy","useFetchAll","selector","useLocalFetchStatus","sortedPlugins","useGetUpdatable","useFetchStatus","installed","updatablePlugins","useGetSingle","useFetchDetails","useGetSingleLocalWithoutDetails","useFetchAllLocal","useGetErrors","useInstall","isUpdating","useUnsetInstall","useUninstall","useIsRemotePluginsAvailable","isAllLoading","isLocalLoading","isRemoteLoading","useFetchDetailsStatus","useInstallStatus","useUninstallStatus","isNotFetched","shouldFetch","useFetchDetailsLazy"],"sourceRoot":""}