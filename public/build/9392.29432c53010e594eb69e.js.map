{"version":3,"file":"9392.29432c53010e594eb69e.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/components/rules/Filter/RulesFilter.tsx","webpack://grafana/./node_modules/ix/util/bindcallback.mjs","webpack://grafana/./node_modules/ix/util/identity.mjs","webpack://grafana/./node_modules/ix/util/isiterable.mjs","webpack://grafana/./node_modules/ix/util/tointeger.mjs","webpack://grafana/./node_modules/ix/util/tolength.mjs","webpack://grafana/./node_modules/ix/aborterror.mjs","webpack://grafana/./node_modules/ix/asynciterable/asynciterablex.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/withabort.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/take.mjs","webpack://grafana/./node_modules/ix/util/toobserver.mjs","webpack://grafana/./node_modules/ix/util/returniterator.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/tap.mjs","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleActionsButtons.V2.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleActionsSkeleton.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/DataSourceRuleLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/AlertRuleListItemLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/GrafanaRuleLoader.tsx","webpack://grafana/./node_modules/react-use/esm/useIntersection.js","webpack://grafana/./public/app/features/alerting/unified/rule-list/LoadMoreHelper.tsx","webpack://grafana/./node_modules/ix/util/safeRace.mjs","webpack://grafana/./node_modules/ix/asynciterable/merge.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/filter.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/_flatten.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/flatmap.mjs","webpack://grafana/./node_modules/ix/asynciterable/operators/map.mjs","webpack://grafana/./public/app/features/alerting/unified/api/prometheusApi.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/prometheusGroupsGenerator.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/useFilteredRulesIterator.ts","webpack://grafana/./public/app/features/alerting/unified/rule-list/FilterView.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/EvaluationGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/DataSourceSection.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/LazyPagination.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/ListGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/RuleGroupActionsMenu.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/hooks/usePaginatedPrometheusGroups.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/PaginatedDataSourceLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/PaginatedGrafanaLoader.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/components/DataSourceErrorBoundary.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/GroupedView.tsx","webpack://grafana/./public/app/features/alerting/unified/rule-list/RuleList.v2.tsx"],"sourcesContent":["import { Suspense, lazy } from 'react';\n\nimport { config } from '@grafana/runtime';\n\nimport RulesFilterV1 from './RulesFilter.v1';\n\nconst RulesFilterV2 = lazy(() => import('./RulesFilter.v2'));\n\ninterface RulesFilerProps {\n  onClear?: () => void;\n}\n\nconst RulesFilter = (props: RulesFilerProps) => {\n  const newView = config.featureToggles.alertingFilterV2;\n  return <Suspense>{newView ? <RulesFilterV2 {...props} /> : <RulesFilterV1 {...props} />}</Suspense>;\n};\n\nexport default RulesFilter;\n","/**\n * @ignore\n */\nexport function bindCallback(func, thisArg, argCount) {\n    if (typeof thisArg === 'undefined') {\n        return func;\n    }\n    switch (argCount) {\n        case 0:\n            return function () {\n                return func.call(thisArg);\n            };\n        case 1:\n            return function (arg) {\n                return func.call(thisArg, arg);\n            };\n        case 2:\n            return function (value, index) {\n                return func.call(thisArg, value, index);\n            };\n        case 3:\n            return function (value, index, collection) {\n                return func.call(thisArg, value, index, collection);\n            };\n        default:\n            return function () {\n                return func.apply(thisArg, arguments);\n            };\n    }\n}\n\n//# sourceMappingURL=bindcallback.mjs.map\n","import { __awaiter } from \"tslib\";\n/**\n * @ignore\n */\nexport function identity(x) {\n    return x;\n}\n/**\n * @ignore\n */\nexport function identityAsync(x) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return x;\n    });\n}\n\n//# sourceMappingURL=identity.mjs.map\n","/* eslint-disable @typescript-eslint/ban-types */\n/** @ignore */\nconst isNumber = (x) => typeof x === 'number';\n/** @ignore */\nconst isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */\nexport const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport function isArrayLike(x) {\n    return isObject(x) && isNumber(x['length']);\n}\n/** @ignore */\nexport function isIterable(x) {\n    return x != null && isFunction(x[Symbol.iterator]);\n}\n/** @ignore */\nexport function isIterator(x) {\n    return isObject(x) && !isFunction(x[Symbol.iterator]) && isFunction(x['next']);\n}\n/** @ignore */\nexport function isAsyncIterable(x) {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n}\n/** @ignore */\nexport function isObservable(x) {\n    return x != null && Object(x) === x && typeof x['subscribe'] === 'function';\n}\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return (isObject(x) &&\n        isFunction(x['pipe']) &&\n        isFunction(x['_read']) &&\n        isBoolean(x['readable']) &&\n        isObject(x['_readableState']));\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return (isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['_write']) &&\n        isBoolean(x['writable']) &&\n        isObject(x['_writableState']));\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) && isFunction(x['cancel']) && isFunction(x['getReader']);\n};\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) && isFunction(x['abort']) && isFunction(x['getWriter']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n//# sourceMappingURL=isiterable.mjs.map\n","/**\n * @ignore\n */\nexport function toInteger(value) {\n    const number = Number(value);\n    if (isNaN(number)) {\n        return 0;\n    }\n    if (number === 0 || !isFinite(number)) {\n        return number;\n    }\n    return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n}\n\n//# sourceMappingURL=tointeger.mjs.map\n","import { toInteger } from './tointeger.mjs';\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n/**\n * @ignore\n */\nexport function toLength(value) {\n    const len = toInteger(value);\n    return Math.min(Math.max(len, 0), maxSafeInteger);\n}\n\n//# sourceMappingURL=tolength.mjs.map\n","import { isObject } from './util/isiterable.mjs';\n/** @ignore */\nexport class AbortError extends Error {\n    constructor(message = 'The operation has been aborted') {\n        super(message);\n        Object.setPrototypeOf(this, AbortError.prototype);\n        Error.captureStackTrace(this, this.constructor);\n        this.name = 'AbortError';\n    }\n    get [Symbol.toStringTag]() {\n        return 'AbortError';\n    }\n}\nexport function throwIfAborted(signal) {\n    if (signal && signal.aborted) {\n        throw new AbortError();\n    }\n}\nObject.defineProperty(AbortError, Symbol.hasInstance, {\n    writable: true,\n    configurable: true,\n    value(x) {\n        return (isObject(x) && (x.constructor.name === 'AbortError' || x[Symbol.toStringTag] === 'AbortError'));\n    },\n});\n\n//# sourceMappingURL=aborterror.mjs.map\n","import { __asyncGenerator, __asyncValues, __await, __awaiter } from \"tslib\";\nimport { bindCallback } from '../util/bindcallback.mjs';\nimport { identityAsync } from '../util/identity.mjs';\nimport { isReadableNodeStream, isWritableNodeStream, isIterable, isAsyncIterable, isArrayLike, isIterator, isPromise, isObservable, } from '../util/isiterable.mjs';\nimport { toLength } from '../util/tolength.mjs';\nimport { AbortError, throwIfAborted } from '../aborterror.mjs';\n/**\n * This class serves as the base for all operations which support [Symbol.asyncIterator].\n */\nexport class AsyncIterableX {\n    /** @nocollapse */\n    forEach(projection, thisArg, signal) {\n        var _a, e_1, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const source = signal ? new WithAbortAsyncIterable(this, signal) : this;\n            let i = 0;\n            try {\n                for (var _d = true, source_1 = __asyncValues(source), source_1_1; source_1_1 = yield source_1.next(), _a = source_1_1.done, !_a; _d = true) {\n                    _c = source_1_1.value;\n                    _d = false;\n                    const item = _c;\n                    yield projection.call(thisArg, item, i++, signal);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = source_1.return)) yield _b.call(source_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n    pipe(...args) {\n        let i = -1;\n        const n = args.length;\n        let acc = this;\n        while (++i < n) {\n            acc = args[i](AsyncIterableX.as(acc));\n        }\n        return acc;\n    }\n    /** @nocollapse */\n    static from(source, selector = identityAsync, thisArg) {\n        const fn = bindCallback(selector, thisArg, 2);\n        if (isIterable(source) || isAsyncIterable(source)) {\n            return new FromAsyncIterable(source, fn);\n        }\n        if (isPromise(source)) {\n            return new FromPromiseIterable(source, fn);\n        }\n        if (isObservable(source)) {\n            return new FromObservableAsyncIterable(source, fn);\n        }\n        if (isArrayLike(source)) {\n            return new FromArrayIterable(source, fn);\n        }\n        if (isIterator(source)) {\n            return new FromAsyncIterable({ [Symbol.asyncIterator]: () => source }, fn);\n        }\n        throw new TypeError('Input type not supported');\n    }\n    /**\n     * Converts the input into an async-iterable sequence.\n     *\n     * @param {*} source The source to convert to an async-iterable sequence.\n     * @returns {AsyncIterableX<*>} An async-iterable containing the input.\n     */\n    /** @nocollapse */\n    static as(source) {\n        if (source instanceof AsyncIterableX) {\n            return source;\n        }\n        if (typeof source === 'string') {\n            return new FromArrayIterable([source], identityAsync);\n        }\n        if (isIterable(source) || isAsyncIterable(source)) {\n            return new FromAsyncIterable(source, identityAsync);\n        }\n        if (isPromise(source)) {\n            return new FromPromiseIterable(source, identityAsync);\n        }\n        if (isObservable(source)) {\n            return new FromObservableAsyncIterable(source, identityAsync);\n        }\n        if (isArrayLike(source)) {\n            return new FromArrayIterable(source, identityAsync);\n        }\n        return new FromArrayIterable([source], identityAsync);\n    }\n}\nAsyncIterableX.prototype[Symbol.toStringTag] = 'AsyncIterableX';\nObject.defineProperty(AsyncIterableX, Symbol.hasInstance, {\n    writable: true,\n    configurable: true,\n    value(inst) {\n        return !!(inst && inst[Symbol.toStringTag] === 'AsyncIterableX');\n    },\n});\nconst ARRAY_VALUE = 'value';\nconst ARRAY_ERROR = 'error';\n/** @ignore */\n/** @ignore */\nexport class AsyncSink {\n    constructor() {\n        this._ended = false;\n        this._values = [];\n        this._resolvers = [];\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    write(value) {\n        this._push({ type: ARRAY_VALUE, value });\n    }\n    error(error) {\n        this._push({ type: ARRAY_ERROR, error });\n    }\n    _push(item) {\n        if (this._ended) {\n            throw new Error('AsyncSink already ended');\n        }\n        if (this._resolvers.length > 0) {\n            const { resolve, reject } = this._resolvers.shift();\n            if (item.type === ARRAY_ERROR) {\n                reject(item.error);\n            }\n            else {\n                resolve({ done: false, value: item.value });\n            }\n        }\n        else {\n            this._values.push(item);\n        }\n    }\n    next() {\n        if (this._values.length > 0) {\n            const { type, value, error } = this._values.shift();\n            if (type === ARRAY_ERROR) {\n                return Promise.reject(error);\n            }\n            else {\n                return Promise.resolve({ done: false, value });\n            }\n        }\n        if (this._ended) {\n            return Promise.resolve({ done: true });\n        }\n        return new Promise((resolve, reject) => {\n            this._resolvers.push({ resolve, reject });\n        });\n    }\n    end() {\n        while (this._resolvers.length > 0) {\n            this._resolvers.shift().resolve({ done: true });\n        }\n        this._ended = true;\n    }\n}\n/** @ignore */\nexport class FromArrayIterable extends AsyncIterableX {\n    constructor(source, selector) {\n        super();\n        this._source = source;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator]() {\n        return __asyncGenerator(this, arguments, function* _a() {\n            let i = 0;\n            const length = toLength(this._source.length);\n            while (i < length) {\n                yield yield __await(yield __await(this._selector(this._source[i], i++)));\n            }\n        });\n    }\n}\n/** @ignore */\nexport class FromAsyncIterable extends AsyncIterableX {\n    constructor(source, selector) {\n        super();\n        this._source = source;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_2, _c, _d, _e, e_3, _f, _g;\n            let i = 0;\n            if (signal && this._source instanceof AsyncIterableX) {\n                try {\n                    for (var _h = true, _j = __asyncValues(new WithAbortAsyncIterable(this._source, signal)), _k; _k = yield __await(_j.next()), _b = _k.done, !_b; _h = true) {\n                        _d = _k.value;\n                        _h = false;\n                        const item = _d;\n                        yield yield __await(yield __await(this._selector(item, i++)));\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (!_h && !_b && (_c = _j.return)) yield __await(_c.call(_j));\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                throwIfAborted(signal);\n                try {\n                    for (var _l = true, _m = __asyncValues(this._source), _o; _o = yield __await(_m.next()), _e = _o.done, !_e; _l = true) {\n                        _g = _o.value;\n                        _l = false;\n                        const item = _g;\n                        throwIfAborted(signal);\n                        const value = yield __await(this._selector(item, i++));\n                        throwIfAborted(signal);\n                        yield yield __await(value);\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (!_l && !_e && (_f = _m.return)) yield __await(_f.call(_m));\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n            }\n        });\n    }\n}\n/** @ignore */\nexport class FromPromiseIterable extends AsyncIterableX {\n    constructor(source, selector) {\n        super();\n        this._source = source;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator]() {\n        return __asyncGenerator(this, arguments, function* _a() {\n            const item = yield __await(this._source);\n            yield yield __await(yield __await(this._selector(item, 0)));\n        });\n    }\n}\n/** @ignore */\nexport class FromObservableAsyncIterable extends AsyncIterableX {\n    constructor(observable, selector) {\n        super();\n        this._observable = observable;\n        this._selector = selector;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            const sink = new AsyncSink();\n            const subscription = this._observable.subscribe({\n                next(value) {\n                    sink.write(value);\n                },\n                error(err) {\n                    sink.error(err);\n                },\n                complete() {\n                    sink.end();\n                },\n            });\n            function onAbort() {\n                sink.error(new AbortError());\n            }\n            if (signal) {\n                signal.addEventListener('abort', onAbort);\n            }\n            let i = 0;\n            try {\n                for (let next; !(next = yield __await(sink.next())).done;) {\n                    throwIfAborted(signal);\n                    yield yield __await(yield __await(this._selector(next.value, i++)));\n                }\n            }\n            finally {\n                if (signal) {\n                    signal.removeEventListener('abort', onAbort);\n                }\n                subscription.unsubscribe();\n            }\n        });\n    }\n}\nclass WithAbortAsyncIterable {\n    constructor(source, signal) {\n        this._source = source;\n        this._signal = signal;\n    }\n    [Symbol.asyncIterator]() {\n        // @ts-ignore\n        return this._source[Symbol.asyncIterator](this._signal);\n    }\n}\ntry {\n    ((isBrowser) => {\n        if (isBrowser) {\n            return;\n        }\n        AsyncIterableX.prototype['pipe'] = nodePipe;\n        const readableOpts = (x, opts = x._writableState || { objectMode: true }) => opts;\n        function nodePipe(...args) {\n            let i = -1;\n            let end;\n            const n = args.length;\n            let prev = this;\n            let next;\n            while (++i < n) {\n                next = args[i];\n                if (typeof next === 'function') {\n                    prev = next(AsyncIterableX.as(prev));\n                }\n                else if (isWritableNodeStream(next)) {\n                    ({ end = true } = args[i + 1] || {});\n                    // prettier-ignore\n                    return isReadableNodeStream(prev) ? prev.pipe(next, { end }) :\n                        AsyncIterableX.as(prev).toNodeStream(readableOpts(next)).pipe(next, { end });\n                }\n            }\n            return prev;\n        }\n    })(typeof window === 'object' && typeof document === 'object' && document.nodeType === 9);\n}\ncatch (e) {\n    /* */\n}\nexport const as = AsyncIterableX.as;\nexport const from = AsyncIterableX.from;\n\n//# sourceMappingURL=asynciterablex.mjs.map\n","import { AsyncIterableX } from '../asynciterablex.mjs';\n/** @ignore */\nexport class WithAbortAsyncIterable extends AsyncIterableX {\n    constructor(source, signal) {\n        super();\n        this._source = source;\n        this._signal = signal;\n    }\n    withAbort(signal) {\n        return new WithAbortAsyncIterable(this._source, signal);\n    }\n    [Symbol.asyncIterator]() {\n        // @ts-ignore\n        return this._source[Symbol.asyncIterator](this._signal);\n    }\n}\n/**\n * Wraps the existing async-iterable sequence with an abort signal for cancellation.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {AbortSignal} signal The abort signal used for cancellation.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} An async-iterable that can be cancelled by the abort signal.\n */\nexport function withAbort(signal) {\n    return function withAbortOperatorFunction(source) {\n        return new WithAbortAsyncIterable(source, signal);\n    };\n}\n/**\n * Wraps an existing async-iterable with a new async-iterable which support cancellation.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {AsyncIterable<TSource>} source The source sequence to wrap with the abort signal.\n * @param {AbortSignal} [signal] The abort signal used for cancellation.\n * @returns {AsyncIterable<TSource>} The source sequence wrapped with an abort signal for cancellation.\n */\nexport function wrapWithAbort(source, signal) {\n    return signal ? new WithAbortAsyncIterable(source, signal) : source;\n}\n\n//# sourceMappingURL=withabort.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nimport { throwIfAborted } from '../../aborterror.mjs';\n/** @ignore */\nexport class TakeAsyncIterable extends AsyncIterableX {\n    constructor(source, count) {\n        super();\n        this._source = source;\n        this._count = count;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            throwIfAborted(signal);\n            let i = this._count;\n            if (i > 0) {\n                try {\n                    for (var _e = true, _f = __asyncValues(wrapWithAbort(this._source, signal)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                        _d = _g.value;\n                        _e = false;\n                        const item = _d;\n                        yield yield __await(item);\n                        if (--i === 0) {\n                            break;\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    }\n}\n/**\n * Returns a specified number of contiguous elements from the start of an async-iterable sequence.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {number} count The number of elements to return.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} An async-iterable sequence that contains the specified\n * number of elements from the start of the input sequence.\n */\nexport function take(count) {\n    return function takeOperatorFunction(source) {\n        return new TakeAsyncIterable(source, count);\n    };\n}\n\n//# sourceMappingURL=take.mjs.map\n","import { isFunction } from './isiterable.mjs';\nconst noop = (_) => {\n    /**/\n};\n// eslint-disable-next-line complexity\nexport function toObserver(next, error, complete) {\n    const observer = next;\n    if (observer && typeof observer === 'object') {\n        return {\n            next: isFunction(observer.next) ? (x) => observer.next(x) : noop,\n            error: isFunction(observer.error) ? (e) => observer.error(e) : noop,\n            complete: isFunction(observer.complete) ? () => observer.complete() : noop,\n        };\n    }\n    return {\n        next: isFunction(next) ? next : noop,\n        error: isFunction(error) ? error : noop,\n        complete: isFunction(complete) ? complete : noop,\n    };\n}\n\n//# sourceMappingURL=toobserver.mjs.map\n","import { __awaiter } from \"tslib\";\n/**\n * @ignore\n */\nexport function returnIterator(it) {\n    if (typeof (it === null || it === void 0 ? void 0 : it.return) === 'function') {\n        it.return();\n    }\n}\n/**\n * @ignore\n */\nexport function returnAsyncIterator(it) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof (it === null || it === void 0 ? void 0 : it.return) === 'function') {\n            yield it.return();\n        }\n    });\n}\n\n//# sourceMappingURL=returniterator.mjs.map\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { toObserver } from '../../util/toobserver.mjs';\nimport { AbortError, throwIfAborted } from '../../aborterror.mjs';\nimport { returnAsyncIterator } from '../../util/returniterator.mjs';\n/** @ignore */\nexport class TapAsyncIterable extends AsyncIterableX {\n    constructor(source, observer) {\n        super();\n        this._source = source;\n        this._observer = observer;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            const obs = this._observer;\n            const it = this._source[Symbol.asyncIterator](signal);\n            try {\n                for (let res; !(res = yield __await(it.next())).done;) {\n                    if (obs.next) {\n                        yield __await(obs.next(res.value));\n                    }\n                    yield yield __await(res.value);\n                }\n                if (obs.complete) {\n                    yield __await(obs.complete());\n                }\n            }\n            catch (e) {\n                if (!(e instanceof AbortError) && obs.error) {\n                    yield __await(obs.error(e));\n                }\n                throw e;\n            }\n            finally {\n                yield __await(returnAsyncIterator(it));\n            }\n        });\n    }\n}\n/**\n * Invokes an action for each element in the async-iterable sequence, and propagates all observer\n * messages through the result sequence. This method can be used for debugging, logging, etc. by\n * intercepting the message stream to run arbitrary actions for messages on the pipeline.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {(PartialAsyncObserver<TSource> | ((value: TSource) => any) | null)} [observerOrNext] Observer whose methods to invoke as\n * part of the source sequence's observation or a function to invoke for each element in the async-iterable sequence.\n * @param {(((err: any) => any) | null)} [error] Function to invoke upon exceptional termination of the async-iterable sequence.\n * @param {((() => any) | null)} [complete] Function to invoke upon graceful termination of the async-iterable sequence.\n * @returns {MonoTypeOperatorAsyncFunction<TSource>} The source sequence with the side-effecting behavior applied.\n */\nexport function tap(observerOrNext, error, complete) {\n    return function tapOperatorFunction(source) {\n        return new TapAsyncIterable(source, toObserver(observerOrNext, error, complete));\n    };\n}\n\n//# sourceMappingURL=tap.mjs.map\n","import { useState } from 'react';\n\nimport { LinkButton, Stack } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\nimport AlertRuleMenu from 'app/features/alerting/unified/components/rule-viewer/AlertRuleMenu';\nimport { useDeleteModal } from 'app/features/alerting/unified/components/rule-viewer/DeleteModal';\nimport { RedirectToCloneRule } from 'app/features/alerting/unified/components/rules/CloneRule';\nimport SilenceGrafanaRuleDrawer from 'app/features/alerting/unified/components/silences/SilenceGrafanaRuleDrawer';\nimport { Rule, RuleGroupIdentifierV2, RuleIdentifier } from 'app/types/unified-alerting';\nimport { RulerRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { AlertRuleAction, useRulerRuleAbility } from '../../hooks/useAbilities';\nimport * as ruleId from '../../utils/rule-id';\nimport { isGrafanaAlertingRule, isGrafanaRulerRule } from '../../utils/rules';\nimport { createRelativeUrl } from '../../utils/url';\n\ninterface Props {\n  rule: RulerRuleDTO;\n  promRule: Rule;\n  groupIdentifier: RuleGroupIdentifierV2;\n  /**\n   * Should we show the buttons in a \"compact\" state?\n   * i.e. without text and using smaller button sizes\n   */\n  compact?: boolean;\n}\n\n// For now this is just a copy of RuleActionsButtons.tsx but with the View button removed.\n// This is only done to keep the new list behind a feature flag and limit changes in the existing components\nexport function RuleActionsButtons({ compact, rule, promRule, groupIdentifier }: Props) {\n  const redirectToListView = compact ? false : true;\n  const [deleteModal, showDeleteModal] = useDeleteModal(redirectToListView);\n\n  const [showSilenceDrawer, setShowSilenceDrawer] = useState<boolean>(false);\n\n  const [redirectToClone, setRedirectToClone] = useState<\n    { identifier: RuleIdentifier; isProvisioned: boolean } | undefined\n  >(undefined);\n\n  const isProvisioned = isGrafanaRulerRule(rule) && Boolean(rule.grafana_alert.provenance);\n\n  const [editRuleSupported, editRuleAllowed] = useRulerRuleAbility(rule, groupIdentifier, AlertRuleAction.Update);\n\n  const canEditRule = editRuleSupported && editRuleAllowed;\n\n  const buttons: JSX.Element[] = [];\n  const buttonSize = compact ? 'sm' : 'md';\n\n  const identifier = ruleId.fromRulerRuleAndGroupIdentifierV2(groupIdentifier, rule);\n\n  if (canEditRule) {\n    const editURL = createRelativeUrl(`/alerting/${encodeURIComponent(ruleId.stringifyIdentifier(identifier))}/edit`);\n\n    buttons.push(\n      <LinkButton title=\"Edit\" size={buttonSize} key=\"edit\" variant=\"secondary\" icon=\"pen\" href={editURL}>\n        <Trans i18nKey=\"common.edit\">Edit</Trans>\n      </LinkButton>\n    );\n  }\n\n  return (\n    <Stack gap={1} alignItems=\"center\" wrap=\"nowrap\">\n      {buttons}\n      <AlertRuleMenu\n        buttonSize={buttonSize}\n        rulerRule={rule}\n        promRule={promRule}\n        groupIdentifier={groupIdentifier}\n        identifier={identifier}\n        handleDelete={() => showDeleteModal(identifier, groupIdentifier)}\n        handleSilence={() => setShowSilenceDrawer(true)}\n        handleDuplicateRule={() => setRedirectToClone({ identifier, isProvisioned })}\n      />\n      {deleteModal}\n      {isGrafanaAlertingRule(rule) && showSilenceDrawer && (\n        <SilenceGrafanaRuleDrawer rulerRule={rule} onClose={() => setShowSilenceDrawer(false)} />\n      )}\n      {redirectToClone?.identifier && (\n        <RedirectToCloneRule\n          identifier={redirectToClone.identifier}\n          isProvisioned={redirectToClone.isProvisioned}\n          onDismiss={() => setRedirectToClone(undefined)}\n        />\n      )}\n    </Stack>\n  );\n}\n","import Skeleton from 'react-loading-skeleton';\n\nexport function RuleActionsSkeleton() {\n  return <Skeleton width={50} height={16} />;\n}\n","import { memo, useMemo } from 'react';\n\nimport { DataSourceRuleGroupIdentifier, Rule, RuleIdentifier } from 'app/types/unified-alerting';\n\nimport { alertRuleApi } from '../api/alertRuleApi';\nimport { featureDiscoveryApi } from '../api/featureDiscoveryApi';\nimport { equal, fromRule, fromRulerRule, stringifyIdentifier } from '../utils/rule-id';\nimport { getRulePluginOrigin, isAlertingRule, isRecordingRule } from '../utils/rules';\nimport { createRelativeUrl } from '../utils/url';\n\nimport { AlertRuleListItem, RecordingRuleListItem, UnknownRuleListItem } from './components/AlertRuleListItem';\nimport { RuleActionsButtons } from './components/RuleActionsButtons.V2';\nimport { RuleActionsSkeleton } from './components/RuleActionsSkeleton';\n\nconst { useDiscoverDsFeaturesQuery } = featureDiscoveryApi;\nconst { useGetRuleGroupForNamespaceQuery } = alertRuleApi;\n\ninterface DataSourceRuleLoaderProps {\n  rule: Rule;\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n}\n\nexport const DataSourceRuleLoader = memo(function DataSourceRuleLoader({\n  rule,\n  groupIdentifier,\n}: DataSourceRuleLoaderProps) {\n  const { rulesSource, namespace, groupName } = groupIdentifier;\n\n  const ruleIdentifier = fromRule(rulesSource.name, namespace.name, groupName, rule);\n  const href = createViewLinkFromIdentifier(ruleIdentifier);\n  const originMeta = getRulePluginOrigin(rule);\n\n  // @TODO work with context API to propagate rulerConfig and such\n  const { data: dataSourceInfo } = useDiscoverDsFeaturesQuery({ uid: rulesSource.uid });\n\n  // @TODO refactor this to use a separate hook (useRuleWithLocation() and useCombinedRule() seems to introduce infinite loading / recursion)\n  const {\n    isLoading,\n    data: rulerRuleGroup,\n    // error,\n  } = useGetRuleGroupForNamespaceQuery(\n    {\n      namespace: namespace.name,\n      group: groupName,\n      rulerConfig: dataSourceInfo?.rulerConfig!,\n    },\n    { skip: !dataSourceInfo?.rulerConfig }\n  );\n\n  const rulerRule = useMemo(() => {\n    if (!rulerRuleGroup) {\n      return;\n    }\n\n    return rulerRuleGroup.rules.find((rule) =>\n      equal(fromRulerRule(rulesSource.name, namespace.name, groupName, rule), ruleIdentifier)\n    );\n  }, [rulesSource, namespace, groupName, ruleIdentifier, rulerRuleGroup]);\n\n  // 1. get the rule from the ruler API with \"ruleWithLocation\"\n  // 1.1 skip this if this datasource does not have a ruler\n  //\n  // 2.1 render action buttons\n  // 2.2 render provisioning badge and contact point metadata, etc.\n  const actions = useMemo(() => {\n    if (isLoading) {\n      return <RuleActionsSkeleton />;\n    }\n\n    if (rulerRule) {\n      return <RuleActionsButtons rule={rulerRule} promRule={rule} groupIdentifier={groupIdentifier} compact />;\n    }\n\n    return null;\n  }, [groupIdentifier, isLoading, rule, rulerRule]);\n\n  if (isAlertingRule(rule)) {\n    return (\n      <AlertRuleListItem\n        name={rule.name}\n        rulesSource={rulesSource}\n        application={dataSourceInfo?.application}\n        group={groupName}\n        namespace={namespace.name}\n        href={href}\n        summary={rule.annotations?.summary}\n        state={rule.state}\n        health={rule.health}\n        error={rule.lastError}\n        labels={rule.labels}\n        isProvisioned={undefined}\n        instancesCount={rule.alerts?.length}\n        actions={actions}\n        origin={originMeta}\n      />\n    );\n  }\n\n  if (isRecordingRule(rule)) {\n    return (\n      <RecordingRuleListItem\n        name={rule.name}\n        rulesSource={rulesSource}\n        application={dataSourceInfo?.application}\n        group={groupName}\n        namespace={namespace.name}\n        href={href}\n        health={rule.health}\n        error={rule.lastError}\n        labels={rule.labels}\n        isProvisioned={undefined}\n        actions={actions}\n        origin={originMeta}\n      />\n    );\n  }\n\n  return <UnknownRuleListItem rule={rule} groupIdentifier={groupIdentifier} />;\n});\n\nfunction createViewLinkFromIdentifier(identifier: RuleIdentifier, returnTo?: string) {\n  const paramId = encodeURIComponent(stringifyIdentifier(identifier));\n  const paramSource = encodeURIComponent(identifier.ruleSourceName);\n\n  return createRelativeUrl(`/alerting/${paramSource}/${paramId}/view`, returnTo ? { returnTo } : {});\n}\n","import Skeleton from 'react-loading-skeleton';\n\nimport { t } from 'app/core/internationalization';\nimport { PromRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { ListItem } from './ListItem';\nimport { RuleActionsSkeleton } from './RuleActionsSkeleton';\nimport { RuleListIcon } from './RuleListIcon';\n\nexport function AlertRuleListItemLoader() {\n  return (\n    <ListItem\n      title={<Skeleton width={64} />}\n      icon={<RuleListIcon isPaused={false} />}\n      description={<Skeleton width={256} />}\n      actions={<RuleActionsSkeleton />}\n      data-testid=\"alert-rule-list-item-loader\"\n    />\n  );\n}\n\nexport function RulerRuleLoadingError({ rule }: { rule: PromRuleDTO }) {\n  return (\n    <ListItem\n      title={rule.name}\n      description={t('alerting.rule-list.rulerrule-loading-error', 'Failed to load the rule')}\n      data-testid=\"ruler-rule-loading-error\"\n    />\n  );\n}\n","import { GrafanaRuleGroupIdentifier } from 'app/types/unified-alerting';\nimport { GrafanaPromRuleDTO, PromRuleType } from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../api/alertRuleApi';\nimport { GrafanaRulesSource } from '../utils/datasource';\nimport { createRelativeUrl } from '../utils/url';\n\nimport { AlertRuleListItem, RecordingRuleListItem, UnknownRuleListItem } from './components/AlertRuleListItem';\nimport { AlertRuleListItemLoader, RulerRuleLoadingError } from './components/AlertRuleListItemLoader';\nimport { RuleActionsButtons } from './components/RuleActionsButtons.V2';\n\nconst { useGetGrafanaRulerGroupQuery } = alertRuleApi;\n\ninterface GrafanaRuleLoaderProps {\n  rule: GrafanaPromRuleDTO;\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n  namespaceName: string;\n}\n\nexport function GrafanaRuleLoader({ rule, groupIdentifier, namespaceName }: GrafanaRuleLoaderProps) {\n  const { data: rulerRuleGroup, isError } = useGetGrafanaRulerGroupQuery(groupIdentifier);\n\n  const rulerRule = rulerRuleGroup?.rules.find((rulerRule) => rulerRule.grafana_alert.uid === rule.uid);\n\n  if (!rulerRule) {\n    if (isError) {\n      return <RulerRuleLoadingError rule={rule} />;\n    }\n\n    return <AlertRuleListItemLoader />;\n  }\n\n  const {\n    grafana_alert: { title, provenance, is_paused },\n    annotations = {},\n    labels = {},\n  } = rulerRule;\n\n  const commonProps = {\n    name: title,\n    rulesSource: GrafanaRulesSource,\n    group: groupIdentifier.groupName,\n    namespace: namespaceName,\n    href: createRelativeUrl(`/alerting/grafana/${rule.uid}/view`),\n    health: rule.health,\n    error: rule.lastError,\n    labels: labels,\n    isProvisioned: Boolean(provenance),\n    isPaused: is_paused,\n    application: 'grafana' as const,\n    actions: <RuleActionsButtons rule={rulerRule} promRule={rule} groupIdentifier={groupIdentifier} compact />,\n  };\n\n  if (rule.type === PromRuleType.Alerting) {\n    return (\n      <AlertRuleListItem\n        {...commonProps}\n        summary={annotations.summary}\n        state={rule.state}\n        instancesCount={rule.alerts?.length}\n      />\n    );\n  }\n\n  if (rule.type === PromRuleType.Recording) {\n    return <RecordingRuleListItem {...commonProps} />;\n  }\n\n  return <UnknownRuleListItem rule={rule} groupIdentifier={groupIdentifier} />;\n}\n","import { useEffect, useState } from 'react';\nvar useIntersection = function (ref, options) {\n    var _a = useState(null), intersectionObserverEntry = _a[0], setIntersectionObserverEntry = _a[1];\n    useEffect(function () {\n        if (ref.current && typeof IntersectionObserver === 'function') {\n            var handler = function (entries) {\n                setIntersectionObserverEntry(entries[0]);\n            };\n            var observer_1 = new IntersectionObserver(handler, options);\n            observer_1.observe(ref.current);\n            return function () {\n                setIntersectionObserverEntry(null);\n                observer_1.disconnect();\n            };\n        }\n        return function () { };\n    }, [ref.current, options.threshold, options.root, options.rootMargin]);\n    return intersectionObserverEntry;\n};\nexport default useIntersection;\n","import { useEffect, useRef } from 'react';\nimport { useIntersection } from 'react-use';\n\ntype Props = {\n  handleLoad: () => void;\n};\n\nfunction LoadMoreHelper({ handleLoad }: Props) {\n  const intersectionRef = useRef<HTMLDivElement>(null);\n  const intersection = useIntersection(intersectionRef, {\n    root: null,\n    threshold: 1,\n  });\n\n  useEffect(() => {\n    const completelyInView = intersection && intersection.intersectionRatio > 0;\n    if (completelyInView) {\n      handleLoad();\n    }\n  }, [intersection, handleLoad]);\n\n  return <div ref={intersectionRef} data-testid=\"load-more-helper\" />;\n}\n\nexport default LoadMoreHelper;\n","/*\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org/>\n*/\n// see: https://github.com/nodejs/node/issues/17469#issuecomment-685216777\n// see: https://github.com/ReactiveX/IxJS/pull/323\nfunction isPrimitive(value) {\n    return value === null || (typeof value !== 'object' && typeof value !== 'function');\n}\n// Keys are the values passed to race, values are a record of data containing a\n// set of deferreds and whether the value has settled.\nconst wm = new WeakMap();\nexport function safeRace(contenders) {\n    let deferred;\n    const result = new Promise((resolve, reject) => {\n        deferred = { resolve, reject };\n        for (const contender of contenders) {\n            if (isPrimitive(contender)) {\n                // If the contender is a primitive, attempting to use it as a key in the\n                // weakmap would throw an error. Luckily, it is safe to call\n                // `Promise.resolve(contender).then` on a primitive value multiple times\n                // because the promise fulfills immediately.\n                Promise.resolve(contender).then(resolve, reject);\n                continue;\n            }\n            let record = wm.get(contender);\n            if (record === undefined) {\n                record = { deferreds: new Set([deferred]), settled: false };\n                wm.set(contender, record);\n                // This call to `then` happens once for the lifetime of the value.\n                Promise.resolve(contender).then((value) => {\n                    // eslint-disable-next-line no-shadow\n                    for (const { resolve } of record.deferreds) {\n                        resolve(value);\n                    }\n                    record.deferreds.clear();\n                    record.settled = true;\n                }, (err) => {\n                    // eslint-disable-next-line no-shadow\n                    for (const { reject } of record.deferreds) {\n                        reject(err);\n                    }\n                    record.deferreds.clear();\n                    record.settled = true;\n                });\n            }\n            else if (record.settled) {\n                // If the value has settled, it is safe to call\n                // `Promise.resolve(contender).then` on it.\n                Promise.resolve(contender).then(resolve, reject);\n            }\n            else {\n                record.deferreds.add(deferred);\n            }\n        }\n    });\n    // The finally callback executes when any value settles, preventing any of\n    // the unresolved values from retaining a reference to the resolved value.\n    return result.finally(() => {\n        for (const contender of contenders) {\n            if (!isPrimitive(contender)) {\n                const record = wm.get(contender);\n                record.deferreds.delete(deferred);\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=safeRace.mjs.map\n","import { __asyncGenerator, __await } from \"tslib\";\nimport { AsyncIterableX } from './asynciterablex.mjs';\nimport { wrapWithAbort } from './operators/withabort.mjs';\nimport { throwIfAborted } from '../aborterror.mjs';\nimport { safeRace } from '../util/safeRace.mjs';\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst NEVER_PROMISE = new Promise(() => { });\nfunction wrapPromiseWithIndex(promise, index) {\n    return promise\n        .then(({ value, done }) => ({ value, done, index }))\n        .catch((error) => ({ error, index }));\n}\n/** @ignore */\nexport class MergeAsyncIterable extends AsyncIterableX {\n    constructor(source) {\n        super();\n        this._source = source;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(signal);\n            const length = this._source.length;\n            const iterators = new Array(length);\n            const nexts = new Array(length);\n            let active = length;\n            for (let i = 0; i < length; i++) {\n                const iterator = wrapWithAbort(this._source[i], signal)[Symbol.asyncIterator]();\n                iterators[i] = iterator;\n                nexts[i] = wrapPromiseWithIndex(iterator.next(), i);\n            }\n            while (active > 0) {\n                const next = yield __await(safeRace(nexts));\n                if (next.hasOwnProperty('error')) {\n                    throw next.error;\n                }\n                else if (next.done) {\n                    nexts[next.index] = NEVER_PROMISE;\n                    active--;\n                }\n                else {\n                    const iterator$ = iterators[next.index];\n                    nexts[next.index] = wrapPromiseWithIndex(iterator$.next(), next.index);\n                    yield yield __await(next.value);\n                }\n            }\n        });\n    }\n}\nexport function merge(source, ...args) {\n    return new MergeAsyncIterable([source, ...args]);\n}\n\n//# sourceMappingURL=merge.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nimport { throwIfAborted } from '../../aborterror.mjs';\n/** @ignore */\nexport class FilterAsyncIterable extends AsyncIterableX {\n    constructor(source, predicate, thisArg) {\n        super();\n        this._source = source;\n        this._predicate = predicate;\n        this._thisArg = thisArg;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            throwIfAborted(signal);\n            let i = 0;\n            try {\n                for (var _e = true, _f = __asyncValues(wrapWithAbort(this._source, signal)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                    _d = _g.value;\n                    _e = false;\n                    const item = _d;\n                    if (yield __await(this._predicate.call(this._thisArg, item, i++))) {\n                        yield yield __await(item);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n}\n/**\n * Filters the elements of an async-iterable sequence based on a predicate.\n *\n * @template TSource The type of the elements in the source sequence.\n * @param {((value: TSource, index: number, signal?: AbortSignal) => boolean | Promise<boolean>)} predicate A function to test each source element\n * for a condition.\n * @param {*} [thisArg] Optional this for binding.\n * @returns {OperatorAsyncFunction<TSource, TSource>} An operator which returns an async-iterable\n * sequence that contains elements from the input sequence that satisfy the condition.\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return new FilterAsyncIterable(source, predicate, thisArg);\n    };\n}\n\n//# sourceMappingURL=filter.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { wrapWithAbort } from '../operators/withabort.mjs';\nimport { AbortError, throwIfAborted } from '../../aborterror.mjs';\nimport { safeRace } from '../../util/safeRace.mjs';\nimport { isPromise } from '../../util/isiterable.mjs';\nimport { returnAsyncIterator } from '../../util/returniterator.mjs';\nconst NEVER_PROMISE = new Promise(() => { });\nfunction ignoreInnerAbortErrors(signal) {\n    return function ignoreInnerAbortError(e) {\n        if (signal.aborted && e instanceof AbortError) {\n            return NEVER_PROMISE;\n        }\n        throw e;\n    };\n}\nfunction wrapIterator(source, index, type, signal) {\n    return __asyncGenerator(this, arguments, function* wrapIterator_1() {\n        var _a, e_1, _b, _c;\n        throwIfAborted(signal);\n        try {\n            for (var _d = true, _e = __asyncValues(wrapWithAbort(source, signal)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a; _d = true) {\n                _c = _f.value;\n                _d = false;\n                const value = _c;\n                throwIfAborted(signal);\n                yield yield __await({ type, index, value });\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return yield __await({ type, index, value: undefined });\n    });\n}\n/** @ignore */\nexport class FlattenConcurrentAsyncIterable extends AsyncIterableX {\n    constructor(_source, _selector, _concurrent, _switchMode, _thisArg) {\n        super();\n        this._source = _source;\n        this._selector = _selector;\n        this._concurrent = _concurrent;\n        this._switchMode = _switchMode;\n        this._thisArg = _thisArg;\n        this._concurrent = this._switchMode ? 1 : Math.max(_concurrent, 1);\n    }\n    [Symbol.asyncIterator](outerSignal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            throwIfAborted(outerSignal);\n            let active = 0;\n            let outerIndex = 0;\n            let outerComplete = false;\n            const thisArg = this._thisArg;\n            const selector = this._selector;\n            const switchMode = this._switchMode;\n            const concurrent = this._concurrent;\n            const outerValues = new Array(0);\n            const innerIndices = new Array(0);\n            const controllers = new Array(isFinite(concurrent) ? concurrent : 0);\n            const inners = new Array(isFinite(concurrent) ? concurrent : 0);\n            const outer = wrapIterator(this._source, 0, 0 /* Type.OUTER */, outerSignal);\n            const results = [outer.next()];\n            try {\n                do {\n                    const { done = false, value: { type, value, index }, } = yield __await(safeRace(results));\n                    if (!done) {\n                        switch (type) {\n                            case 0 /* Type.OUTER */: {\n                                if (switchMode) {\n                                    active = 0;\n                                }\n                                if (active < concurrent) {\n                                    pullNextOuter(value);\n                                }\n                                else {\n                                    outerValues.push(value);\n                                }\n                                results[0] = outer.next();\n                                break;\n                            }\n                            case 1 /* Type.INNER */: {\n                                yield yield __await(value);\n                                const { [index - 1]: inner } = inners;\n                                const { [index - 1]: { signal }, } = controllers;\n                                results[index] = inner.next().catch(ignoreInnerAbortErrors(signal));\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        // ignore this result slot\n                        results[index] = NEVER_PROMISE;\n                        switch (type) {\n                            case 0 /* Type.OUTER */: {\n                                outerComplete = true;\n                                break;\n                            }\n                            case 1 /* Type.INNER */: {\n                                --active;\n                                // return the current slot to the pool\n                                innerIndices.push(index);\n                                // synchronously drain the `outerValues` buffer\n                                while (active < concurrent && outerValues.length) {\n                                    // Don't use `await` so we avoid blocking while the number of active inner sequences is less than `concurrent`.\n                                    pullNextOuter(outerValues.shift());\n                                }\n                                break;\n                            }\n                        }\n                    }\n                } while (!outerComplete || active + outerValues.length > 0);\n            }\n            finally {\n                controllers.forEach((controller) => controller === null || controller === void 0 ? void 0 : controller.abort());\n                yield __await(Promise.all([outer, ...inners].map(returnAsyncIterator)));\n            }\n            function pullNextOuter(outerValue) {\n                ++active;\n                const index = innerIndices.pop() || active;\n                // abort the current inner iterator first\n                if (switchMode && controllers[index - 1]) {\n                    controllers[index - 1].abort();\n                }\n                controllers[index - 1] = new AbortController();\n                const innerSignal = controllers[index - 1].signal;\n                // Get the next inner sequence.\n                // `selector` is a sync or async function that returns AsyncIterableInput.\n                const inner = selector.call(thisArg, outerValue, outerIndex++, innerSignal);\n                results[index] = wrapAndPullInner(index, innerSignal, inner).catch(ignoreInnerAbortErrors(innerSignal));\n            }\n            function wrapAndPullInner(index, signal, inner) {\n                if (isPromise(inner)) {\n                    return inner.then((inner) => wrapAndPullInner(index, signal, inner));\n                }\n                return (inners[index - 1] = wrapIterator(AsyncIterableX.as(inner), index, 1 /* Type.INNER */, signal)).next();\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=_flatten.mjs.map\n","import { FlattenConcurrentAsyncIterable } from './_flatten.mjs';\n/**\n * Projects each element of an async-iterable sequence to an async-iterable sequence and merges\n * the resulting async-iterable sequences into one async-iterable sequence.\n *\n * @template TSource The type of the elements in the source sequence.\n * @template TResult The type of the elements in the projected inner sequences and the elements in the merged result sequence.\n * @param {((\n *     value: TSource,\n *     index: number,\n *     signal?: AbortSignal\n *   ) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>)} selector A transform function to apply to each element.\n * @param {*} [thisArg] Option this for binding to the selector.\n * @returns {OperatorAsyncFunction<TSource, TResult>} An operator that creates an async-iterable sequence whose\n * elements are the result of invoking the one-to-many transform function on each element of the input sequence.\n */\nexport function flatMap(selector, concurrent = Infinity, thisArg) {\n    return function flatMapOperatorFunction(source) {\n        return new FlattenConcurrentAsyncIterable(source, selector, concurrent, false, thisArg);\n    };\n}\n\n//# sourceMappingURL=flatmap.mjs.map\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { AsyncIterableX } from '../asynciterablex.mjs';\nimport { wrapWithAbort } from './withabort.mjs';\nimport { throwIfAborted } from '../../aborterror.mjs';\n/** @ignore */\nexport class MapAsyncIterable extends AsyncIterableX {\n    constructor(source, selector, thisArg) {\n        super();\n        this._source = source;\n        this._selector = selector;\n        this._thisArg = thisArg;\n    }\n    [Symbol.asyncIterator](signal) {\n        return __asyncGenerator(this, arguments, function* _a() {\n            var _b, e_1, _c, _d;\n            throwIfAborted(signal);\n            let i = 0;\n            try {\n                for (var _e = true, _f = __asyncValues(wrapWithAbort(this._source, signal)), _g; _g = yield __await(_f.next()), _b = _g.done, !_b; _e = true) {\n                    _d = _g.value;\n                    _e = false;\n                    const item = _d;\n                    const result = yield __await(this._selector.call(this._thisArg, item, i++, signal));\n                    yield yield __await(result);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_e && !_b && (_c = _f.return)) yield __await(_c.call(_f));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n    }\n}\n/**\n * Projects each element of an async-enumerable sequence into a new form.\n *\n * @template TSource The type of the elements in the source sequence.\n * @template TResult The type of the elements in the result sequence, obtained by running the selector\n * function for each element in the source sequence.\n * @param {((value: TSource, index: number, signal?: AbortSignal) => Promise<TResult> | TResult)} selector A transform function\n * to apply to each source element.\n * @param {*} [thisArg] Optional this for binding to the selector.\n * @returns {OperatorAsyncFunction<TSource, TResult>} An async-iterable sequence whose elements are the result of invoking the transform\n * function on each element of source.\n */\nexport function map(selector, thisArg) {\n    return function mapOperatorFunction(source) {\n        return new MapAsyncIterable(source, selector, thisArg);\n    };\n}\n\n//# sourceMappingURL=map.mjs.map\n","import { GrafanaPromRuleGroupDTO, PromRuleDTO, PromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\n\nimport { alertingApi } from './alertingApi';\nimport { normalizeRuleGroup } from './prometheus';\n\nexport interface PromRulesResponse<TRuleGroup> {\n  status: string;\n  data: {\n    groups: TRuleGroup[];\n    groupNextToken?: string;\n  };\n  errorType?: string;\n  error?: string;\n}\n\ninterface PromRulesOptions {\n  ruleSource: { uid: string };\n  namespace?: string;\n  groupName?: string;\n  ruleName?: string;\n  groupLimit?: number;\n  excludeAlerts?: boolean;\n  groupNextToken?: string;\n}\n\ntype GrafanaPromRulesOptions = Omit<PromRulesOptions, 'ruleSource'> & {\n  dashboardUid?: string;\n  panelId?: number;\n};\n\nexport const prometheusApi = alertingApi.injectEndpoints({\n  endpoints: (build) => ({\n    getGroups: build.query<PromRulesResponse<PromRuleGroupDTO<PromRuleDTO>>, PromRulesOptions>({\n      query: ({ ruleSource, namespace, groupName, ruleName, groupLimit, excludeAlerts, groupNextToken }) => {\n        if (ruleSource.uid === GRAFANA_RULES_SOURCE_NAME) {\n          throw new Error('Please use getGrafanaGroups endpoint for grafana rules');\n        }\n        return {\n          url: `api/prometheus/${ruleSource.uid}/api/v1/rules`,\n          params: {\n            'file[]': namespace,\n            'group[]': groupName,\n            'rule[]': ruleName,\n            exclude_alerts: excludeAlerts?.toString(),\n            group_limit: groupLimit?.toFixed(0),\n            group_next_token: groupNextToken,\n          },\n        };\n      },\n      transformResponse: (response: PromRulesResponse<PromRuleGroupDTO<PromRuleDTO>>) => {\n        return { ...response, data: { ...response.data, groups: response.data.groups.map(normalizeRuleGroup) } };\n      },\n    }),\n    getGrafanaGroups: build.query<PromRulesResponse<GrafanaPromRuleGroupDTO>, GrafanaPromRulesOptions>({\n      query: ({ namespace, groupName, ruleName, groupLimit, excludeAlerts, groupNextToken }) => ({\n        url: `api/prometheus/grafana/api/v1/rules`,\n        params: {\n          'file[]': namespace,\n          'group[]': groupName,\n          'rule[]': ruleName,\n          exclude_alerts: excludeAlerts?.toString(),\n          group_limit: groupLimit?.toFixed(0),\n          group_next_token: groupNextToken,\n        },\n      }),\n    }),\n  }),\n});\n","import { BaseQueryFn } from '@reduxjs/toolkit/query';\nimport { TypedLazyQueryTrigger } from '@reduxjs/toolkit/query/react';\nimport { useCallback } from 'react';\n\nimport { DataSourceRulesSourceIdentifier } from 'app/types/unified-alerting';\n\nimport { BaseQueryFnArgs } from '../../api/alertingApi';\nimport { PromRulesResponse, prometheusApi } from '../../api/prometheusApi';\n\nconst { useLazyGetGroupsQuery, useLazyGetGrafanaGroupsQuery } = prometheusApi;\n\ninterface FetchGroupsOptions {\n  groupLimit?: number;\n  groupNextToken?: string;\n}\n\nexport function usePrometheusGroupsGenerator() {\n  const [getGroups] = useLazyGetGroupsQuery();\n\n  return useCallback(\n    async function* (ruleSource: DataSourceRulesSourceIdentifier, groupLimit: number) {\n      const getRuleSourceGroups = (options: FetchGroupsOptions) =>\n        getGroups({ ruleSource: { uid: ruleSource.uid }, ...options });\n\n      yield* genericGroupsGenerator(getRuleSourceGroups, groupLimit);\n    },\n    [getGroups]\n  );\n}\n\nexport function useGrafanaGroupsGenerator() {\n  const [getGrafanaGroups] = useLazyGetGrafanaGroupsQuery();\n\n  return useCallback(\n    async function* (groupLimit: number) {\n      yield* genericGroupsGenerator(getGrafanaGroups, groupLimit);\n    },\n    [getGrafanaGroups]\n  );\n}\n\n// Generator lazily provides groups one by one only when needed\n// This might look a bit complex but it allows us to have one API for paginated and non-paginated Prometheus data sources\n// For unpaginated data sources we fetch everything in one go\n// For paginated we fetch the next page when needed\nasync function* genericGroupsGenerator<TGroup>(\n  fetchGroups: TypedLazyQueryTrigger<PromRulesResponse<TGroup>, FetchGroupsOptions, BaseQueryFn<BaseQueryFnArgs>>,\n  groupLimit: number\n) {\n  const response = await fetchGroups({ groupLimit });\n\n  if (!response.isSuccess) {\n    return;\n  }\n\n  if (response.data?.data) {\n    yield* response.data.data.groups;\n  }\n\n  let lastToken: string | undefined = undefined;\n  if (response.data?.data?.groupNextToken) {\n    lastToken = response.data.data.groupNextToken;\n  }\n\n  while (lastToken) {\n    const response = await fetchGroups({\n      groupNextToken: lastToken,\n      groupLimit: groupLimit,\n    });\n\n    if (!response.isSuccess) {\n      return;\n    }\n\n    if (response.data?.data) {\n      yield* response.data.data.groups;\n    }\n\n    lastToken = response.data?.data?.groupNextToken;\n  }\n}\n","import { AsyncIterableX, from } from 'ix/asynciterable/index';\nimport { merge } from 'ix/asynciterable/merge';\nimport { filter, flatMap, map } from 'ix/asynciterable/operators';\nimport { compact } from 'lodash';\n\nimport { Matcher } from 'app/plugins/datasource/alertmanager/types';\nimport {\n  DataSourceRuleGroupIdentifier,\n  DataSourceRulesSourceIdentifier,\n  GrafanaRuleGroupIdentifier,\n} from 'app/types/unified-alerting';\nimport {\n  GrafanaPromRuleDTO,\n  GrafanaPromRuleGroupDTO,\n  PromRuleDTO,\n  PromRuleGroupDTO,\n} from 'app/types/unified-alerting-dto';\n\nimport { RulesFilter } from '../../search/rulesSearchParser';\nimport { labelsMatchMatchers } from '../../utils/alertmanager';\nimport { Annotation } from '../../utils/constants';\nimport { getDatasourceAPIUid, getExternalRulesSources } from '../../utils/datasource';\nimport { parseMatcher } from '../../utils/matchers';\nimport { isAlertingRule } from '../../utils/rules';\n\nimport { useGrafanaGroupsGenerator, usePrometheusGroupsGenerator } from './prometheusGroupsGenerator';\n\nexport type RuleWithOrigin = PromRuleWithOrigin | GrafanaRuleWithOrigin;\n\nexport interface GrafanaRuleWithOrigin {\n  rule: GrafanaPromRuleDTO;\n  groupIdentifier: GrafanaRuleGroupIdentifier;\n  /**\n   * The name of the namespace that contains the rule group\n   * groupIdentifier contains the uid of the namespace, but not the user-friendly display name\n   */\n  namespaceName: string;\n  origin: 'grafana';\n}\n\nexport interface PromRuleWithOrigin {\n  rule: PromRuleDTO;\n  groupIdentifier: DataSourceRuleGroupIdentifier;\n  origin: 'datasource';\n}\n\nexport function useFilteredRulesIteratorProvider() {\n  const allExternalRulesSources = getExternalRulesSources();\n\n  const prometheusGroupsGenerator = usePrometheusGroupsGenerator();\n  const grafanaGroupsGenerator = useGrafanaGroupsGenerator();\n\n  const getFilteredRulesIterator = (filterState: RulesFilter, groupLimit: number): AsyncIterableX<RuleWithOrigin> => {\n    const normalizedFilterState = normalizeFilterState(filterState);\n\n    const ruleSourcesToFetchFrom = filterState.dataSourceNames.length\n      ? filterState.dataSourceNames.map<DataSourceRulesSourceIdentifier>((ds) => ({\n          name: ds,\n          uid: getDatasourceAPIUid(ds),\n          ruleSourceType: 'datasource',\n        }))\n      : allExternalRulesSources;\n\n    const grafanaIterator = from(grafanaGroupsGenerator(groupLimit)).pipe(\n      filter((group) => groupFilter(group, normalizedFilterState)),\n      flatMap((group) => group.rules.map((rule) => [group, rule] as const)),\n      filter(([_, rule]) => ruleFilter(rule, normalizedFilterState)),\n      map(([group, rule]) => mapGrafanaRuleToRuleWithOrigin(group, rule))\n    );\n\n    const [source, ...iterables] = ruleSourcesToFetchFrom.map((ds) => {\n      return from(prometheusGroupsGenerator(ds, groupLimit)).pipe(map((group) => [ds, group] as const));\n    });\n\n    const dataSourcesIterator = merge(source, ...iterables).pipe(\n      filter(([_, group]) => groupFilter(group, normalizedFilterState)),\n      flatMap(([rulesSource, group]) => group.rules.map((rule) => [rulesSource, group, rule] as const)),\n      filter(([_, __, rule]) => ruleFilter(rule, filterState)),\n      map(([rulesSource, group, rule]) => mapRuleToRuleWithOrigin(rulesSource, group, rule))\n    );\n\n    return merge(grafanaIterator, dataSourcesIterator);\n  };\n\n  return { getFilteredRulesIterator };\n}\n\nfunction mapRuleToRuleWithOrigin(\n  rulesSource: DataSourceRulesSourceIdentifier,\n  group: PromRuleGroupDTO,\n  rule: PromRuleDTO\n): PromRuleWithOrigin {\n  return {\n    rule,\n    groupIdentifier: {\n      rulesSource,\n      namespace: { name: group.file },\n      groupName: group.name,\n      groupOrigin: 'datasource',\n    },\n    origin: 'datasource',\n  };\n}\n\nfunction mapGrafanaRuleToRuleWithOrigin(\n  group: GrafanaPromRuleGroupDTO,\n  rule: GrafanaPromRuleDTO\n): GrafanaRuleWithOrigin {\n  return {\n    rule,\n    groupIdentifier: {\n      namespace: { uid: group.folderUid },\n      groupName: group.name,\n      groupOrigin: 'grafana',\n    },\n    namespaceName: group.file,\n    origin: 'grafana',\n  };\n}\n\n/**\n * Returns a new group with only the rules that match the filter.\n * @returns A new group with filtered rules, or undefined if the group does not match the filter or all rules are filtered out.\n */\nfunction groupFilter(group: PromRuleGroupDTO, filterState: RulesFilter): boolean {\n  const { name, file } = group;\n\n  // TODO Add fuzzy filtering or not\n  if (filterState.namespace && !file.toLowerCase().includes(filterState.namespace)) {\n    return false;\n  }\n\n  if (filterState.groupName && !name.toLowerCase().includes(filterState.groupName)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction ruleFilter(rule: PromRuleDTO, filterState: RulesFilter) {\n  const { name, labels = {}, health, type } = rule;\n\n  const nameLower = name.toLowerCase();\n\n  if (filterState.freeFormWords.length > 0 && !filterState.freeFormWords.some((word) => nameLower.includes(word))) {\n    return false;\n  }\n\n  if (filterState.ruleName && !nameLower.includes(filterState.ruleName)) {\n    return false;\n  }\n\n  if (filterState.labels.length > 0) {\n    const matchers = compact(filterState.labels.map(looseParseMatcher));\n    const doRuleLabelsMatchQuery = matchers.length > 0 && labelsMatchMatchers(labels, matchers);\n    if (!doRuleLabelsMatchQuery) {\n      return false;\n    }\n  }\n\n  if (filterState.ruleType && type !== filterState.ruleType) {\n    return false;\n  }\n\n  if (filterState.ruleState) {\n    if (!isAlertingRule(rule)) {\n      return false;\n    }\n    if (rule.state !== filterState.ruleState) {\n      return false;\n    }\n  }\n\n  if (filterState.ruleHealth && health !== filterState.ruleHealth) {\n    return false;\n  }\n\n  if (filterState.dashboardUid) {\n    return rule.labels ? rule.labels[Annotation.dashboardUID] === filterState.dashboardUid : false;\n  }\n\n  return true;\n}\n\n/**\n * Lowercase free form words, rule name, group name and namespace\n */\nfunction normalizeFilterState(filterState: RulesFilter): RulesFilter {\n  return {\n    ...filterState,\n    freeFormWords: filterState.freeFormWords.map((word) => word.toLowerCase()),\n    ruleName: filterState.ruleName?.toLowerCase(),\n    groupName: filterState.groupName?.toLowerCase(),\n    namespace: filterState.namespace?.toLowerCase(),\n  };\n}\n\nfunction looseParseMatcher(matcherQuery: string): Matcher | undefined {\n  try {\n    return parseMatcher(matcherQuery);\n  } catch {\n    // Try to createa a matcher than matches all values for a given key\n    return { name: matcherQuery, value: '', isRegex: true, isEqual: true };\n  }\n}\n","import { take, tap, withAbort } from 'ix/asynciterable/operators';\nimport { useEffect, useRef, useState, useTransition } from 'react';\n\nimport { Card, EmptyState, Stack, Text } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nimport { isLoading, useAsync } from '../hooks/useAsync';\nimport { RulesFilter } from '../search/rulesSearchParser';\nimport { hashRule } from '../utils/rule-id';\n\nimport { DataSourceRuleLoader } from './DataSourceRuleLoader';\nimport { GrafanaRuleLoader } from './GrafanaRuleLoader';\nimport LoadMoreHelper from './LoadMoreHelper';\nimport { UnknownRuleListItem } from './components/AlertRuleListItem';\nimport { AlertRuleListItemLoader } from './components/AlertRuleListItemLoader';\nimport {\n  GrafanaRuleWithOrigin,\n  PromRuleWithOrigin,\n  RuleWithOrigin,\n  useFilteredRulesIteratorProvider,\n} from './hooks/useFilteredRulesIterator';\n\ninterface FilterViewProps {\n  filterState: RulesFilter;\n}\n\nconst FRONTENT_PAGE_SIZE = 100;\nconst API_PAGE_SIZE = 2000;\n\nexport function FilterView({ filterState }: FilterViewProps) {\n  // ⚠️ We use a key to force the component to unmount and remount when the filter state changes\n  // filterState is a complex object including arrays and is constructed from URL params\n  // so even for the same params we get a new object or new properties in it\n  return <FilterViewResults filterState={filterState} key={JSON.stringify(filterState)} />;\n}\n\ntype KeyedRuleWithOrigin = RuleWithOrigin & {\n  /**\n   * Artificial frontend-only identifier for the rule.\n   * It's used as a key for the rule in the rule list to prevent key duplication\n   */\n  key: string;\n};\n\n/**\n * Renders the list of rules that match the filter.\n * It doesn't update results when the filter changes, use key property to force a remount with a new filter\n * Internally it needs to reset rules generator to get new results\n * While a bit counter-intuitive resetting using key simplifies a lot of logic in the component\n * The component implements infinite scrolling. It loads next page when the user scrolls to the bottom of the list\n */\nfunction FilterViewResults({ filterState }: FilterViewProps) {\n  const [transitionPending, startTransition] = useTransition();\n\n  /* this hook returns a function that creates an AsyncIterable<RuleWithOrigin> which we will use to populate the front-end */\n  const { getFilteredRulesIterator } = useFilteredRulesIteratorProvider();\n\n  /* this is the abort controller that allows us to stop an AsyncIterable */\n  const controller = useRef(new AbortController());\n\n  /**\n   * This an iterator that we can use to populate the search results.\n   * It also uses the signal from the AbortController above to cancel retrieving more results and sets up a\n   * callback function to detect when we've exhausted the source.\n   * This is the main AsyncIterable<RuleWithOrigin> we will use for the search results */\n  const rulesIterator = useRef(\n    getFilteredRulesIterator(filterState, API_PAGE_SIZE).pipe(\n      withAbort(controller.current.signal),\n      onFinished(() => setDoneSearching(true))\n    )\n  );\n\n  const [rules, setRules] = useState<KeyedRuleWithOrigin[]>([]);\n  const [doneSearching, setDoneSearching] = useState(false);\n\n  /* This function will fetch a page of results from the iterable */\n  const [{ execute: loadResultPage }, state] = useAsync(async () => {\n    for await (const rule of rulesIterator.current.pipe(take(FRONTENT_PAGE_SIZE))) {\n      startTransition(() => {\n        // Rule key could be computed on the fly, but we do it here to avoid recalculating it with each render\n        // It's a not trivial computation because it involves hashing the rule\n        setRules((rules) => rules.concat({ key: getRuleKey(rule), ...rule }));\n      });\n    }\n  });\n\n  /* When we unmount the component we make sure to abort all iterables */\n  useEffect(() => {\n    const currentAbortController = controller.current;\n\n    return () => {\n      currentAbortController.abort();\n    };\n  }, [controller]);\n\n  const loading = isLoading(state) || transitionPending;\n  const numberOfRules = rules.length;\n  const noRulesFound = numberOfRules === 0 && !loading;\n\n  /* If we don't have any rules and have exhausted all sources, show a EmptyState */\n  if (noRulesFound && doneSearching) {\n    return (\n      <EmptyState variant=\"not-found\" message=\"No matching rules found\">\n        <Trans i18nKey=\"alerting.rule-list.filter-view.no-rules-found\">\n          No alert or recording rules matched your current set of filters.\n        </Trans>\n      </EmptyState>\n    );\n  }\n\n  return (\n    <Stack direction=\"column\" gap={0}>\n      <ul aria-label=\"filtered-rule-list\">\n        {rules.map((ruleWithOrigin) => {\n          const { key, rule, groupIdentifier, origin } = ruleWithOrigin;\n\n          switch (origin) {\n            case 'grafana':\n              return (\n                <GrafanaRuleLoader\n                  key={key}\n                  rule={rule}\n                  groupIdentifier={groupIdentifier}\n                  namespaceName={ruleWithOrigin.namespaceName}\n                />\n              );\n            case 'datasource':\n              return <DataSourceRuleLoader key={key} rule={rule} groupIdentifier={groupIdentifier} />;\n            default:\n              return <UnknownRuleListItem key={key} rule={rule} groupIdentifier={groupIdentifier} />;\n          }\n        })}\n        {loading && (\n          <>\n            <AlertRuleListItemLoader />\n            <AlertRuleListItemLoader />\n          </>\n        )}\n      </ul>\n      {doneSearching && !noRulesFound && (\n        <Card>\n          <Text color=\"secondary\">\n            <Trans i18nKey=\"alerting.rule-list.filter-view.no-more-results\">\n              No more results – showing {{ numberOfRules }} rules\n            </Trans>\n          </Text>\n        </Card>\n      )}\n      {!doneSearching && !loading && <LoadMoreHelper handleLoad={loadResultPage} />}\n    </Stack>\n  );\n}\n\n// simple helper function to detect the end of the source async iterable\nfunction onFinished<T>(fn: () => void) {\n  return tap<T>(undefined, undefined, fn);\n}\n\nfunction getRuleKey(ruleWithOrigin: RuleWithOrigin): string {\n  if (ruleWithOrigin.origin === 'grafana') {\n    return getGrafanaRuleKey(ruleWithOrigin);\n  }\n  return getDataSourceRuleKey(ruleWithOrigin);\n}\n\nfunction getGrafanaRuleKey(ruleWithOrigin: GrafanaRuleWithOrigin) {\n  const {\n    groupIdentifier: { namespace, groupName },\n    rule,\n  } = ruleWithOrigin;\n  return `grafana-${namespace.uid}-${groupName}-${rule.uid}}`;\n}\n\nfunction getDataSourceRuleKey(ruleWithOrigin: PromRuleWithOrigin) {\n  const {\n    rule,\n    groupIdentifier: { rulesSource, namespace, groupName },\n  } = ruleWithOrigin;\n  return `${rulesSource.name}-${namespace.name}-${groupName}-${rule.name}-${rule.type}-${hashRule(rule)}`;\n}\n","import { css, cx } from '@emotion/css';\nimport { PropsWithChildren } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Badge, Button, Dropdown, Icon, Menu, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nimport { MetaText } from '../../components/MetaText';\nimport MoreButton from '../../components/MoreButton';\nimport { Spacer } from '../../components/Spacer';\n\ninterface EvaluationGroupProps extends PropsWithChildren {\n  name: string;\n  interval?: string;\n  provenance?: string;\n  isOpen?: boolean;\n  onToggle: () => void;\n}\n\nexport const EvaluationGroup = ({\n  name,\n  provenance,\n  interval,\n  onToggle,\n  isOpen = false,\n  children,\n}: EvaluationGroupProps) => {\n  const styles = useStyles2(getStyles);\n  const isProvisioned = Boolean(provenance);\n\n  return (\n    <Stack direction=\"column\" role=\"treeitem\" aria-expanded={isOpen} aria-selected=\"false\" gap={0}>\n      <div className={styles.headerWrapper}>\n        <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n          <button className={cx(styles.hiddenButton, styles.largerClickTarget)} type=\"button\" onClick={onToggle}>\n            <Stack alignItems=\"center\" gap={0.5}>\n              <Icon name={isOpen ? 'angle-down' : 'angle-right'} />\n              <Text truncate variant=\"body\">\n                {name}\n              </Text>\n            </Stack>\n          </button>\n          {isProvisioned && <Badge color=\"purple\" text=\"Provisioned\" />}\n          <Spacer />\n          {interval && <MetaText icon=\"history\">{interval}</MetaText>}\n          <Button size=\"sm\" icon=\"pen\" variant=\"secondary\" disabled={isProvisioned} data-testid=\"edit-group-action\">\n            <Trans i18nKey=\"common.edit\">Edit</Trans>\n          </Button>\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item label=\"Re-order rules\" icon=\"flip\" disabled={isProvisioned} />\n                <Menu.Divider />\n                <Menu.Item label=\"Export\" icon=\"download-alt\" />\n                <Menu.Item label=\"Delete\" icon=\"trash-alt\" destructive disabled={isProvisioned} />\n              </Menu>\n            }\n          >\n            <MoreButton size=\"sm\" />\n          </Dropdown>\n        </Stack>\n      </div>\n      {isOpen && <div role=\"group\">{children}</div>}\n    </Stack>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  headerWrapper: css({\n    padding: `${theme.spacing(1)} ${theme.spacing(1)}`,\n\n    background: theme.colors.background.secondary,\n\n    border: 'none',\n    borderBottom: `solid 1px ${theme.colors.border.weak}`,\n    borderTopLeftRadius: theme.shape.radius.default,\n    borderTopRightRadius: theme.shape.radius.default,\n  }),\n  hiddenButton: css({\n    border: 'none',\n    background: 'transparent',\n  }),\n  largerClickTarget: css({\n    padding: theme.spacing(0.5),\n    margin: `-${theme.spacing(0.5)}`,\n  }),\n});\n","import { useEffect } from 'react';\nimport { useMeasure, useToggle } from 'react-use';\n\nimport { Alert, LoadingBar, Pagination } from '@grafana/ui';\nimport { RulerDataSourceConfig } from 'app/types/unified-alerting';\nimport { PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { alertRuleApi } from '../../api/alertRuleApi';\nimport { usePagination } from '../../hooks/usePagination';\nimport { isAlertingRule } from '../../utils/rules';\n\nimport { AlertRuleListItem } from './AlertRuleListItem';\nimport { EvaluationGroup } from './EvaluationGroup';\nimport { SkeletonListItem } from './ListItem';\n\ninterface EvaluationGroupLoaderProps {\n  name: string;\n  interval?: string;\n  provenance?: string;\n  namespace: string;\n  rulerConfig?: RulerDataSourceConfig;\n}\n\nconst ALERT_RULE_PAGE_SIZE = 15;\n\nexport const EvaluationGroupLoader = ({\n  name,\n  provenance,\n  interval,\n  namespace,\n  rulerConfig,\n}: EvaluationGroupLoaderProps) => {\n  const [isOpen, toggle] = useToggle(false);\n\n  // TODO use Prometheus endpoint here?\n  const [fetchRulerRuleGroup, { currentData: promNamespace, isLoading, error }] =\n    alertRuleApi.endpoints.prometheusRuleNamespaces.useLazyQuery();\n\n  const promRules = promNamespace?.flatMap((namespace) => namespace.groups).flatMap((groups) => groups.rules);\n  const { page, pageItems, onPageChange, numberOfPages } = usePagination(promRules ?? [], 1, ALERT_RULE_PAGE_SIZE);\n\n  useEffect(() => {\n    if (isOpen && rulerConfig) {\n      fetchRulerRuleGroup({\n        namespace,\n        groupName: name,\n        ruleSourceName: rulerConfig.dataSourceName,\n      });\n    }\n  }, [fetchRulerRuleGroup, isOpen, name, namespace, rulerConfig]);\n\n  return (\n    <EvaluationGroup name={name} interval={interval} provenance={provenance} isOpen={isOpen} onToggle={toggle}>\n      {/* @TODO nicer error handling */}\n      {error ? (\n        <Alert title=\"Something went wrong when trying to fetch group details\">{String(error)}</Alert>\n      ) : (\n        <>\n          {isLoading ? (\n            <GroupLoadingIndicator />\n          ) : (\n            pageItems.map((rule, index) => {\n              <AlertRuleListItem\n                key={index}\n                state={PromAlertingRuleState.Inactive}\n                name={rule.name}\n                href={'/'}\n                summary={isAlertingRule(rule) ? rule.annotations?.summary : undefined}\n              />;\n\n              return null;\n            })\n          )}\n          {numberOfPages > 1 && (\n            <Pagination currentPage={page} numberOfPages={numberOfPages} onNavigate={onPageChange} />\n          )}\n        </>\n      )}\n    </EvaluationGroup>\n  );\n};\n\nexport const LoadingIndicator = ({ datasourceUid }: { datasourceUid: string }) => {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n\n  return (\n    <div ref={ref} data-testid={`ds-loading-indicator-${datasourceUid}`}>\n      <LoadingBar width={width} />\n    </div>\n  );\n};\n\nconst GroupLoadingIndicator = () => {\n  const [ref, { width }] = useMeasure<HTMLDivElement>();\n\n  return (\n    <div ref={ref}>\n      <LoadingBar width={width} />\n      <SkeletonListItem />\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, LinkButton, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { GrafanaRulesSourceSymbol, RulesSourceIdentifier } from 'app/types/unified-alerting';\nimport { RulesSourceApplication } from 'app/types/unified-alerting-dto';\n\nimport { Spacer } from '../../components/Spacer';\nimport { WithReturnButton } from '../../components/WithReturnButton';\nimport { isAdmin } from '../../utils/misc';\n\nimport { DataSourceIcon } from './Namespace';\nimport { LoadingIndicator } from './RuleGroup';\n\nexport interface DataSourceSectionProps extends PropsWithChildren {\n  uid: RulesSourceIdentifier['uid'];\n  name: string;\n  loader?: ReactNode;\n  application?: RulesSourceApplication;\n  isLoading?: boolean;\n  description?: ReactNode;\n}\n\nexport const DataSourceSection = ({\n  uid,\n  name,\n  application,\n  children,\n  loader,\n  isLoading = false,\n  description = null,\n}: DataSourceSectionProps) => {\n  const styles = useStyles2(getStyles);\n  const [isCollapsed, toggleCollapsed] = useToggle(false);\n  const configureLink = (() => {\n    if (uid === GrafanaRulesSourceSymbol) {\n      const userIsAdmin = isAdmin();\n      if (!userIsAdmin) {\n        return;\n      }\n      return '/alerting/admin';\n    }\n    return `/connections/datasources/edit/${String(uid)}`;\n  })();\n  return (\n    <section aria-labelledby={`datasource-${String(uid)}-heading`} role=\"listitem\">\n      <Stack direction=\"column\" gap={1}>\n        <Stack direction=\"column\" gap={0}>\n          {isLoading && <LoadingIndicator datasourceUid={String(uid)} />}\n          <div className={styles.dataSourceSectionTitle}>\n            {loader ?? (\n              <Stack alignItems=\"center\">\n                <IconButton\n                  name={isCollapsed ? 'angle-right' : 'angle-down'}\n                  onClick={toggleCollapsed}\n                  aria-label={t('common.collapse', 'Collapse')}\n                />\n                {application && <DataSourceIcon application={application} />}\n\n                <Text variant=\"body\" weight=\"bold\" element=\"h2\" id={`datasource-${String(uid)}-heading`}>\n                  {name}\n                </Text>\n                {description && (\n                  <>\n                    {'·'}\n                    {description}\n                  </>\n                )}\n                <Spacer />\n                {configureLink && (\n                  <WithReturnButton\n                    title={t('alerting.rule-list.return-button.title', 'Alert rules')}\n                    component={\n                      <LinkButton variant=\"secondary\" size=\"sm\" href={configureLink}>\n                        <Trans i18nKey=\"alerting.rule-list.configure-datasource\">Configure</Trans>\n                      </LinkButton>\n                    }\n                  />\n                )}\n              </Stack>\n            )}\n          </div>\n        </Stack>\n        {!isCollapsed && <div className={styles.itemsWrapper}>{children}</div>}\n      </Stack>\n    </section>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  itemsWrapper: css({\n    position: 'relative',\n    marginLeft: theme.spacing(1.5),\n\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      height: '100%',\n\n      marginLeft: `-${theme.spacing(1.5)}`,\n      borderLeft: `solid 1px ${theme.colors.border.weak}`,\n    },\n  }),\n  dataSourceSectionTitle: css({\n    background: theme.colors.background.secondary,\n    padding: `${theme.spacing(1)} ${theme.spacing(1.5)}`,\n\n    border: `solid 1px ${theme.colors.border.weak}`,\n    borderRadius: theme.shape.radius.default,\n  }),\n});\n","import { Button, Icon, Stack } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\ninterface LazyPaginationProps {\n  canMoveForward: boolean;\n  canMoveBackward: boolean;\n  nextPage: () => void;\n  previousPage: () => void;\n}\n\nexport function LazyPagination({ canMoveForward, canMoveBackward, nextPage, previousPage }: LazyPaginationProps) {\n  return (\n    <Stack direction=\"row\" gap={1}>\n      <Button\n        aria-label={t('alerting.rule-list.pagination.previous-page', 'previous page')}\n        size=\"sm\"\n        variant=\"secondary\"\n        onClick={previousPage}\n        disabled={!canMoveBackward}\n      >\n        <Icon name=\"angle-left\" />\n      </Button>\n      <Button\n        aria-label={t('alerting.rule-list.pagination.next-page', 'next page')}\n        size=\"sm\"\n        variant=\"secondary\"\n        onClick={nextPage}\n        disabled={!canMoveForward}\n      >\n        <Icon name=\"angle-right\" />\n      </Button>\n    </Stack>\n  );\n}\n","import { css } from '@emotion/css';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { useToggle } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { IconButton, Stack, Text, useStyles2 } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nimport { Spacer } from '../../components/Spacer';\n\ninterface GroupProps extends PropsWithChildren {\n  name: string;\n  description?: ReactNode;\n  metaRight?: ReactNode;\n  actions?: ReactNode;\n  isOpen?: boolean;\n}\n\nexport const ListGroup = ({\n  name,\n  description,\n  isOpen = true,\n  metaRight = null,\n  actions = null,\n  children,\n}: GroupProps) => {\n  const styles = useStyles2(getStyles);\n  const [open, toggle] = useToggle(isOpen);\n\n  return (\n    <div className={styles.groupWrapper} role=\"treeitem\" aria-expanded={open} aria-selected=\"false\">\n      <GroupHeader\n        onToggle={() => toggle()}\n        isOpen={open}\n        description={description}\n        name={name}\n        metaRight={metaRight}\n        actions={actions}\n      />\n      {open && <div role=\"group\">{children}</div>}\n    </div>\n  );\n};\n\ntype GroupHeaderProps = GroupProps & {\n  onToggle: () => void;\n};\n\nconst GroupHeader = (props: GroupHeaderProps) => {\n  const { name, description, metaRight = null, actions = null, isOpen = false, onToggle } = props;\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.headerWrapper}>\n      <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n        <Stack alignItems=\"center\" gap={0}>\n          <IconButton\n            name={isOpen ? 'angle-down' : 'angle-right'}\n            onClick={onToggle}\n            aria-label={t('common.collapse', 'Collapse')}\n          />\n          <Text truncate variant=\"body\" element=\"h4\">\n            {name}\n          </Text>\n        </Stack>\n\n        {description}\n        <Spacer />\n        {metaRight}\n        {actions}\n      </Stack>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  groupWrapper: css({\n    display: 'flex',\n    flexDirection: 'column',\n  }),\n  headerWrapper: css({\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`,\n\n    background: theme.colors.background.secondary,\n\n    border: 'none',\n    borderBottom: `solid 1px ${theme.colors.border.weak}`,\n    borderTopLeftRadius: theme.shape.radius.default,\n    borderTopRightRadius: theme.shape.radius.default,\n  }),\n});\n","import { Dropdown, IconButton, Menu } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nexport function RuleGroupActionsMenu() {\n  return (\n    <>\n      <Dropdown\n        overlay={\n          <Menu>\n            <Menu.Item label={t('alerting.group-actions.edit', 'Edit')} icon=\"pen\" data-testid=\"edit-group-action\" />\n            <Menu.Item label={t('alerting.group-actions.reorder', 'Re-order rules')} icon=\"flip\" />\n            <Menu.Divider />\n            <Menu.Item label={t('alerting.group-actions.export', 'Export')} icon=\"download-alt\" />\n            <Menu.Item label={t('alerting.group-actions.delete', 'Delete')} icon=\"trash-alt\" destructive />\n          </Menu>\n        }\n      >\n        <IconButton name=\"ellipsis-h\" aria-label={t('alerting.group-actions.actions-trigger', 'Rule group actions')} />\n      </Dropdown>\n    </>\n  );\n}\n","import { useCallback, useMemo, useState } from 'react';\n\nimport { PromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { isLoading, useAsync } from '../../hooks/useAsync';\n\n/**\n * Provides pagination functionality for rule groups with lazy loading.\n * Instead of loading all groups at once, it uses a generator to fetch them in batches as needed,\n * which helps with performance when dealing with large numbers of rules.\n *\n * @param groupsGenerator - An async generator that yields rule groups in batches\n * @param pageSize - Number of groups to display per page\n * @returns Pagination state and controls for navigating through rule groups\n */\nexport function usePaginatedPrometheusGroups<TGroup extends PromRuleGroupDTO>(\n  groupsGenerator: AsyncGenerator<TGroup, void, unknown>,\n  pageSize: number\n) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [groups, setGroups] = useState<TGroup[]>([]);\n  const [lastPage, setLastPage] = useState<number | undefined>(undefined);\n\n  const [{ execute: fetchMoreGroups }, groupsRequestState] = useAsync(async (groupsCount: number) => {\n    let done = false;\n    const currentGroups: TGroup[] = [];\n\n    while (currentGroups.length < groupsCount) {\n      const generatorResult = await groupsGenerator.next();\n      if (generatorResult.done) {\n        done = true;\n        break;\n      }\n      const group = generatorResult.value;\n      currentGroups.push(group);\n    }\n\n    if (done) {\n      const groupsTotal = groups.length + currentGroups.length;\n      setLastPage(Math.ceil(groupsTotal / pageSize));\n    }\n\n    setGroups((groups) => [...groups, ...currentGroups]);\n  });\n\n  // lastPage could be computed from groups.length and pageSize\n  const fetchInProgress = isLoading(groupsRequestState);\n  const canMoveForward = !fetchInProgress && (!lastPage || currentPage < lastPage);\n  // When going backward we already have the groups loaded, so no need to check if fetchInProgress\n  const canMoveBackward = currentPage > 1;\n\n  const nextPage = useCallback(async () => {\n    if (canMoveForward) {\n      setCurrentPage((page) => page + 1);\n    }\n  }, [canMoveForward]);\n\n  const previousPage = useCallback(async () => {\n    if (canMoveBackward) {\n      setCurrentPage((page) => page - 1);\n    }\n  }, [canMoveBackward]);\n\n  // groups.length - pageSize to have one more page loaded to prevent flickering with loading state\n  // lastPage === undefined because 0 is falsy but a value which should stop fetching (e.g for broken data sources)\n  const shouldFetchNextPage = groups.length - pageSize < pageSize * currentPage && lastPage === undefined;\n\n  if (shouldFetchNextPage && !fetchInProgress) {\n    fetchMoreGroups(pageSize);\n  }\n\n  const groupsPage = useMemo(() => {\n    return groups.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n  }, [groups, currentPage, pageSize]);\n\n  return { isLoading: fetchInProgress, page: groupsPage, nextPage, previousPage, canMoveForward, canMoveBackward };\n}\n","import { groupBy } from 'lodash';\nimport { useEffect, useMemo, useRef } from 'react';\n\nimport { Icon, Stack, Text } from '@grafana/ui';\nimport { DataSourceRuleGroupIdentifier, DataSourceRulesSourceIdentifier, RuleGroup } from 'app/types/unified-alerting';\n\nimport { hashRule } from '../utils/rule-id';\n\nimport { DataSourceRuleLoader } from './DataSourceRuleLoader';\nimport { DataSourceSection, DataSourceSectionProps } from './components/DataSourceSection';\nimport { LazyPagination } from './components/LazyPagination';\nimport { ListGroup } from './components/ListGroup';\nimport { ListSection } from './components/ListSection';\nimport { RuleGroupActionsMenu } from './components/RuleGroupActionsMenu';\nimport { usePrometheusGroupsGenerator } from './hooks/prometheusGroupsGenerator';\nimport { usePaginatedPrometheusGroups } from './hooks/usePaginatedPrometheusGroups';\n\nconst DATA_SOURCE_GROUP_PAGE_SIZE = 40;\n\ninterface PaginatedDataSourceLoaderProps extends Required<Pick<DataSourceSectionProps, 'application'>> {\n  rulesSourceIdentifier: DataSourceRulesSourceIdentifier;\n}\nexport function PaginatedDataSourceLoader({ rulesSourceIdentifier, application }: PaginatedDataSourceLoaderProps) {\n  const { uid, name } = rulesSourceIdentifier;\n  const prometheusGroupsGenerator = usePrometheusGroupsGenerator();\n\n  const groupsGenerator = useRef(prometheusGroupsGenerator(rulesSourceIdentifier, DATA_SOURCE_GROUP_PAGE_SIZE));\n\n  useEffect(() => {\n    const currentGenerator = groupsGenerator.current;\n    return () => {\n      currentGenerator.return();\n    };\n  }, [groupsGenerator]);\n\n  const {\n    page: groupsPage,\n    nextPage,\n    previousPage,\n    canMoveForward,\n    canMoveBackward,\n    isLoading,\n  } = usePaginatedPrometheusGroups(groupsGenerator.current, DATA_SOURCE_GROUP_PAGE_SIZE);\n\n  const groupsByNamespace = useMemo(() => groupBy(groupsPage, 'file'), [groupsPage]);\n\n  return (\n    <DataSourceSection name={name} application={application} uid={uid} isLoading={isLoading}>\n      <Stack direction=\"column\" gap={1}>\n        {Object.entries(groupsByNamespace).map(([namespace, groups]) => (\n          <ListSection\n            key={namespace}\n            title={\n              <Stack direction=\"row\" gap={1} alignItems=\"center\">\n                <Icon name=\"folder\" />{' '}\n                <Text variant=\"body\" element=\"h3\">\n                  {namespace}\n                </Text>\n              </Stack>\n            }\n          >\n            {groups.map((group) => (\n              <RuleGroupListItem\n                key={`${rulesSourceIdentifier.uid}-${namespace}-${group.name}`}\n                group={group}\n                rulesSourceIdentifier={rulesSourceIdentifier}\n                namespaceName={namespace}\n              />\n            ))}\n          </ListSection>\n        ))}\n        <LazyPagination\n          nextPage={nextPage}\n          previousPage={previousPage}\n          canMoveForward={canMoveForward}\n          canMoveBackward={canMoveBackward}\n        />\n      </Stack>\n    </DataSourceSection>\n  );\n}\n\ninterface RuleGroupListItemProps {\n  group: RuleGroup;\n  rulesSourceIdentifier: DataSourceRulesSourceIdentifier;\n  namespaceName: string;\n}\nfunction RuleGroupListItem({ rulesSourceIdentifier, group, namespaceName }: RuleGroupListItemProps) {\n  const rulesWithGroupId = useMemo(() => {\n    return group.rules.map((rule) => {\n      const groupIdentifier: DataSourceRuleGroupIdentifier = {\n        rulesSource: rulesSourceIdentifier,\n        namespace: { name: namespaceName },\n        groupName: group.name,\n        groupOrigin: 'datasource',\n      };\n      return { rule, groupIdentifier };\n    });\n  }, [group, namespaceName, rulesSourceIdentifier]);\n\n  return (\n    <ListGroup key={group.name} name={group.name} isOpen={false} actions={<RuleGroupActionsMenu />}>\n      {rulesWithGroupId.map(({ rule, groupIdentifier }) => (\n        <DataSourceRuleLoader key={hashRule(rule)} rule={rule} groupIdentifier={groupIdentifier} />\n      ))}\n    </ListGroup>\n  );\n}\n","import { groupBy } from 'lodash';\nimport { useEffect, useMemo, useRef } from 'react';\n\nimport { Icon, Stack, Text } from '@grafana/ui';\nimport { GrafanaRuleGroupIdentifier, GrafanaRulesSourceSymbol } from 'app/types/unified-alerting';\nimport { GrafanaPromRuleGroupDTO } from 'app/types/unified-alerting-dto';\n\nimport { GrafanaRuleLoader } from './GrafanaRuleLoader';\nimport { DataSourceSection } from './components/DataSourceSection';\nimport { LazyPagination } from './components/LazyPagination';\nimport { ListGroup } from './components/ListGroup';\nimport { ListSection } from './components/ListSection';\nimport { RuleGroupActionsMenu } from './components/RuleGroupActionsMenu';\nimport { useGrafanaGroupsGenerator } from './hooks/prometheusGroupsGenerator';\nimport { usePaginatedPrometheusGroups } from './hooks/usePaginatedPrometheusGroups';\n\nconst GRAFANA_GROUP_PAGE_SIZE = 40;\n\nexport function PaginatedGrafanaLoader() {\n  const grafanaGroupsGenerator = useGrafanaGroupsGenerator();\n\n  const groupsGenerator = useRef(grafanaGroupsGenerator(GRAFANA_GROUP_PAGE_SIZE));\n\n  useEffect(() => {\n    const currentGenerator = groupsGenerator.current;\n    return () => {\n      currentGenerator.return();\n    };\n  }, []);\n\n  const {\n    page: groupsPage,\n    nextPage,\n    previousPage,\n    canMoveForward,\n    canMoveBackward,\n    isLoading,\n  } = usePaginatedPrometheusGroups(groupsGenerator.current, GRAFANA_GROUP_PAGE_SIZE);\n\n  const groupsByFolder = useMemo(() => groupBy(groupsPage, 'folderUid'), [groupsPage]);\n\n  return (\n    <DataSourceSection name=\"Grafana\" application=\"grafana\" uid={GrafanaRulesSourceSymbol} isLoading={isLoading}>\n      <Stack direction=\"column\" gap={1}>\n        {Object.entries(groupsByFolder).map(([folderUid, groups]) => {\n          // Groups are grouped by folder, so we can use the first group to get the folder name\n          const folderName = groups[0].file;\n          return (\n            <ListSection\n              key={folderUid}\n              title={\n                <Stack direction=\"row\" gap={1} alignItems=\"center\">\n                  <Icon name=\"folder\" />{' '}\n                  <Text variant=\"body\" element=\"h3\">\n                    {folderName}\n                  </Text>\n                </Stack>\n              }\n            >\n              {groups.map((group) => (\n                <GrafanaRuleGroupListItem\n                  key={`grafana-ns-${folderUid}-${group.name}`}\n                  group={group}\n                  namespaceName={folderName}\n                />\n              ))}\n            </ListSection>\n          );\n        })}\n        <LazyPagination\n          nextPage={nextPage}\n          previousPage={previousPage}\n          canMoveForward={canMoveForward}\n          canMoveBackward={canMoveBackward}\n        />\n      </Stack>\n    </DataSourceSection>\n  );\n}\n\ninterface GrafanaRuleGroupListItemProps {\n  group: GrafanaPromRuleGroupDTO;\n  namespaceName: string;\n}\nexport function GrafanaRuleGroupListItem({ group, namespaceName }: GrafanaRuleGroupListItemProps) {\n  const groupIdentifier: GrafanaRuleGroupIdentifier = {\n    groupName: group.name,\n    namespace: {\n      uid: group.folderUid,\n    },\n    groupOrigin: 'grafana',\n  };\n\n  return (\n    <ListGroup key={group.name} name={group.name} isOpen={false} actions={<RuleGroupActionsMenu />}>\n      {group.rules.map((rule) => {\n        return (\n          <GrafanaRuleLoader\n            key={rule.uid}\n            rule={rule}\n            namespaceName={namespaceName}\n            groupIdentifier={groupIdentifier}\n          />\n        );\n      })}\n    </ListGroup>\n  );\n}\n","import { Alert, ErrorBoundary, ErrorWithStack, Text } from '@grafana/ui';\nimport { Trans, t } from 'app/core/internationalization';\nimport { RulesSourceIdentifier } from 'app/types/unified-alerting';\n\nimport { DataSourceSection } from './DataSourceSection';\n\n/**\n * Some more exotic Prometheus data sources might not be 100% compatible with Prometheus API\n * We don't want them to break the whole page, so we wrap them in an error boundary\n */\n\nexport function DataSourceErrorBoundary({\n  children,\n  rulesSourceIdentifier,\n}: {\n  children: React.ReactNode;\n  rulesSourceIdentifier: RulesSourceIdentifier;\n}) {\n  return (\n    <ErrorBoundary>\n      {({ error, errorInfo }) => {\n        if (error || errorInfo) {\n          const { uid, name } = rulesSourceIdentifier;\n          return (\n            <DataSourceSection uid={uid} name={name}>\n              <Alert\n                title={t('alerting.rule-list.ds-error-boundary.title', 'Unable to load rules from this data source')}\n              >\n                <Text>\n                  <Trans i18nKey=\"alerting.rule-list.ds-error-boundary.description\">\n                    Check the data source configuration. Does the data source support Prometheus API?\n                  </Trans>\n                </Text>\n                <ErrorWithStack\n                  error={error}\n                  errorInfo={errorInfo}\n                  title={t('alerting.rule-list.ds-error-boundary.title', 'Unable to load rules from this data source')}\n                />\n              </Alert>\n            </DataSourceSection>\n          );\n        }\n        return children;\n      }}\n    </ErrorBoundary>\n  );\n}\n","import { useMemo } from 'react';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { Stack } from '@grafana/ui';\nimport { DataSourceRulesSourceIdentifier } from 'app/types/unified-alerting';\n\nimport { featureDiscoveryApi } from '../api/featureDiscoveryApi';\nimport { GrafanaRulesSource, getExternalRulesSources } from '../utils/datasource';\n\nimport { PaginatedDataSourceLoader } from './PaginatedDataSourceLoader';\nimport { PaginatedGrafanaLoader } from './PaginatedGrafanaLoader';\nimport { DataSourceErrorBoundary } from './components/DataSourceErrorBoundary';\nimport { DataSourceSection } from './components/DataSourceSection';\n\nconst { useDiscoverDsFeaturesQuery } = featureDiscoveryApi;\n\nexport function GroupedView() {\n  const externalRuleSources = useMemo(() => getExternalRulesSources(), []);\n\n  return (\n    <Stack direction=\"column\" gap={1} role=\"list\">\n      <DataSourceErrorBoundary rulesSourceIdentifier={GrafanaRulesSource}>\n        <PaginatedGrafanaLoader />\n      </DataSourceErrorBoundary>\n      {externalRuleSources.map((ruleSource) => {\n        return <DataSourceLoader key={ruleSource.uid} rulesSourceIdentifier={ruleSource} />;\n      })}\n    </Stack>\n  );\n}\n\ninterface DataSourceLoaderProps {\n  rulesSourceIdentifier: DataSourceRulesSourceIdentifier;\n}\n\nexport function GrafanaDataSourceLoader() {\n  return <DataSourceSection name=\"Grafana\" application=\"grafana\" uid=\"grafana\" isLoading={true} />;\n}\n\nfunction DataSourceLoader({ rulesSourceIdentifier }: DataSourceLoaderProps) {\n  const { data: dataSourceInfo, isLoading } = useDiscoverDsFeaturesQuery({ uid: rulesSourceIdentifier.uid });\n\n  const { uid, name } = rulesSourceIdentifier;\n\n  if (isLoading) {\n    return <DataSourceSection loader={<Skeleton width={250} height={16} />} uid={uid} name={name} />;\n  }\n\n  // 2. grab prometheus rule groups with max_groups if supported\n  if (dataSourceInfo) {\n    return (\n      <DataSourceErrorBoundary rulesSourceIdentifier={rulesSourceIdentifier}>\n        <PaginatedDataSourceLoader\n          key={rulesSourceIdentifier.uid}\n          rulesSourceIdentifier={rulesSourceIdentifier}\n          application={dataSourceInfo.application}\n        />\n      </DataSourceErrorBoundary>\n    );\n  }\n\n  return null;\n}\n","import { AlertingPageWrapper } from '../components/AlertingPageWrapper';\nimport RulesFilter from '../components/rules/Filter/RulesFilter';\nimport { SupportedView } from '../components/rules/Filter/RulesViewModeSelector';\nimport { useRulesFilter } from '../hooks/useFilteredRules';\nimport { useURLSearchParams } from '../hooks/useURLSearchParams';\n\nimport { FilterView } from './FilterView';\nimport { GroupedView } from './GroupedView';\n\nfunction RuleList() {\n  const [queryParams] = useURLSearchParams();\n  const { filterState, hasActiveFilters } = useRulesFilter();\n\n  const view: SupportedView = queryParams.get('view') === 'list' ? 'list' : 'grouped';\n  const showListView = hasActiveFilters || view === 'list';\n\n  return (\n    <>\n      <RulesFilter onClear={() => {}} />\n      {showListView ? <FilterView filterState={filterState} /> : <GroupedView />}\n    </>\n  );\n}\n\nexport default function RuleListPage() {\n  return (\n    <AlertingPageWrapper navId=\"alert-list\" isLoading={false} actions={null}>\n      <RuleList />\n    </AlertingPageWrapper>\n  );\n}\n"],"names":["RulesFilterV2","props","newView","config","bindCallback","func","thisArg","argCount","arg","value","index","collection","identity","x","identityAsync","isNumber","isBoolean","isFunction","isObject","isPromise","isArrayLike","isIterable","isIterator","isAsyncIterable","isObservable","isReadableNodeStream","isWritableNodeStream","isReadableDOMStream","isWritableDOMStream","isFetchResponse","toInteger","number","maxSafeInteger","toLength","len","AbortError","message","throwIfAborted","signal","AsyncIterableX","projection","_a","e_1","_b","_c","source","WithAbortAsyncIterable","i","_d","source_1","source_1_1","item","e_1_1","args","n","acc","selector","fn","FromAsyncIterable","FromPromiseIterable","FromObservableAsyncIterable","FromArrayIterable","inst","ARRAY_VALUE","ARRAY_ERROR","AsyncSink","error","resolve","reject","type","length","e_2","_e","e_3","_f","_g","_h","_j","_k","e_2_1","_l","_m","_o","e_3_1","observable","sink","subscription","err","onAbort","next","isBrowser","nodePipe","readableOpts","opts","end","prev","as","from","withAbort","wrapWithAbort","TakeAsyncIterable","count","take","noop","_","toObserver","complete","observer","e","returnIterator","it","returnAsyncIterator","TapAsyncIterable","obs","res","tap","observerOrNext","RuleActionsButtons","compact","rule","promRule","groupIdentifier","redirectToListView","deleteModal","showDeleteModal","showSilenceDrawer","setShowSilenceDrawer","redirectToClone","setRedirectToClone","isProvisioned","editRuleSupported","editRuleAllowed","canEditRule","buttons","buttonSize","identifier","editURL","AlertRuleMenu","SilenceGrafanaRuleDrawer","RuleActionsSkeleton","useDiscoverDsFeaturesQuery","featureDiscoveryApi","useGetRuleGroupForNamespaceQuery","DataSourceRuleLoader","rulesSource","namespace","groupName","ruleIdentifier","href","createViewLinkFromIdentifier","originMeta","dataSourceInfo","isLoading","rulerRuleGroup","rulerRule","actions","returnTo","paramId","paramSource","AlertRuleListItemLoader","ListItem","RuleListIcon","RulerRuleLoadingError","useGetGrafanaRulerGroupQuery","GrafanaRuleLoader","namespaceName","isError","title","provenance","is_paused","annotations","labels","commonProps","useIntersection","ref","options","intersectionObserverEntry","setIntersectionObserverEntry","handler","entries","observer_1","LoadMoreHelper","handleLoad","intersectionRef","intersection","isPrimitive","wm","safeRace","contenders","deferred","contender","record","NEVER_PROMISE","wrapPromiseWithIndex","promise","done","MergeAsyncIterable","iterators","nexts","active","iterator","iterator$","merge","FilterAsyncIterable","predicate","filter","ignoreInnerAbortErrors","wrapIterator","FlattenConcurrentAsyncIterable","_source","_selector","_concurrent","_switchMode","_thisArg","outerSignal","outerIndex","outerComplete","switchMode","concurrent","outerValues","innerIndices","controllers","inners","outer","results","pullNextOuter","inner","controller","outerValue","innerSignal","wrapAndPullInner","flatMap","MapAsyncIterable","result","map","prometheusApi","alertingApi","build","ruleSource","ruleName","groupLimit","excludeAlerts","groupNextToken","response","useLazyGetGroupsQuery","useLazyGetGrafanaGroupsQuery","usePrometheusGroupsGenerator","getGroups","genericGroupsGenerator","useGrafanaGroupsGenerator","getGrafanaGroups","fetchGroups","lastToken","useFilteredRulesIteratorProvider","allExternalRulesSources","prometheusGroupsGenerator","grafanaGroupsGenerator","filterState","normalizedFilterState","normalizeFilterState","ruleSourcesToFetchFrom","ds","grafanaIterator","group","groupFilter","ruleFilter","mapGrafanaRuleToRuleWithOrigin","iterables","dataSourcesIterator","__","mapRuleToRuleWithOrigin","name","file","health","nameLower","word","matchers","looseParseMatcher","matcherQuery","FRONTENT_PAGE_SIZE","API_PAGE_SIZE","FilterView","FilterViewResults","transitionPending","startTransition","getFilteredRulesIterator","rulesIterator","onFinished","setDoneSearching","rules","setRules","doneSearching","loadResultPage","state","useAsync","getRuleKey","currentAbortController","loading","numberOfRules","noRulesFound","EmptyState","ruleWithOrigin","key","origin","Card","getGrafanaRuleKey","getDataSourceRuleKey","interval","onToggle","isOpen","children","styles","getStyles","theme","ALERT_RULE_PAGE_SIZE","EvaluationGroupLoader","rulerConfig","toggle","fetchRulerRuleGroup","promNamespace","promRules","groups","page","pageItems","onPageChange","numberOfPages","GroupLoadingIndicator","LoadingIndicator","datasourceUid","width","uid","application","loader","description","isCollapsed","toggleCollapsed","configureLink","IconButton","WithReturnButton","LazyPagination","canMoveForward","canMoveBackward","nextPage","previousPage","ListGroup","metaRight","open","GroupHeader","RuleGroupActionsMenu","usePaginatedPrometheusGroups","groupsGenerator","pageSize","currentPage","setCurrentPage","setGroups","lastPage","setLastPage","fetchMoreGroups","groupsRequestState","groupsCount","currentGroups","generatorResult","groupsTotal","fetchInProgress","groupsPage","DATA_SOURCE_GROUP_PAGE_SIZE","PaginatedDataSourceLoader","rulesSourceIdentifier","currentGenerator","groupsByNamespace","ListSection","RuleGroupListItem","rulesWithGroupId","GRAFANA_GROUP_PAGE_SIZE","PaginatedGrafanaLoader","groupsByFolder","folderUid","folderName","GrafanaRuleGroupListItem","DataSourceErrorBoundary","ErrorBoundary","errorInfo","ErrorWithStack","GroupedView","externalRuleSources","DataSourceLoader","GrafanaDataSourceLoader","RuleList","queryParams","useURLSearchParams","hasActiveFilters","view","showListView","RuleListPage","AlertingPageWrapper"],"sourceRoot":""}